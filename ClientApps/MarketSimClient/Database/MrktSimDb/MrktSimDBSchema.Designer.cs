//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace MrktSimDb {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("MrktSimDBSchema")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class MrktSimDBSchema : global::System.Data.DataSet {
        
        private pack_size_distDataTable tablepack_size_dist;
        
        private channelDataTable tablechannel;
        
        private product_matrixDataTable tableproduct_matrix;
        
        private segmentDataTable tablesegment;
        
        private segment_channelDataTable tablesegment_channel;
        
        private share_pen_brand_awareDataTable tableshare_pen_brand_aware;
        
        private task_rate_factDataTable tabletask_rate_fact;
        
        private productDataTable tableproduct;
        
        private product_channelDataTable tableproduct_channel;
        
        private taskDataTable tabletask;
        
        private task_product_factDataTable tabletask_product_fact;
        
        private product_attributeDataTable tableproduct_attribute;
        
        private product_attribute_valueDataTable tableproduct_attribute_value;
        
        private consumer_preferenceDataTable tableconsumer_preference;
        
        private distributionDataTable tabledistribution;
        
        private displayDataTable tabledisplay;
        
        private mass_mediaDataTable tablemass_media;
        
        private product_eventDataTable tableproduct_event;
        
        private task_eventDataTable tabletask_event;
        
        private Model_infoDataTable tableModel_info;
        
        private market_planDataTable tablemarket_plan;
        
        private market_plan_treeDataTable tablemarket_plan_tree;
        
        private scenarioDataTable tablescenario;
        
        private scenario_market_planDataTable tablescenario_market_plan;
        
        private network_parameterDataTable tablenetwork_parameter;
        
        private segment_networkDataTable tablesegment_network;
        
        private external_dataDataTable tableexternal_data;
        
        private model_parameterDataTable tablemodel_parameter;
        
        private market_utilityDataTable tablemarket_utility;
        
        private product_treeDataTable tableproduct_tree;
        
        private product_typeDataTable tableproduct_type;
        
        private projectDataTable tableproject;
        
        private simulationDataTable tablesimulation;
        
        private sim_queueDataTable tablesim_queue;
        
        private scenario_variableDataTable tablescenario_variable;
        
        private sim_variable_valueDataTable tablesim_variable_value;
        
        private scenario_parameterDataTable tablescenario_parameter;
        
        private scenario_metricDataTable tablescenario_metric;
        
        private scenario_simseedDataTable tablescenario_simseed;
        
        private run_logDataTable tablerun_log;
        
        private product_channel_sizeDataTable tableproduct_channel_size;
        
        private db_schema_infoDataTable tabledb_schema_info;
        
        private simulation_statusDataTable tablesimulation_status;
        
        private results_statusDataTable tableresults_status;
        
        private pack_sizeDataTable tablepack_size;
        
        private price_typeDataTable tableprice_type;
        
        private segment_price_utilityDataTable tablesegment_price_utility;
        
        private global::System.Data.DataRelation relationModel_infochannel;
        
        private global::System.Data.DataRelation relationproductproduct_matrix_have;
        
        private global::System.Data.DataRelation relationproductproduct_matrix_want;
        
        private global::System.Data.DataRelation relationModel_infoproduct_matrix;
        
        private global::System.Data.DataRelation relationModel_infosegment;
        
        private global::System.Data.DataRelation relationchannelsegment_channel;
        
        private global::System.Data.DataRelation relationsegmentsegment_channel;
        
        private global::System.Data.DataRelation relationModel_infosegment_channel;
        
        private global::System.Data.DataRelation relationsegmentshare_pen_brand_aware;
        
        private global::System.Data.DataRelation relationproductshare_pen_brand_aware;
        
        private global::System.Data.DataRelation relationModel_infoshare_pen_brand_aware;
        
        private global::System.Data.DataRelation relationtasktask_rate_fact;
        
        private global::System.Data.DataRelation relationsegmenttask_rate_fact;
        
        private global::System.Data.DataRelation relationModel_infotask_rate_fact;
        
        private global::System.Data.DataRelation relationFK_pack_size_product;
        
        private global::System.Data.DataRelation relationModel_infoproduct;
        
        private global::System.Data.DataRelation relationproductproduct_type;
        
        private global::System.Data.DataRelation relationproductproduct_channel;
        
        private global::System.Data.DataRelation relationchannelproduct_channel;
        
        private global::System.Data.DataRelation relationModel_infoproduct_channel;
        
        private global::System.Data.DataRelation relationmarket_planproduct_channel;
        
        private global::System.Data.DataRelation relationFK_price_type_product_channel;
        
        private global::System.Data.DataRelation relationModel_infotask;
        
        private global::System.Data.DataRelation relationtasktask_product_fact;
        
        private global::System.Data.DataRelation relationproducttask_product_fact;
        
        private global::System.Data.DataRelation relationModel_infotask_product_fact;
        
        private global::System.Data.DataRelation relationModel_infoproduct_attribute;
        
        private global::System.Data.DataRelation relationproduct_attributeproduct_attribute_value;
        
        private global::System.Data.DataRelation relationproductproduct_attribute_value;
        
        private global::System.Data.DataRelation relationModel_infoproduct_attribute_value;
        
        private global::System.Data.DataRelation relationproduct_attributeconsumer_preference;
        
        private global::System.Data.DataRelation relationsegmentconsumer_preference;
        
        private global::System.Data.DataRelation relationModel_infoconsumer_preference;
        
        private global::System.Data.DataRelation relationModel_infodistribution;
        
        private global::System.Data.DataRelation relationproductdistribution;
        
        private global::System.Data.DataRelation relationchanneldistribution;
        
        private global::System.Data.DataRelation relationmarket_plandistribution;
        
        private global::System.Data.DataRelation relationModel_infodisplay;
        
        private global::System.Data.DataRelation relationproductdisplay;
        
        private global::System.Data.DataRelation relationchanneldisplay;
        
        private global::System.Data.DataRelation relationmarket_plandisplay;
        
        private global::System.Data.DataRelation relationModel_infomass_media;
        
        private global::System.Data.DataRelation relationproductmass_media;
        
        private global::System.Data.DataRelation relationsegmentmass_media;
        
        private global::System.Data.DataRelation relationchannelmass_media;
        
        private global::System.Data.DataRelation relationmarket_planmass_media;
        
        private global::System.Data.DataRelation relationModel_infoproduct_event;
        
        private global::System.Data.DataRelation relationproductproduct_event;
        
        private global::System.Data.DataRelation relationsegmentproduct_event;
        
        private global::System.Data.DataRelation relationchannelproduct_event;
        
        private global::System.Data.DataRelation relationmarket_planproduct_event;
        
        private global::System.Data.DataRelation relationModel_infotask_event;
        
        private global::System.Data.DataRelation relationsegmenttask_event;
        
        private global::System.Data.DataRelation relationtasktask_event;
        
        private global::System.Data.DataRelation relationproject_Model_info;
        
        private global::System.Data.DataRelation relationModel_infomarket_plan;
        
        private global::System.Data.DataRelation relationproductmarket_plan;
        
        private global::System.Data.DataRelation relationsegmentmarket_plan;
        
        private global::System.Data.DataRelation relationchannelmarket_plan;
        
        private global::System.Data.DataRelation relationtaskmarket_plan;
        
        private global::System.Data.DataRelation relationModel_infomarket_plan_tree;
        
        private global::System.Data.DataRelation relationmarket_planmarket_plan_tree_parent;
        
        private global::System.Data.DataRelation relationmarket_planmarket_plan_tree_child;
        
        private global::System.Data.DataRelation relationModel_infoscenario;
        
        private global::System.Data.DataRelation relationscenarioscenario_market_plan;
        
        private global::System.Data.DataRelation relationmarket_planscenario_market_plan;
        
        private global::System.Data.DataRelation relationModel_infoscenario_market_plan;
        
        private global::System.Data.DataRelation relationModel_infonetwork_parameter;
        
        private global::System.Data.DataRelation relationnetwork_parametersegment_network;
        
        private global::System.Data.DataRelation relationfromsegmentsegment_network;
        
        private global::System.Data.DataRelation relationtosegmentsegment_network;
        
        private global::System.Data.DataRelation relationModel_infosegment_network;
        
        private global::System.Data.DataRelation relationsegmentexternal_data;
        
        private global::System.Data.DataRelation relationchannelexternal_data;
        
        private global::System.Data.DataRelation relationproductexternal_data;
        
        private global::System.Data.DataRelation relationModel_infoexternal_data;
        
        private global::System.Data.DataRelation relationModel_infomodel_parameter;
        
        private global::System.Data.DataRelation relationModel_infomarket_utility;
        
        private global::System.Data.DataRelation relationproductmarket_utility;
        
        private global::System.Data.DataRelation relationchannelmarket_utility;
        
        private global::System.Data.DataRelation relationsegmentmarket_utility;
        
        private global::System.Data.DataRelation relationmarket_planmarket_utility;
        
        private global::System.Data.DataRelation relationModel_infoproduct_tree;
        
        private global::System.Data.DataRelation relationproductproduct_tree;
        
        private global::System.Data.DataRelation relationproductproduct_tree1;
        
        private global::System.Data.DataRelation relationModel_infoproduct_type;
        
        private global::System.Data.DataRelation relationFK_scenario_simulation;
        
        private global::System.Data.DataRelation relationSimulationSimQueue;
        
        private global::System.Data.DataRelation relationSimulationVariable;
        
        private global::System.Data.DataRelation relationscenario_variable_sim_variable_value;
        
        private global::System.Data.DataRelation relationSimVariableValue;
        
        private global::System.Data.DataRelation relationmodel_parameter_scenario_parameter;
        
        private global::System.Data.DataRelation relationSimulationParameter;
        
        private global::System.Data.DataRelation relationModel_info_scenario_parameter;
        
        private global::System.Data.DataRelation relationSimulationMetric;
        
        private global::System.Data.DataRelation relationSimulationSeed;
        
        private global::System.Data.DataRelation relationFK_product_product_channel_size;
        
        private global::System.Data.DataRelation relationFK_Model_info_product_channel_size;
        
        private global::System.Data.DataRelation relationFK_channel_product_channel_size;
        
        private global::System.Data.DataRelation relationFK_Model_info_pack_size;
        
        private global::System.Data.DataRelation relationFK_pack_size_dist_pack_size;
        
        private global::System.Data.DataRelation relationFK_Model_info_price_type;
        
        private global::System.Data.DataRelation relationFK_segment_segment_price_utility;
        
        private global::System.Data.DataRelation relationFK_price_type_segment_price_utility;
        
        private global::System.Data.DataRelation relationSimQueueLog;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MrktSimDBSchema() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected MrktSimDBSchema(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["pack_size_dist"] != null)) {
                    base.Tables.Add(new pack_size_distDataTable(ds.Tables["pack_size_dist"]));
                }
                if ((ds.Tables["channel"] != null)) {
                    base.Tables.Add(new channelDataTable(ds.Tables["channel"]));
                }
                if ((ds.Tables["product_matrix"] != null)) {
                    base.Tables.Add(new product_matrixDataTable(ds.Tables["product_matrix"]));
                }
                if ((ds.Tables["segment"] != null)) {
                    base.Tables.Add(new segmentDataTable(ds.Tables["segment"]));
                }
                if ((ds.Tables["segment_channel"] != null)) {
                    base.Tables.Add(new segment_channelDataTable(ds.Tables["segment_channel"]));
                }
                if ((ds.Tables["share_pen_brand_aware"] != null)) {
                    base.Tables.Add(new share_pen_brand_awareDataTable(ds.Tables["share_pen_brand_aware"]));
                }
                if ((ds.Tables["task_rate_fact"] != null)) {
                    base.Tables.Add(new task_rate_factDataTable(ds.Tables["task_rate_fact"]));
                }
                if ((ds.Tables["product"] != null)) {
                    base.Tables.Add(new productDataTable(ds.Tables["product"]));
                }
                if ((ds.Tables["product_channel"] != null)) {
                    base.Tables.Add(new product_channelDataTable(ds.Tables["product_channel"]));
                }
                if ((ds.Tables["task"] != null)) {
                    base.Tables.Add(new taskDataTable(ds.Tables["task"]));
                }
                if ((ds.Tables["task_product_fact"] != null)) {
                    base.Tables.Add(new task_product_factDataTable(ds.Tables["task_product_fact"]));
                }
                if ((ds.Tables["product_attribute"] != null)) {
                    base.Tables.Add(new product_attributeDataTable(ds.Tables["product_attribute"]));
                }
                if ((ds.Tables["product_attribute_value"] != null)) {
                    base.Tables.Add(new product_attribute_valueDataTable(ds.Tables["product_attribute_value"]));
                }
                if ((ds.Tables["consumer_preference"] != null)) {
                    base.Tables.Add(new consumer_preferenceDataTable(ds.Tables["consumer_preference"]));
                }
                if ((ds.Tables["distribution"] != null)) {
                    base.Tables.Add(new distributionDataTable(ds.Tables["distribution"]));
                }
                if ((ds.Tables["display"] != null)) {
                    base.Tables.Add(new displayDataTable(ds.Tables["display"]));
                }
                if ((ds.Tables["mass_media"] != null)) {
                    base.Tables.Add(new mass_mediaDataTable(ds.Tables["mass_media"]));
                }
                if ((ds.Tables["product_event"] != null)) {
                    base.Tables.Add(new product_eventDataTable(ds.Tables["product_event"]));
                }
                if ((ds.Tables["task_event"] != null)) {
                    base.Tables.Add(new task_eventDataTable(ds.Tables["task_event"]));
                }
                if ((ds.Tables["Model_info"] != null)) {
                    base.Tables.Add(new Model_infoDataTable(ds.Tables["Model_info"]));
                }
                if ((ds.Tables["market_plan"] != null)) {
                    base.Tables.Add(new market_planDataTable(ds.Tables["market_plan"]));
                }
                if ((ds.Tables["market_plan_tree"] != null)) {
                    base.Tables.Add(new market_plan_treeDataTable(ds.Tables["market_plan_tree"]));
                }
                if ((ds.Tables["scenario"] != null)) {
                    base.Tables.Add(new scenarioDataTable(ds.Tables["scenario"]));
                }
                if ((ds.Tables["scenario_market_plan"] != null)) {
                    base.Tables.Add(new scenario_market_planDataTable(ds.Tables["scenario_market_plan"]));
                }
                if ((ds.Tables["network_parameter"] != null)) {
                    base.Tables.Add(new network_parameterDataTable(ds.Tables["network_parameter"]));
                }
                if ((ds.Tables["segment_network"] != null)) {
                    base.Tables.Add(new segment_networkDataTable(ds.Tables["segment_network"]));
                }
                if ((ds.Tables["external_data"] != null)) {
                    base.Tables.Add(new external_dataDataTable(ds.Tables["external_data"]));
                }
                if ((ds.Tables["model_parameter"] != null)) {
                    base.Tables.Add(new model_parameterDataTable(ds.Tables["model_parameter"]));
                }
                if ((ds.Tables["market_utility"] != null)) {
                    base.Tables.Add(new market_utilityDataTable(ds.Tables["market_utility"]));
                }
                if ((ds.Tables["product_tree"] != null)) {
                    base.Tables.Add(new product_treeDataTable(ds.Tables["product_tree"]));
                }
                if ((ds.Tables["product_type"] != null)) {
                    base.Tables.Add(new product_typeDataTable(ds.Tables["product_type"]));
                }
                if ((ds.Tables["project"] != null)) {
                    base.Tables.Add(new projectDataTable(ds.Tables["project"]));
                }
                if ((ds.Tables["simulation"] != null)) {
                    base.Tables.Add(new simulationDataTable(ds.Tables["simulation"]));
                }
                if ((ds.Tables["sim_queue"] != null)) {
                    base.Tables.Add(new sim_queueDataTable(ds.Tables["sim_queue"]));
                }
                if ((ds.Tables["scenario_variable"] != null)) {
                    base.Tables.Add(new scenario_variableDataTable(ds.Tables["scenario_variable"]));
                }
                if ((ds.Tables["sim_variable_value"] != null)) {
                    base.Tables.Add(new sim_variable_valueDataTable(ds.Tables["sim_variable_value"]));
                }
                if ((ds.Tables["scenario_parameter"] != null)) {
                    base.Tables.Add(new scenario_parameterDataTable(ds.Tables["scenario_parameter"]));
                }
                if ((ds.Tables["scenario_metric"] != null)) {
                    base.Tables.Add(new scenario_metricDataTable(ds.Tables["scenario_metric"]));
                }
                if ((ds.Tables["scenario_simseed"] != null)) {
                    base.Tables.Add(new scenario_simseedDataTable(ds.Tables["scenario_simseed"]));
                }
                if ((ds.Tables["run_log"] != null)) {
                    base.Tables.Add(new run_logDataTable(ds.Tables["run_log"]));
                }
                if ((ds.Tables["product_channel_size"] != null)) {
                    base.Tables.Add(new product_channel_sizeDataTable(ds.Tables["product_channel_size"]));
                }
                if ((ds.Tables["db_schema_info"] != null)) {
                    base.Tables.Add(new db_schema_infoDataTable(ds.Tables["db_schema_info"]));
                }
                if ((ds.Tables["simulation_status"] != null)) {
                    base.Tables.Add(new simulation_statusDataTable(ds.Tables["simulation_status"]));
                }
                if ((ds.Tables["results_status"] != null)) {
                    base.Tables.Add(new results_statusDataTable(ds.Tables["results_status"]));
                }
                if ((ds.Tables["pack_size"] != null)) {
                    base.Tables.Add(new pack_sizeDataTable(ds.Tables["pack_size"]));
                }
                if ((ds.Tables["price_type"] != null)) {
                    base.Tables.Add(new price_typeDataTable(ds.Tables["price_type"]));
                }
                if ((ds.Tables["segment_price_utility"] != null)) {
                    base.Tables.Add(new segment_price_utilityDataTable(ds.Tables["segment_price_utility"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public pack_size_distDataTable pack_size_dist {
            get {
                return this.tablepack_size_dist;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public channelDataTable channel {
            get {
                return this.tablechannel;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public product_matrixDataTable product_matrix {
            get {
                return this.tableproduct_matrix;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public segmentDataTable segment {
            get {
                return this.tablesegment;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public segment_channelDataTable segment_channel {
            get {
                return this.tablesegment_channel;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public share_pen_brand_awareDataTable share_pen_brand_aware {
            get {
                return this.tableshare_pen_brand_aware;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public task_rate_factDataTable task_rate_fact {
            get {
                return this.tabletask_rate_fact;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public productDataTable product {
            get {
                return this.tableproduct;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public product_channelDataTable product_channel {
            get {
                return this.tableproduct_channel;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public taskDataTable task {
            get {
                return this.tabletask;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public task_product_factDataTable task_product_fact {
            get {
                return this.tabletask_product_fact;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public product_attributeDataTable product_attribute {
            get {
                return this.tableproduct_attribute;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public product_attribute_valueDataTable product_attribute_value {
            get {
                return this.tableproduct_attribute_value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public consumer_preferenceDataTable consumer_preference {
            get {
                return this.tableconsumer_preference;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public distributionDataTable distribution {
            get {
                return this.tabledistribution;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public displayDataTable display {
            get {
                return this.tabledisplay;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public mass_mediaDataTable mass_media {
            get {
                return this.tablemass_media;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public product_eventDataTable product_event {
            get {
                return this.tableproduct_event;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public task_eventDataTable task_event {
            get {
                return this.tabletask_event;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Model_infoDataTable Model_info {
            get {
                return this.tableModel_info;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public market_planDataTable market_plan {
            get {
                return this.tablemarket_plan;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public market_plan_treeDataTable market_plan_tree {
            get {
                return this.tablemarket_plan_tree;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public scenarioDataTable scenario {
            get {
                return this.tablescenario;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public scenario_market_planDataTable scenario_market_plan {
            get {
                return this.tablescenario_market_plan;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public network_parameterDataTable network_parameter {
            get {
                return this.tablenetwork_parameter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public segment_networkDataTable segment_network {
            get {
                return this.tablesegment_network;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public external_dataDataTable external_data {
            get {
                return this.tableexternal_data;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public model_parameterDataTable model_parameter {
            get {
                return this.tablemodel_parameter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public market_utilityDataTable market_utility {
            get {
                return this.tablemarket_utility;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public product_treeDataTable product_tree {
            get {
                return this.tableproduct_tree;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public product_typeDataTable product_type {
            get {
                return this.tableproduct_type;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public projectDataTable project {
            get {
                return this.tableproject;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public simulationDataTable simulation {
            get {
                return this.tablesimulation;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sim_queueDataTable sim_queue {
            get {
                return this.tablesim_queue;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public scenario_variableDataTable scenario_variable {
            get {
                return this.tablescenario_variable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sim_variable_valueDataTable sim_variable_value {
            get {
                return this.tablesim_variable_value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public scenario_parameterDataTable scenario_parameter {
            get {
                return this.tablescenario_parameter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public scenario_metricDataTable scenario_metric {
            get {
                return this.tablescenario_metric;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public scenario_simseedDataTable scenario_simseed {
            get {
                return this.tablescenario_simseed;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public run_logDataTable run_log {
            get {
                return this.tablerun_log;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public product_channel_sizeDataTable product_channel_size {
            get {
                return this.tableproduct_channel_size;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public db_schema_infoDataTable db_schema_info {
            get {
                return this.tabledb_schema_info;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public simulation_statusDataTable simulation_status {
            get {
                return this.tablesimulation_status;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public results_statusDataTable results_status {
            get {
                return this.tableresults_status;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public pack_sizeDataTable pack_size {
            get {
                return this.tablepack_size;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public price_typeDataTable price_type {
            get {
                return this.tableprice_type;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public segment_price_utilityDataTable segment_price_utility {
            get {
                return this.tablesegment_price_utility;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            MrktSimDBSchema cln = ((MrktSimDBSchema)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["pack_size_dist"] != null)) {
                    base.Tables.Add(new pack_size_distDataTable(ds.Tables["pack_size_dist"]));
                }
                if ((ds.Tables["channel"] != null)) {
                    base.Tables.Add(new channelDataTable(ds.Tables["channel"]));
                }
                if ((ds.Tables["product_matrix"] != null)) {
                    base.Tables.Add(new product_matrixDataTable(ds.Tables["product_matrix"]));
                }
                if ((ds.Tables["segment"] != null)) {
                    base.Tables.Add(new segmentDataTable(ds.Tables["segment"]));
                }
                if ((ds.Tables["segment_channel"] != null)) {
                    base.Tables.Add(new segment_channelDataTable(ds.Tables["segment_channel"]));
                }
                if ((ds.Tables["share_pen_brand_aware"] != null)) {
                    base.Tables.Add(new share_pen_brand_awareDataTable(ds.Tables["share_pen_brand_aware"]));
                }
                if ((ds.Tables["task_rate_fact"] != null)) {
                    base.Tables.Add(new task_rate_factDataTable(ds.Tables["task_rate_fact"]));
                }
                if ((ds.Tables["product"] != null)) {
                    base.Tables.Add(new productDataTable(ds.Tables["product"]));
                }
                if ((ds.Tables["product_channel"] != null)) {
                    base.Tables.Add(new product_channelDataTable(ds.Tables["product_channel"]));
                }
                if ((ds.Tables["task"] != null)) {
                    base.Tables.Add(new taskDataTable(ds.Tables["task"]));
                }
                if ((ds.Tables["task_product_fact"] != null)) {
                    base.Tables.Add(new task_product_factDataTable(ds.Tables["task_product_fact"]));
                }
                if ((ds.Tables["product_attribute"] != null)) {
                    base.Tables.Add(new product_attributeDataTable(ds.Tables["product_attribute"]));
                }
                if ((ds.Tables["product_attribute_value"] != null)) {
                    base.Tables.Add(new product_attribute_valueDataTable(ds.Tables["product_attribute_value"]));
                }
                if ((ds.Tables["consumer_preference"] != null)) {
                    base.Tables.Add(new consumer_preferenceDataTable(ds.Tables["consumer_preference"]));
                }
                if ((ds.Tables["distribution"] != null)) {
                    base.Tables.Add(new distributionDataTable(ds.Tables["distribution"]));
                }
                if ((ds.Tables["display"] != null)) {
                    base.Tables.Add(new displayDataTable(ds.Tables["display"]));
                }
                if ((ds.Tables["mass_media"] != null)) {
                    base.Tables.Add(new mass_mediaDataTable(ds.Tables["mass_media"]));
                }
                if ((ds.Tables["product_event"] != null)) {
                    base.Tables.Add(new product_eventDataTable(ds.Tables["product_event"]));
                }
                if ((ds.Tables["task_event"] != null)) {
                    base.Tables.Add(new task_eventDataTable(ds.Tables["task_event"]));
                }
                if ((ds.Tables["Model_info"] != null)) {
                    base.Tables.Add(new Model_infoDataTable(ds.Tables["Model_info"]));
                }
                if ((ds.Tables["market_plan"] != null)) {
                    base.Tables.Add(new market_planDataTable(ds.Tables["market_plan"]));
                }
                if ((ds.Tables["market_plan_tree"] != null)) {
                    base.Tables.Add(new market_plan_treeDataTable(ds.Tables["market_plan_tree"]));
                }
                if ((ds.Tables["scenario"] != null)) {
                    base.Tables.Add(new scenarioDataTable(ds.Tables["scenario"]));
                }
                if ((ds.Tables["scenario_market_plan"] != null)) {
                    base.Tables.Add(new scenario_market_planDataTable(ds.Tables["scenario_market_plan"]));
                }
                if ((ds.Tables["network_parameter"] != null)) {
                    base.Tables.Add(new network_parameterDataTable(ds.Tables["network_parameter"]));
                }
                if ((ds.Tables["segment_network"] != null)) {
                    base.Tables.Add(new segment_networkDataTable(ds.Tables["segment_network"]));
                }
                if ((ds.Tables["external_data"] != null)) {
                    base.Tables.Add(new external_dataDataTable(ds.Tables["external_data"]));
                }
                if ((ds.Tables["model_parameter"] != null)) {
                    base.Tables.Add(new model_parameterDataTable(ds.Tables["model_parameter"]));
                }
                if ((ds.Tables["market_utility"] != null)) {
                    base.Tables.Add(new market_utilityDataTable(ds.Tables["market_utility"]));
                }
                if ((ds.Tables["product_tree"] != null)) {
                    base.Tables.Add(new product_treeDataTable(ds.Tables["product_tree"]));
                }
                if ((ds.Tables["product_type"] != null)) {
                    base.Tables.Add(new product_typeDataTable(ds.Tables["product_type"]));
                }
                if ((ds.Tables["project"] != null)) {
                    base.Tables.Add(new projectDataTable(ds.Tables["project"]));
                }
                if ((ds.Tables["simulation"] != null)) {
                    base.Tables.Add(new simulationDataTable(ds.Tables["simulation"]));
                }
                if ((ds.Tables["sim_queue"] != null)) {
                    base.Tables.Add(new sim_queueDataTable(ds.Tables["sim_queue"]));
                }
                if ((ds.Tables["scenario_variable"] != null)) {
                    base.Tables.Add(new scenario_variableDataTable(ds.Tables["scenario_variable"]));
                }
                if ((ds.Tables["sim_variable_value"] != null)) {
                    base.Tables.Add(new sim_variable_valueDataTable(ds.Tables["sim_variable_value"]));
                }
                if ((ds.Tables["scenario_parameter"] != null)) {
                    base.Tables.Add(new scenario_parameterDataTable(ds.Tables["scenario_parameter"]));
                }
                if ((ds.Tables["scenario_metric"] != null)) {
                    base.Tables.Add(new scenario_metricDataTable(ds.Tables["scenario_metric"]));
                }
                if ((ds.Tables["scenario_simseed"] != null)) {
                    base.Tables.Add(new scenario_simseedDataTable(ds.Tables["scenario_simseed"]));
                }
                if ((ds.Tables["run_log"] != null)) {
                    base.Tables.Add(new run_logDataTable(ds.Tables["run_log"]));
                }
                if ((ds.Tables["product_channel_size"] != null)) {
                    base.Tables.Add(new product_channel_sizeDataTable(ds.Tables["product_channel_size"]));
                }
                if ((ds.Tables["db_schema_info"] != null)) {
                    base.Tables.Add(new db_schema_infoDataTable(ds.Tables["db_schema_info"]));
                }
                if ((ds.Tables["simulation_status"] != null)) {
                    base.Tables.Add(new simulation_statusDataTable(ds.Tables["simulation_status"]));
                }
                if ((ds.Tables["results_status"] != null)) {
                    base.Tables.Add(new results_statusDataTable(ds.Tables["results_status"]));
                }
                if ((ds.Tables["pack_size"] != null)) {
                    base.Tables.Add(new pack_sizeDataTable(ds.Tables["pack_size"]));
                }
                if ((ds.Tables["price_type"] != null)) {
                    base.Tables.Add(new price_typeDataTable(ds.Tables["price_type"]));
                }
                if ((ds.Tables["segment_price_utility"] != null)) {
                    base.Tables.Add(new segment_price_utilityDataTable(ds.Tables["segment_price_utility"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablepack_size_dist = ((pack_size_distDataTable)(base.Tables["pack_size_dist"]));
            if ((initTable == true)) {
                if ((this.tablepack_size_dist != null)) {
                    this.tablepack_size_dist.InitVars();
                }
            }
            this.tablechannel = ((channelDataTable)(base.Tables["channel"]));
            if ((initTable == true)) {
                if ((this.tablechannel != null)) {
                    this.tablechannel.InitVars();
                }
            }
            this.tableproduct_matrix = ((product_matrixDataTable)(base.Tables["product_matrix"]));
            if ((initTable == true)) {
                if ((this.tableproduct_matrix != null)) {
                    this.tableproduct_matrix.InitVars();
                }
            }
            this.tablesegment = ((segmentDataTable)(base.Tables["segment"]));
            if ((initTable == true)) {
                if ((this.tablesegment != null)) {
                    this.tablesegment.InitVars();
                }
            }
            this.tablesegment_channel = ((segment_channelDataTable)(base.Tables["segment_channel"]));
            if ((initTable == true)) {
                if ((this.tablesegment_channel != null)) {
                    this.tablesegment_channel.InitVars();
                }
            }
            this.tableshare_pen_brand_aware = ((share_pen_brand_awareDataTable)(base.Tables["share_pen_brand_aware"]));
            if ((initTable == true)) {
                if ((this.tableshare_pen_brand_aware != null)) {
                    this.tableshare_pen_brand_aware.InitVars();
                }
            }
            this.tabletask_rate_fact = ((task_rate_factDataTable)(base.Tables["task_rate_fact"]));
            if ((initTable == true)) {
                if ((this.tabletask_rate_fact != null)) {
                    this.tabletask_rate_fact.InitVars();
                }
            }
            this.tableproduct = ((productDataTable)(base.Tables["product"]));
            if ((initTable == true)) {
                if ((this.tableproduct != null)) {
                    this.tableproduct.InitVars();
                }
            }
            this.tableproduct_channel = ((product_channelDataTable)(base.Tables["product_channel"]));
            if ((initTable == true)) {
                if ((this.tableproduct_channel != null)) {
                    this.tableproduct_channel.InitVars();
                }
            }
            this.tabletask = ((taskDataTable)(base.Tables["task"]));
            if ((initTable == true)) {
                if ((this.tabletask != null)) {
                    this.tabletask.InitVars();
                }
            }
            this.tabletask_product_fact = ((task_product_factDataTable)(base.Tables["task_product_fact"]));
            if ((initTable == true)) {
                if ((this.tabletask_product_fact != null)) {
                    this.tabletask_product_fact.InitVars();
                }
            }
            this.tableproduct_attribute = ((product_attributeDataTable)(base.Tables["product_attribute"]));
            if ((initTable == true)) {
                if ((this.tableproduct_attribute != null)) {
                    this.tableproduct_attribute.InitVars();
                }
            }
            this.tableproduct_attribute_value = ((product_attribute_valueDataTable)(base.Tables["product_attribute_value"]));
            if ((initTable == true)) {
                if ((this.tableproduct_attribute_value != null)) {
                    this.tableproduct_attribute_value.InitVars();
                }
            }
            this.tableconsumer_preference = ((consumer_preferenceDataTable)(base.Tables["consumer_preference"]));
            if ((initTable == true)) {
                if ((this.tableconsumer_preference != null)) {
                    this.tableconsumer_preference.InitVars();
                }
            }
            this.tabledistribution = ((distributionDataTable)(base.Tables["distribution"]));
            if ((initTable == true)) {
                if ((this.tabledistribution != null)) {
                    this.tabledistribution.InitVars();
                }
            }
            this.tabledisplay = ((displayDataTable)(base.Tables["display"]));
            if ((initTable == true)) {
                if ((this.tabledisplay != null)) {
                    this.tabledisplay.InitVars();
                }
            }
            this.tablemass_media = ((mass_mediaDataTable)(base.Tables["mass_media"]));
            if ((initTable == true)) {
                if ((this.tablemass_media != null)) {
                    this.tablemass_media.InitVars();
                }
            }
            this.tableproduct_event = ((product_eventDataTable)(base.Tables["product_event"]));
            if ((initTable == true)) {
                if ((this.tableproduct_event != null)) {
                    this.tableproduct_event.InitVars();
                }
            }
            this.tabletask_event = ((task_eventDataTable)(base.Tables["task_event"]));
            if ((initTable == true)) {
                if ((this.tabletask_event != null)) {
                    this.tabletask_event.InitVars();
                }
            }
            this.tableModel_info = ((Model_infoDataTable)(base.Tables["Model_info"]));
            if ((initTable == true)) {
                if ((this.tableModel_info != null)) {
                    this.tableModel_info.InitVars();
                }
            }
            this.tablemarket_plan = ((market_planDataTable)(base.Tables["market_plan"]));
            if ((initTable == true)) {
                if ((this.tablemarket_plan != null)) {
                    this.tablemarket_plan.InitVars();
                }
            }
            this.tablemarket_plan_tree = ((market_plan_treeDataTable)(base.Tables["market_plan_tree"]));
            if ((initTable == true)) {
                if ((this.tablemarket_plan_tree != null)) {
                    this.tablemarket_plan_tree.InitVars();
                }
            }
            this.tablescenario = ((scenarioDataTable)(base.Tables["scenario"]));
            if ((initTable == true)) {
                if ((this.tablescenario != null)) {
                    this.tablescenario.InitVars();
                }
            }
            this.tablescenario_market_plan = ((scenario_market_planDataTable)(base.Tables["scenario_market_plan"]));
            if ((initTable == true)) {
                if ((this.tablescenario_market_plan != null)) {
                    this.tablescenario_market_plan.InitVars();
                }
            }
            this.tablenetwork_parameter = ((network_parameterDataTable)(base.Tables["network_parameter"]));
            if ((initTable == true)) {
                if ((this.tablenetwork_parameter != null)) {
                    this.tablenetwork_parameter.InitVars();
                }
            }
            this.tablesegment_network = ((segment_networkDataTable)(base.Tables["segment_network"]));
            if ((initTable == true)) {
                if ((this.tablesegment_network != null)) {
                    this.tablesegment_network.InitVars();
                }
            }
            this.tableexternal_data = ((external_dataDataTable)(base.Tables["external_data"]));
            if ((initTable == true)) {
                if ((this.tableexternal_data != null)) {
                    this.tableexternal_data.InitVars();
                }
            }
            this.tablemodel_parameter = ((model_parameterDataTable)(base.Tables["model_parameter"]));
            if ((initTable == true)) {
                if ((this.tablemodel_parameter != null)) {
                    this.tablemodel_parameter.InitVars();
                }
            }
            this.tablemarket_utility = ((market_utilityDataTable)(base.Tables["market_utility"]));
            if ((initTable == true)) {
                if ((this.tablemarket_utility != null)) {
                    this.tablemarket_utility.InitVars();
                }
            }
            this.tableproduct_tree = ((product_treeDataTable)(base.Tables["product_tree"]));
            if ((initTable == true)) {
                if ((this.tableproduct_tree != null)) {
                    this.tableproduct_tree.InitVars();
                }
            }
            this.tableproduct_type = ((product_typeDataTable)(base.Tables["product_type"]));
            if ((initTable == true)) {
                if ((this.tableproduct_type != null)) {
                    this.tableproduct_type.InitVars();
                }
            }
            this.tableproject = ((projectDataTable)(base.Tables["project"]));
            if ((initTable == true)) {
                if ((this.tableproject != null)) {
                    this.tableproject.InitVars();
                }
            }
            this.tablesimulation = ((simulationDataTable)(base.Tables["simulation"]));
            if ((initTable == true)) {
                if ((this.tablesimulation != null)) {
                    this.tablesimulation.InitVars();
                }
            }
            this.tablesim_queue = ((sim_queueDataTable)(base.Tables["sim_queue"]));
            if ((initTable == true)) {
                if ((this.tablesim_queue != null)) {
                    this.tablesim_queue.InitVars();
                }
            }
            this.tablescenario_variable = ((scenario_variableDataTable)(base.Tables["scenario_variable"]));
            if ((initTable == true)) {
                if ((this.tablescenario_variable != null)) {
                    this.tablescenario_variable.InitVars();
                }
            }
            this.tablesim_variable_value = ((sim_variable_valueDataTable)(base.Tables["sim_variable_value"]));
            if ((initTable == true)) {
                if ((this.tablesim_variable_value != null)) {
                    this.tablesim_variable_value.InitVars();
                }
            }
            this.tablescenario_parameter = ((scenario_parameterDataTable)(base.Tables["scenario_parameter"]));
            if ((initTable == true)) {
                if ((this.tablescenario_parameter != null)) {
                    this.tablescenario_parameter.InitVars();
                }
            }
            this.tablescenario_metric = ((scenario_metricDataTable)(base.Tables["scenario_metric"]));
            if ((initTable == true)) {
                if ((this.tablescenario_metric != null)) {
                    this.tablescenario_metric.InitVars();
                }
            }
            this.tablescenario_simseed = ((scenario_simseedDataTable)(base.Tables["scenario_simseed"]));
            if ((initTable == true)) {
                if ((this.tablescenario_simseed != null)) {
                    this.tablescenario_simseed.InitVars();
                }
            }
            this.tablerun_log = ((run_logDataTable)(base.Tables["run_log"]));
            if ((initTable == true)) {
                if ((this.tablerun_log != null)) {
                    this.tablerun_log.InitVars();
                }
            }
            this.tableproduct_channel_size = ((product_channel_sizeDataTable)(base.Tables["product_channel_size"]));
            if ((initTable == true)) {
                if ((this.tableproduct_channel_size != null)) {
                    this.tableproduct_channel_size.InitVars();
                }
            }
            this.tabledb_schema_info = ((db_schema_infoDataTable)(base.Tables["db_schema_info"]));
            if ((initTable == true)) {
                if ((this.tabledb_schema_info != null)) {
                    this.tabledb_schema_info.InitVars();
                }
            }
            this.tablesimulation_status = ((simulation_statusDataTable)(base.Tables["simulation_status"]));
            if ((initTable == true)) {
                if ((this.tablesimulation_status != null)) {
                    this.tablesimulation_status.InitVars();
                }
            }
            this.tableresults_status = ((results_statusDataTable)(base.Tables["results_status"]));
            if ((initTable == true)) {
                if ((this.tableresults_status != null)) {
                    this.tableresults_status.InitVars();
                }
            }
            this.tablepack_size = ((pack_sizeDataTable)(base.Tables["pack_size"]));
            if ((initTable == true)) {
                if ((this.tablepack_size != null)) {
                    this.tablepack_size.InitVars();
                }
            }
            this.tableprice_type = ((price_typeDataTable)(base.Tables["price_type"]));
            if ((initTable == true)) {
                if ((this.tableprice_type != null)) {
                    this.tableprice_type.InitVars();
                }
            }
            this.tablesegment_price_utility = ((segment_price_utilityDataTable)(base.Tables["segment_price_utility"]));
            if ((initTable == true)) {
                if ((this.tablesegment_price_utility != null)) {
                    this.tablesegment_price_utility.InitVars();
                }
            }
            this.relationModel_infochannel = this.Relations["Model_infochannel"];
            this.relationproductproduct_matrix_have = this.Relations["productproduct_matrix_have"];
            this.relationproductproduct_matrix_want = this.Relations["productproduct_matrix_want"];
            this.relationModel_infoproduct_matrix = this.Relations["Model_infoproduct_matrix"];
            this.relationModel_infosegment = this.Relations["Model_infosegment"];
            this.relationchannelsegment_channel = this.Relations["channelsegment_channel"];
            this.relationsegmentsegment_channel = this.Relations["segmentsegment_channel"];
            this.relationModel_infosegment_channel = this.Relations["Model_infosegment_channel"];
            this.relationsegmentshare_pen_brand_aware = this.Relations["segmentshare_pen_brand_aware"];
            this.relationproductshare_pen_brand_aware = this.Relations["productshare_pen_brand_aware"];
            this.relationModel_infoshare_pen_brand_aware = this.Relations["Model_infoshare_pen_brand_aware"];
            this.relationtasktask_rate_fact = this.Relations["tasktask_rate_fact"];
            this.relationsegmenttask_rate_fact = this.Relations["segmenttask_rate_fact"];
            this.relationModel_infotask_rate_fact = this.Relations["Model_infotask_rate_fact"];
            this.relationFK_pack_size_product = this.Relations["FK_pack_size_product"];
            this.relationModel_infoproduct = this.Relations["Model_infoproduct"];
            this.relationproductproduct_type = this.Relations["productproduct_type"];
            this.relationproductproduct_channel = this.Relations["productproduct_channel"];
            this.relationchannelproduct_channel = this.Relations["channelproduct_channel"];
            this.relationModel_infoproduct_channel = this.Relations["Model_infoproduct_channel"];
            this.relationmarket_planproduct_channel = this.Relations["market_planproduct_channel"];
            this.relationFK_price_type_product_channel = this.Relations["FK_price_type_product_channel"];
            this.relationModel_infotask = this.Relations["Model_infotask"];
            this.relationtasktask_product_fact = this.Relations["tasktask_product_fact"];
            this.relationproducttask_product_fact = this.Relations["producttask_product_fact"];
            this.relationModel_infotask_product_fact = this.Relations["Model_infotask_product_fact"];
            this.relationModel_infoproduct_attribute = this.Relations["Model_infoproduct_attribute"];
            this.relationproduct_attributeproduct_attribute_value = this.Relations["product_attributeproduct_attribute_value"];
            this.relationproductproduct_attribute_value = this.Relations["productproduct_attribute_value"];
            this.relationModel_infoproduct_attribute_value = this.Relations["Model_infoproduct_attribute_value"];
            this.relationproduct_attributeconsumer_preference = this.Relations["product_attributeconsumer_preference"];
            this.relationsegmentconsumer_preference = this.Relations["segmentconsumer_preference"];
            this.relationModel_infoconsumer_preference = this.Relations["Model_infoconsumer_preference"];
            this.relationModel_infodistribution = this.Relations["Model_infodistribution"];
            this.relationproductdistribution = this.Relations["productdistribution"];
            this.relationchanneldistribution = this.Relations["channeldistribution"];
            this.relationmarket_plandistribution = this.Relations["market_plandistribution"];
            this.relationModel_infodisplay = this.Relations["Model_infodisplay"];
            this.relationproductdisplay = this.Relations["productdisplay"];
            this.relationchanneldisplay = this.Relations["channeldisplay"];
            this.relationmarket_plandisplay = this.Relations["market_plandisplay"];
            this.relationModel_infomass_media = this.Relations["Model_infomass_media"];
            this.relationproductmass_media = this.Relations["productmass_media"];
            this.relationsegmentmass_media = this.Relations["segmentmass_media"];
            this.relationchannelmass_media = this.Relations["channelmass_media"];
            this.relationmarket_planmass_media = this.Relations["market_planmass_media"];
            this.relationModel_infoproduct_event = this.Relations["Model_infoproduct_event"];
            this.relationproductproduct_event = this.Relations["productproduct_event"];
            this.relationsegmentproduct_event = this.Relations["segmentproduct_event"];
            this.relationchannelproduct_event = this.Relations["channelproduct_event"];
            this.relationmarket_planproduct_event = this.Relations["market_planproduct_event"];
            this.relationModel_infotask_event = this.Relations["Model_infotask_event"];
            this.relationsegmenttask_event = this.Relations["segmenttask_event"];
            this.relationtasktask_event = this.Relations["tasktask_event"];
            this.relationproject_Model_info = this.Relations["project_Model_info"];
            this.relationModel_infomarket_plan = this.Relations["Model_infomarket_plan"];
            this.relationproductmarket_plan = this.Relations["productmarket_plan"];
            this.relationsegmentmarket_plan = this.Relations["segmentmarket_plan"];
            this.relationchannelmarket_plan = this.Relations["channelmarket_plan"];
            this.relationtaskmarket_plan = this.Relations["taskmarket_plan"];
            this.relationModel_infomarket_plan_tree = this.Relations["Model_infomarket_plan_tree"];
            this.relationmarket_planmarket_plan_tree_parent = this.Relations["market_planmarket_plan_tree_parent"];
            this.relationmarket_planmarket_plan_tree_child = this.Relations["market_planmarket_plan_tree_child"];
            this.relationModel_infoscenario = this.Relations["Model_infoscenario"];
            this.relationscenarioscenario_market_plan = this.Relations["scenarioscenario_market_plan"];
            this.relationmarket_planscenario_market_plan = this.Relations["market_planscenario_market_plan"];
            this.relationModel_infoscenario_market_plan = this.Relations["Model_infoscenario_market_plan"];
            this.relationModel_infonetwork_parameter = this.Relations["Model_infonetwork_parameter"];
            this.relationnetwork_parametersegment_network = this.Relations["network_parametersegment_network"];
            this.relationfromsegmentsegment_network = this.Relations["fromsegmentsegment_network"];
            this.relationtosegmentsegment_network = this.Relations["tosegmentsegment_network"];
            this.relationModel_infosegment_network = this.Relations["Model_infosegment_network"];
            this.relationsegmentexternal_data = this.Relations["segmentexternal_data"];
            this.relationchannelexternal_data = this.Relations["channelexternal_data"];
            this.relationproductexternal_data = this.Relations["productexternal_data"];
            this.relationModel_infoexternal_data = this.Relations["Model_infoexternal_data"];
            this.relationModel_infomodel_parameter = this.Relations["Model_infomodel_parameter"];
            this.relationModel_infomarket_utility = this.Relations["Model_infomarket_utility"];
            this.relationproductmarket_utility = this.Relations["productmarket_utility"];
            this.relationchannelmarket_utility = this.Relations["channelmarket_utility"];
            this.relationsegmentmarket_utility = this.Relations["segmentmarket_utility"];
            this.relationmarket_planmarket_utility = this.Relations["market_planmarket_utility"];
            this.relationModel_infoproduct_tree = this.Relations["Model_infoproduct_tree"];
            this.relationproductproduct_tree = this.Relations["productproduct_tree"];
            this.relationproductproduct_tree1 = this.Relations["productproduct_tree1"];
            this.relationModel_infoproduct_type = this.Relations["Model_infoproduct_type"];
            this.relationFK_scenario_simulation = this.Relations["FK_scenario_simulation"];
            this.relationSimulationSimQueue = this.Relations["SimulationSimQueue"];
            this.relationSimulationVariable = this.Relations["SimulationVariable"];
            this.relationscenario_variable_sim_variable_value = this.Relations["scenario_variable_sim_variable_value"];
            this.relationSimVariableValue = this.Relations["SimVariableValue"];
            this.relationmodel_parameter_scenario_parameter = this.Relations["model_parameter_scenario_parameter"];
            this.relationSimulationParameter = this.Relations["SimulationParameter"];
            this.relationModel_info_scenario_parameter = this.Relations["Model_info_scenario_parameter"];
            this.relationSimulationMetric = this.Relations["SimulationMetric"];
            this.relationSimulationSeed = this.Relations["SimulationSeed"];
            this.relationFK_product_product_channel_size = this.Relations["FK_product_product_channel_size"];
            this.relationFK_Model_info_product_channel_size = this.Relations["FK_Model_info_product_channel_size"];
            this.relationFK_channel_product_channel_size = this.Relations["FK_channel_product_channel_size"];
            this.relationFK_Model_info_pack_size = this.Relations["FK_Model_info_pack_size"];
            this.relationFK_pack_size_dist_pack_size = this.Relations["FK_pack_size_dist_pack_size"];
            this.relationFK_Model_info_price_type = this.Relations["FK_Model_info_price_type"];
            this.relationFK_segment_segment_price_utility = this.Relations["FK_segment_segment_price_utility"];
            this.relationFK_price_type_segment_price_utility = this.Relations["FK_price_type_segment_price_utility"];
            this.relationSimQueueLog = this.Relations["SimQueueLog"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "MrktSimDBSchema";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/MrktSimDBSchema.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablepack_size_dist = new pack_size_distDataTable();
            base.Tables.Add(this.tablepack_size_dist);
            this.tablechannel = new channelDataTable();
            base.Tables.Add(this.tablechannel);
            this.tableproduct_matrix = new product_matrixDataTable();
            base.Tables.Add(this.tableproduct_matrix);
            this.tablesegment = new segmentDataTable();
            base.Tables.Add(this.tablesegment);
            this.tablesegment_channel = new segment_channelDataTable();
            base.Tables.Add(this.tablesegment_channel);
            this.tableshare_pen_brand_aware = new share_pen_brand_awareDataTable();
            base.Tables.Add(this.tableshare_pen_brand_aware);
            this.tabletask_rate_fact = new task_rate_factDataTable();
            base.Tables.Add(this.tabletask_rate_fact);
            this.tableproduct = new productDataTable();
            base.Tables.Add(this.tableproduct);
            this.tableproduct_channel = new product_channelDataTable();
            base.Tables.Add(this.tableproduct_channel);
            this.tabletask = new taskDataTable();
            base.Tables.Add(this.tabletask);
            this.tabletask_product_fact = new task_product_factDataTable();
            base.Tables.Add(this.tabletask_product_fact);
            this.tableproduct_attribute = new product_attributeDataTable();
            base.Tables.Add(this.tableproduct_attribute);
            this.tableproduct_attribute_value = new product_attribute_valueDataTable();
            base.Tables.Add(this.tableproduct_attribute_value);
            this.tableconsumer_preference = new consumer_preferenceDataTable();
            base.Tables.Add(this.tableconsumer_preference);
            this.tabledistribution = new distributionDataTable();
            base.Tables.Add(this.tabledistribution);
            this.tabledisplay = new displayDataTable();
            base.Tables.Add(this.tabledisplay);
            this.tablemass_media = new mass_mediaDataTable();
            base.Tables.Add(this.tablemass_media);
            this.tableproduct_event = new product_eventDataTable();
            base.Tables.Add(this.tableproduct_event);
            this.tabletask_event = new task_eventDataTable();
            base.Tables.Add(this.tabletask_event);
            this.tableModel_info = new Model_infoDataTable();
            base.Tables.Add(this.tableModel_info);
            this.tablemarket_plan = new market_planDataTable();
            base.Tables.Add(this.tablemarket_plan);
            this.tablemarket_plan_tree = new market_plan_treeDataTable();
            base.Tables.Add(this.tablemarket_plan_tree);
            this.tablescenario = new scenarioDataTable();
            base.Tables.Add(this.tablescenario);
            this.tablescenario_market_plan = new scenario_market_planDataTable();
            base.Tables.Add(this.tablescenario_market_plan);
            this.tablenetwork_parameter = new network_parameterDataTable();
            base.Tables.Add(this.tablenetwork_parameter);
            this.tablesegment_network = new segment_networkDataTable();
            base.Tables.Add(this.tablesegment_network);
            this.tableexternal_data = new external_dataDataTable();
            base.Tables.Add(this.tableexternal_data);
            this.tablemodel_parameter = new model_parameterDataTable();
            base.Tables.Add(this.tablemodel_parameter);
            this.tablemarket_utility = new market_utilityDataTable();
            base.Tables.Add(this.tablemarket_utility);
            this.tableproduct_tree = new product_treeDataTable();
            base.Tables.Add(this.tableproduct_tree);
            this.tableproduct_type = new product_typeDataTable();
            base.Tables.Add(this.tableproduct_type);
            this.tableproject = new projectDataTable();
            base.Tables.Add(this.tableproject);
            this.tablesimulation = new simulationDataTable();
            base.Tables.Add(this.tablesimulation);
            this.tablesim_queue = new sim_queueDataTable();
            base.Tables.Add(this.tablesim_queue);
            this.tablescenario_variable = new scenario_variableDataTable();
            base.Tables.Add(this.tablescenario_variable);
            this.tablesim_variable_value = new sim_variable_valueDataTable();
            base.Tables.Add(this.tablesim_variable_value);
            this.tablescenario_parameter = new scenario_parameterDataTable();
            base.Tables.Add(this.tablescenario_parameter);
            this.tablescenario_metric = new scenario_metricDataTable();
            base.Tables.Add(this.tablescenario_metric);
            this.tablescenario_simseed = new scenario_simseedDataTable();
            base.Tables.Add(this.tablescenario_simseed);
            this.tablerun_log = new run_logDataTable();
            base.Tables.Add(this.tablerun_log);
            this.tableproduct_channel_size = new product_channel_sizeDataTable();
            base.Tables.Add(this.tableproduct_channel_size);
            this.tabledb_schema_info = new db_schema_infoDataTable();
            base.Tables.Add(this.tabledb_schema_info);
            this.tablesimulation_status = new simulation_statusDataTable();
            base.Tables.Add(this.tablesimulation_status);
            this.tableresults_status = new results_statusDataTable();
            base.Tables.Add(this.tableresults_status);
            this.tablepack_size = new pack_sizeDataTable();
            base.Tables.Add(this.tablepack_size);
            this.tableprice_type = new price_typeDataTable();
            base.Tables.Add(this.tableprice_type);
            this.tablesegment_price_utility = new segment_price_utilityDataTable();
            base.Tables.Add(this.tablesegment_price_utility);
            global::System.Data.ForeignKeyConstraint fkc;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_pack_size_dist_pack_size", new global::System.Data.DataColumn[] {
                        this.tablepack_size.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablepack_size_dist.pack_size_idColumn});
            this.tablepack_size_dist.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("Model_infochannel", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablechannel.model_idColumn});
            this.tablechannel.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("productproduct_matrix_have", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_matrix.have_product_idColumn});
            this.tableproduct_matrix.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("productproduct_matrix_want", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_matrix.want_product_idColumn});
            this.tableproduct_matrix.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("Model_infoproduct_matrix", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_matrix.model_idColumn});
            this.tableproduct_matrix.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("Model_infosegment", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablesegment.model_idColumn});
            this.tablesegment.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("channelsegment_channel", new global::System.Data.DataColumn[] {
                        this.tablechannel.channel_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablesegment_channel.channel_idColumn});
            this.tablesegment_channel.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("segmentsegment_channel", new global::System.Data.DataColumn[] {
                        this.tablesegment.segment_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablesegment_channel.segment_idColumn});
            this.tablesegment_channel.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("Model_infosegment_channel", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablesegment_channel.model_idColumn});
            this.tablesegment_channel.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("segmentshare_pen_brand_aware", new global::System.Data.DataColumn[] {
                        this.tablesegment.segment_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableshare_pen_brand_aware.segment_idColumn});
            this.tableshare_pen_brand_aware.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("productshare_pen_brand_aware", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableshare_pen_brand_aware.product_idColumn});
            this.tableshare_pen_brand_aware.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("Model_infoshare_pen_brand_aware", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableshare_pen_brand_aware.model_idColumn});
            this.tableshare_pen_brand_aware.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("tasktask_rate_fact", new global::System.Data.DataColumn[] {
                        this.tabletask.task_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabletask_rate_fact.task_idColumn});
            this.tabletask_rate_fact.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("segmenttask_rate_fact", new global::System.Data.DataColumn[] {
                        this.tablesegment.segment_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabletask_rate_fact.segment_idColumn});
            this.tabletask_rate_fact.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("Model_infotask_rate_fact", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabletask_rate_fact.model_idColumn});
            this.tabletask_rate_fact.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_pack_size_product", new global::System.Data.DataColumn[] {
                        this.tablepack_size.idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct.pack_size_idColumn});
            this.tableproduct.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("Model_infoproduct", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct.model_idColumn});
            this.tableproduct.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("productproduct_type", new global::System.Data.DataColumn[] {
                        this.tableproduct_type.idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct.product_typeColumn});
            this.tableproduct.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("productproduct_channel", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_channel.product_idColumn});
            this.tableproduct_channel.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("channelproduct_channel", new global::System.Data.DataColumn[] {
                        this.tablechannel.channel_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_channel.channel_idColumn});
            this.tableproduct_channel.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("Model_infoproduct_channel", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_channel.model_idColumn});
            this.tableproduct_channel.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("market_planproduct_channel", new global::System.Data.DataColumn[] {
                        this.tablemarket_plan.idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_channel.market_plan_idColumn});
            this.tableproduct_channel.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_price_type_product_channel", new global::System.Data.DataColumn[] {
                        this.tableprice_type.idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_channel.price_typeColumn});
            this.tableproduct_channel.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("Model_infotask", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabletask.model_idColumn});
            this.tabletask.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("tasktask_product_fact", new global::System.Data.DataColumn[] {
                        this.tabletask.task_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabletask_product_fact.task_idColumn});
            this.tabletask_product_fact.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("producttask_product_fact", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabletask_product_fact.product_idColumn});
            this.tabletask_product_fact.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("Model_infotask_product_fact", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabletask_product_fact.model_idColumn});
            this.tabletask_product_fact.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("Model_infoproduct_attribute", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_attribute.model_idColumn});
            this.tableproduct_attribute.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("product_attributeproduct_attribute_value", new global::System.Data.DataColumn[] {
                        this.tableproduct_attribute.product_attribute_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_attribute_value.product_attribute_idColumn});
            this.tableproduct_attribute_value.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("productproduct_attribute_value", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_attribute_value.product_idColumn});
            this.tableproduct_attribute_value.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("Model_infoproduct_attribute_value", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_attribute_value.model_idColumn});
            this.tableproduct_attribute_value.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("product_attributeconsumer_preference", new global::System.Data.DataColumn[] {
                        this.tableproduct_attribute.product_attribute_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableconsumer_preference.product_attribute_idColumn});
            this.tableconsumer_preference.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("segmentconsumer_preference", new global::System.Data.DataColumn[] {
                        this.tablesegment.segment_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableconsumer_preference.segment_idColumn});
            this.tableconsumer_preference.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("Model_infoconsumer_preference", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableconsumer_preference.model_idColumn});
            this.tableconsumer_preference.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("Model_infodistribution", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabledistribution.model_idColumn});
            this.tabledistribution.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("productdistribution", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabledistribution.product_idColumn});
            this.tabledistribution.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("channeldistribution", new global::System.Data.DataColumn[] {
                        this.tablechannel.channel_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabledistribution.channel_idColumn});
            this.tabledistribution.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("market_plandistribution", new global::System.Data.DataColumn[] {
                        this.tablemarket_plan.idColumn}, new global::System.Data.DataColumn[] {
                        this.tabledistribution.market_plan_idColumn});
            this.tabledistribution.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("Model_infodisplay", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabledisplay.model_idColumn});
            this.tabledisplay.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("productdisplay", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabledisplay.product_idColumn});
            this.tabledisplay.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("channeldisplay", new global::System.Data.DataColumn[] {
                        this.tablechannel.channel_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabledisplay.channel_idColumn});
            this.tabledisplay.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("market_plandisplay", new global::System.Data.DataColumn[] {
                        this.tablemarket_plan.idColumn}, new global::System.Data.DataColumn[] {
                        this.tabledisplay.market_plan_idColumn});
            this.tabledisplay.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("Model_infomass_media", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemass_media.model_idColumn});
            this.tablemass_media.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("productmass_media", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemass_media.product_idColumn});
            this.tablemass_media.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("segmentmass_media", new global::System.Data.DataColumn[] {
                        this.tablesegment.segment_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemass_media.segment_idColumn});
            this.tablemass_media.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("channelmass_media", new global::System.Data.DataColumn[] {
                        this.tablechannel.channel_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemass_media.channel_idColumn});
            this.tablemass_media.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("market_planmass_media", new global::System.Data.DataColumn[] {
                        this.tablemarket_plan.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemass_media.market_plan_idColumn});
            this.tablemass_media.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("Model_infoproduct_event", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_event.model_idColumn});
            this.tableproduct_event.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("productproduct_event", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_event.product_idColumn});
            this.tableproduct_event.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("segmentproduct_event", new global::System.Data.DataColumn[] {
                        this.tablesegment.segment_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_event.segment_idColumn});
            this.tableproduct_event.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("channelproduct_event", new global::System.Data.DataColumn[] {
                        this.tablechannel.channel_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_event.channel_idColumn});
            this.tableproduct_event.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("market_planproduct_event", new global::System.Data.DataColumn[] {
                        this.tablemarket_plan.idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_event.market_plan_idColumn});
            this.tableproduct_event.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("Model_infotask_event", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabletask_event.model_idColumn});
            this.tabletask_event.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("segmenttask_event", new global::System.Data.DataColumn[] {
                        this.tablesegment.segment_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabletask_event.segment_idColumn});
            this.tabletask_event.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("tasktask_event", new global::System.Data.DataColumn[] {
                        this.tabletask.task_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabletask_event.task_idColumn});
            this.tabletask_event.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("market_plantask_event", new global::System.Data.DataColumn[] {
                        this.tablemarket_plan.idColumn}, new global::System.Data.DataColumn[] {
                        this.tabletask_event.market_plan_idColumn});
            this.tabletask_event.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("project_Model_info", new global::System.Data.DataColumn[] {
                        this.tableproject.idColumn}, new global::System.Data.DataColumn[] {
                        this.tableModel_info.project_idColumn});
            this.tableModel_info.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("Model_infomarket_plan", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemarket_plan.model_idColumn});
            this.tablemarket_plan.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("productmarket_plan", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemarket_plan.product_idColumn});
            this.tablemarket_plan.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("segmentmarket_plan", new global::System.Data.DataColumn[] {
                        this.tablesegment.segment_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemarket_plan.segment_idColumn});
            this.tablemarket_plan.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.SetDefault;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("channelmarket_plan", new global::System.Data.DataColumn[] {
                        this.tablechannel.channel_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemarket_plan.channel_idColumn});
            this.tablemarket_plan.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("taskmarket_plan", new global::System.Data.DataColumn[] {
                        this.tabletask.task_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemarket_plan.task_idColumn});
            this.tablemarket_plan.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("Model_infomarket_plan_tree", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemarket_plan_tree.model_idColumn});
            this.tablemarket_plan_tree.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("market_planmarket_plan_tree_parent", new global::System.Data.DataColumn[] {
                        this.tablemarket_plan.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemarket_plan_tree.parent_idColumn});
            this.tablemarket_plan_tree.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("market_planmarket_plan_tree_child", new global::System.Data.DataColumn[] {
                        this.tablemarket_plan.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemarket_plan_tree.child_idColumn});
            this.tablemarket_plan_tree.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("Model_infoscenario", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablescenario.model_idColumn});
            this.tablescenario.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("scenarioscenario_market_plan", new global::System.Data.DataColumn[] {
                        this.tablescenario.scenario_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablescenario_market_plan.scenario_idColumn});
            this.tablescenario_market_plan.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("market_planscenario_market_plan", new global::System.Data.DataColumn[] {
                        this.tablemarket_plan.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablescenario_market_plan.market_plan_idColumn});
            this.tablescenario_market_plan.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("Model_infoscenario_market_plan", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablescenario_market_plan.model_idColumn});
            this.tablescenario_market_plan.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("Model_infonetwork_parameter", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablenetwork_parameter.model_idColumn});
            this.tablenetwork_parameter.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("network_parametersegment_network", new global::System.Data.DataColumn[] {
                        this.tablenetwork_parameter.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablesegment_network.network_paramColumn});
            this.tablesegment_network.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("fromsegmentsegment_network", new global::System.Data.DataColumn[] {
                        this.tablesegment.segment_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablesegment_network.from_idColumn});
            this.tablesegment_network.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("tosegmentsegment_network", new global::System.Data.DataColumn[] {
                        this.tablesegment.segment_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablesegment_network.to_idColumn});
            this.tablesegment_network.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("Model_infosegment_network", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablesegment_network.model_idColumn});
            this.tablesegment_network.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("segmentexternal_data", new global::System.Data.DataColumn[] {
                        this.tablesegment.segment_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableexternal_data.segment_idColumn});
            this.tableexternal_data.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("channelexternal_data", new global::System.Data.DataColumn[] {
                        this.tablechannel.channel_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableexternal_data.channel_idColumn});
            this.tableexternal_data.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("productexternal_data", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableexternal_data.product_idColumn});
            this.tableexternal_data.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("Model_infoexternal_data", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableexternal_data.model_idColumn});
            this.tableexternal_data.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("Model_infomodel_parameter", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemodel_parameter.model_idColumn});
            this.tablemodel_parameter.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("Model_infomarket_utility", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemarket_utility.model_idColumn});
            this.tablemarket_utility.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("productmarket_utility", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemarket_utility.product_idColumn});
            this.tablemarket_utility.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("channelmarket_utility", new global::System.Data.DataColumn[] {
                        this.tablechannel.channel_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemarket_utility.channel_idColumn});
            this.tablemarket_utility.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("segmentmarket_utility", new global::System.Data.DataColumn[] {
                        this.tablesegment.segment_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemarket_utility.segment_idColumn});
            this.tablemarket_utility.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("market_planmarket_utility", new global::System.Data.DataColumn[] {
                        this.tablemarket_plan.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemarket_utility.market_plan_idColumn});
            this.tablemarket_utility.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("Model_infoproduct_tree", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_tree.model_idColumn});
            this.tableproduct_tree.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("productproduct_tree", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_tree.parent_idColumn});
            this.tableproduct_tree.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("productproduct_tree1", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_tree.child_idColumn});
            this.tableproduct_tree.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("Model_infoproduct_type", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_type.model_idColumn});
            this.tableproduct_type.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_scenario_simulation", new global::System.Data.DataColumn[] {
                        this.tablescenario.scenario_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablesimulation.scenario_idColumn});
            this.tablesimulation.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("SimulationSimQueue", new global::System.Data.DataColumn[] {
                        this.tablesimulation.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablesim_queue.sim_idColumn});
            this.tablesim_queue.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("SimulationVariable", new global::System.Data.DataColumn[] {
                        this.tablesimulation.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablescenario_variable.sim_idColumn});
            this.tablescenario_variable.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("scenario_variable_sim_variable_value", new global::System.Data.DataColumn[] {
                        this.tablescenario_variable.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablesim_variable_value.var_idColumn});
            this.tablesim_variable_value.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("SimVariableValue", new global::System.Data.DataColumn[] {
                        this.tablesim_queue.run_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablesim_variable_value.run_idColumn});
            this.tablesim_variable_value.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("model_parameter_scenario_parameter", new global::System.Data.DataColumn[] {
                        this.tablemodel_parameter.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablescenario_parameter.param_idColumn});
            this.tablescenario_parameter.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("SimulationParameter", new global::System.Data.DataColumn[] {
                        this.tablesimulation.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablescenario_parameter.sim_idColumn});
            this.tablescenario_parameter.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("Model_info_scenario_parameter", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablescenario_parameter.model_idColumn});
            this.tablescenario_parameter.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("SimulationMetric", new global::System.Data.DataColumn[] {
                        this.tablesimulation.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablescenario_metric.sim_idColumn});
            this.tablescenario_metric.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("SimulationSeed", new global::System.Data.DataColumn[] {
                        this.tablesimulation.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablescenario_simseed.sim_idColumn});
            this.tablescenario_simseed.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_product_product_channel_size", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_channel_size.product_idColumn});
            this.tableproduct_channel_size.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Model_info_product_channel_size", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_channel_size.model_idColumn});
            this.tableproduct_channel_size.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_channel_product_channel_size", new global::System.Data.DataColumn[] {
                        this.tablechannel.channel_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_channel_size.channel_idColumn});
            this.tableproduct_channel_size.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Model_info_pack_size", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablepack_size.model_idColumn});
            this.tablepack_size.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Model_info_price_type", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableprice_type.model_idColumn});
            this.tableprice_type.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_segment_segment_price_utility", new global::System.Data.DataColumn[] {
                        this.tablesegment.segment_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablesegment_price_utility.segment_idColumn});
            this.tablesegment_price_utility.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_price_type_segment_price_utility", new global::System.Data.DataColumn[] {
                        this.tableprice_type.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablesegment_price_utility.price_type_idColumn});
            this.tablesegment_price_utility.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            this.relationModel_infochannel = new global::System.Data.DataRelation("Model_infochannel", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablechannel.model_idColumn}, false);
            this.Relations.Add(this.relationModel_infochannel);
            this.relationproductproduct_matrix_have = new global::System.Data.DataRelation("productproduct_matrix_have", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_matrix.have_product_idColumn}, false);
            this.Relations.Add(this.relationproductproduct_matrix_have);
            this.relationproductproduct_matrix_want = new global::System.Data.DataRelation("productproduct_matrix_want", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_matrix.want_product_idColumn}, false);
            this.Relations.Add(this.relationproductproduct_matrix_want);
            this.relationModel_infoproduct_matrix = new global::System.Data.DataRelation("Model_infoproduct_matrix", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_matrix.model_idColumn}, false);
            this.Relations.Add(this.relationModel_infoproduct_matrix);
            this.relationModel_infosegment = new global::System.Data.DataRelation("Model_infosegment", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablesegment.model_idColumn}, false);
            this.Relations.Add(this.relationModel_infosegment);
            this.relationchannelsegment_channel = new global::System.Data.DataRelation("channelsegment_channel", new global::System.Data.DataColumn[] {
                        this.tablechannel.channel_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablesegment_channel.channel_idColumn}, false);
            this.Relations.Add(this.relationchannelsegment_channel);
            this.relationsegmentsegment_channel = new global::System.Data.DataRelation("segmentsegment_channel", new global::System.Data.DataColumn[] {
                        this.tablesegment.segment_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablesegment_channel.segment_idColumn}, false);
            this.Relations.Add(this.relationsegmentsegment_channel);
            this.relationModel_infosegment_channel = new global::System.Data.DataRelation("Model_infosegment_channel", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablesegment_channel.model_idColumn}, false);
            this.Relations.Add(this.relationModel_infosegment_channel);
            this.relationsegmentshare_pen_brand_aware = new global::System.Data.DataRelation("segmentshare_pen_brand_aware", new global::System.Data.DataColumn[] {
                        this.tablesegment.segment_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableshare_pen_brand_aware.segment_idColumn}, false);
            this.Relations.Add(this.relationsegmentshare_pen_brand_aware);
            this.relationproductshare_pen_brand_aware = new global::System.Data.DataRelation("productshare_pen_brand_aware", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableshare_pen_brand_aware.product_idColumn}, false);
            this.Relations.Add(this.relationproductshare_pen_brand_aware);
            this.relationModel_infoshare_pen_brand_aware = new global::System.Data.DataRelation("Model_infoshare_pen_brand_aware", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableshare_pen_brand_aware.model_idColumn}, false);
            this.Relations.Add(this.relationModel_infoshare_pen_brand_aware);
            this.relationtasktask_rate_fact = new global::System.Data.DataRelation("tasktask_rate_fact", new global::System.Data.DataColumn[] {
                        this.tabletask.task_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabletask_rate_fact.task_idColumn}, false);
            this.Relations.Add(this.relationtasktask_rate_fact);
            this.relationsegmenttask_rate_fact = new global::System.Data.DataRelation("segmenttask_rate_fact", new global::System.Data.DataColumn[] {
                        this.tablesegment.segment_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabletask_rate_fact.segment_idColumn}, false);
            this.Relations.Add(this.relationsegmenttask_rate_fact);
            this.relationModel_infotask_rate_fact = new global::System.Data.DataRelation("Model_infotask_rate_fact", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabletask_rate_fact.model_idColumn}, false);
            this.Relations.Add(this.relationModel_infotask_rate_fact);
            this.relationFK_pack_size_product = new global::System.Data.DataRelation("FK_pack_size_product", new global::System.Data.DataColumn[] {
                        this.tablepack_size.idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct.pack_size_idColumn}, false);
            this.Relations.Add(this.relationFK_pack_size_product);
            this.relationModel_infoproduct = new global::System.Data.DataRelation("Model_infoproduct", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct.model_idColumn}, false);
            this.Relations.Add(this.relationModel_infoproduct);
            this.relationproductproduct_type = new global::System.Data.DataRelation("productproduct_type", new global::System.Data.DataColumn[] {
                        this.tableproduct_type.idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct.product_typeColumn}, false);
            this.Relations.Add(this.relationproductproduct_type);
            this.relationproductproduct_channel = new global::System.Data.DataRelation("productproduct_channel", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_channel.product_idColumn}, false);
            this.Relations.Add(this.relationproductproduct_channel);
            this.relationchannelproduct_channel = new global::System.Data.DataRelation("channelproduct_channel", new global::System.Data.DataColumn[] {
                        this.tablechannel.channel_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_channel.channel_idColumn}, false);
            this.Relations.Add(this.relationchannelproduct_channel);
            this.relationModel_infoproduct_channel = new global::System.Data.DataRelation("Model_infoproduct_channel", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_channel.model_idColumn}, false);
            this.Relations.Add(this.relationModel_infoproduct_channel);
            this.relationmarket_planproduct_channel = new global::System.Data.DataRelation("market_planproduct_channel", new global::System.Data.DataColumn[] {
                        this.tablemarket_plan.idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_channel.market_plan_idColumn}, false);
            this.Relations.Add(this.relationmarket_planproduct_channel);
            this.relationFK_price_type_product_channel = new global::System.Data.DataRelation("FK_price_type_product_channel", new global::System.Data.DataColumn[] {
                        this.tableprice_type.idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_channel.price_typeColumn}, false);
            this.Relations.Add(this.relationFK_price_type_product_channel);
            this.relationModel_infotask = new global::System.Data.DataRelation("Model_infotask", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabletask.model_idColumn}, false);
            this.Relations.Add(this.relationModel_infotask);
            this.relationtasktask_product_fact = new global::System.Data.DataRelation("tasktask_product_fact", new global::System.Data.DataColumn[] {
                        this.tabletask.task_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabletask_product_fact.task_idColumn}, false);
            this.Relations.Add(this.relationtasktask_product_fact);
            this.relationproducttask_product_fact = new global::System.Data.DataRelation("producttask_product_fact", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabletask_product_fact.product_idColumn}, false);
            this.Relations.Add(this.relationproducttask_product_fact);
            this.relationModel_infotask_product_fact = new global::System.Data.DataRelation("Model_infotask_product_fact", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabletask_product_fact.model_idColumn}, false);
            this.Relations.Add(this.relationModel_infotask_product_fact);
            this.relationModel_infoproduct_attribute = new global::System.Data.DataRelation("Model_infoproduct_attribute", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_attribute.model_idColumn}, false);
            this.Relations.Add(this.relationModel_infoproduct_attribute);
            this.relationproduct_attributeproduct_attribute_value = new global::System.Data.DataRelation("product_attributeproduct_attribute_value", new global::System.Data.DataColumn[] {
                        this.tableproduct_attribute.product_attribute_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_attribute_value.product_attribute_idColumn}, false);
            this.Relations.Add(this.relationproduct_attributeproduct_attribute_value);
            this.relationproductproduct_attribute_value = new global::System.Data.DataRelation("productproduct_attribute_value", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_attribute_value.product_idColumn}, false);
            this.Relations.Add(this.relationproductproduct_attribute_value);
            this.relationModel_infoproduct_attribute_value = new global::System.Data.DataRelation("Model_infoproduct_attribute_value", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_attribute_value.model_idColumn}, false);
            this.Relations.Add(this.relationModel_infoproduct_attribute_value);
            this.relationproduct_attributeconsumer_preference = new global::System.Data.DataRelation("product_attributeconsumer_preference", new global::System.Data.DataColumn[] {
                        this.tableproduct_attribute.product_attribute_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableconsumer_preference.product_attribute_idColumn}, false);
            this.Relations.Add(this.relationproduct_attributeconsumer_preference);
            this.relationsegmentconsumer_preference = new global::System.Data.DataRelation("segmentconsumer_preference", new global::System.Data.DataColumn[] {
                        this.tablesegment.segment_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableconsumer_preference.segment_idColumn}, false);
            this.Relations.Add(this.relationsegmentconsumer_preference);
            this.relationModel_infoconsumer_preference = new global::System.Data.DataRelation("Model_infoconsumer_preference", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableconsumer_preference.model_idColumn}, false);
            this.Relations.Add(this.relationModel_infoconsumer_preference);
            this.relationModel_infodistribution = new global::System.Data.DataRelation("Model_infodistribution", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabledistribution.model_idColumn}, false);
            this.Relations.Add(this.relationModel_infodistribution);
            this.relationproductdistribution = new global::System.Data.DataRelation("productdistribution", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabledistribution.product_idColumn}, false);
            this.Relations.Add(this.relationproductdistribution);
            this.relationchanneldistribution = new global::System.Data.DataRelation("channeldistribution", new global::System.Data.DataColumn[] {
                        this.tablechannel.channel_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabledistribution.channel_idColumn}, false);
            this.Relations.Add(this.relationchanneldistribution);
            this.relationmarket_plandistribution = new global::System.Data.DataRelation("market_plandistribution", new global::System.Data.DataColumn[] {
                        this.tablemarket_plan.idColumn}, new global::System.Data.DataColumn[] {
                        this.tabledistribution.market_plan_idColumn}, false);
            this.Relations.Add(this.relationmarket_plandistribution);
            this.relationModel_infodisplay = new global::System.Data.DataRelation("Model_infodisplay", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabledisplay.model_idColumn}, false);
            this.Relations.Add(this.relationModel_infodisplay);
            this.relationproductdisplay = new global::System.Data.DataRelation("productdisplay", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabledisplay.product_idColumn}, false);
            this.Relations.Add(this.relationproductdisplay);
            this.relationchanneldisplay = new global::System.Data.DataRelation("channeldisplay", new global::System.Data.DataColumn[] {
                        this.tablechannel.channel_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabledisplay.channel_idColumn}, false);
            this.Relations.Add(this.relationchanneldisplay);
            this.relationmarket_plandisplay = new global::System.Data.DataRelation("market_plandisplay", new global::System.Data.DataColumn[] {
                        this.tablemarket_plan.idColumn}, new global::System.Data.DataColumn[] {
                        this.tabledisplay.market_plan_idColumn}, false);
            this.Relations.Add(this.relationmarket_plandisplay);
            this.relationModel_infomass_media = new global::System.Data.DataRelation("Model_infomass_media", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemass_media.model_idColumn}, false);
            this.Relations.Add(this.relationModel_infomass_media);
            this.relationproductmass_media = new global::System.Data.DataRelation("productmass_media", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemass_media.product_idColumn}, false);
            this.Relations.Add(this.relationproductmass_media);
            this.relationsegmentmass_media = new global::System.Data.DataRelation("segmentmass_media", new global::System.Data.DataColumn[] {
                        this.tablesegment.segment_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemass_media.segment_idColumn}, false);
            this.Relations.Add(this.relationsegmentmass_media);
            this.relationchannelmass_media = new global::System.Data.DataRelation("channelmass_media", new global::System.Data.DataColumn[] {
                        this.tablechannel.channel_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemass_media.channel_idColumn}, false);
            this.Relations.Add(this.relationchannelmass_media);
            this.relationmarket_planmass_media = new global::System.Data.DataRelation("market_planmass_media", new global::System.Data.DataColumn[] {
                        this.tablemarket_plan.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemass_media.market_plan_idColumn}, false);
            this.Relations.Add(this.relationmarket_planmass_media);
            this.relationModel_infoproduct_event = new global::System.Data.DataRelation("Model_infoproduct_event", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_event.model_idColumn}, false);
            this.Relations.Add(this.relationModel_infoproduct_event);
            this.relationproductproduct_event = new global::System.Data.DataRelation("productproduct_event", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_event.product_idColumn}, false);
            this.Relations.Add(this.relationproductproduct_event);
            this.relationsegmentproduct_event = new global::System.Data.DataRelation("segmentproduct_event", new global::System.Data.DataColumn[] {
                        this.tablesegment.segment_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_event.segment_idColumn}, false);
            this.Relations.Add(this.relationsegmentproduct_event);
            this.relationchannelproduct_event = new global::System.Data.DataRelation("channelproduct_event", new global::System.Data.DataColumn[] {
                        this.tablechannel.channel_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_event.channel_idColumn}, false);
            this.Relations.Add(this.relationchannelproduct_event);
            this.relationmarket_planproduct_event = new global::System.Data.DataRelation("market_planproduct_event", new global::System.Data.DataColumn[] {
                        this.tablemarket_plan.idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_event.market_plan_idColumn}, false);
            this.Relations.Add(this.relationmarket_planproduct_event);
            this.relationModel_infotask_event = new global::System.Data.DataRelation("Model_infotask_event", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabletask_event.model_idColumn}, false);
            this.Relations.Add(this.relationModel_infotask_event);
            this.relationsegmenttask_event = new global::System.Data.DataRelation("segmenttask_event", new global::System.Data.DataColumn[] {
                        this.tablesegment.segment_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabletask_event.segment_idColumn}, false);
            this.Relations.Add(this.relationsegmenttask_event);
            this.relationtasktask_event = new global::System.Data.DataRelation("tasktask_event", new global::System.Data.DataColumn[] {
                        this.tabletask.task_idColumn}, new global::System.Data.DataColumn[] {
                        this.tabletask_event.task_idColumn}, false);
            this.Relations.Add(this.relationtasktask_event);
            this.relationproject_Model_info = new global::System.Data.DataRelation("project_Model_info", new global::System.Data.DataColumn[] {
                        this.tableproject.idColumn}, new global::System.Data.DataColumn[] {
                        this.tableModel_info.project_idColumn}, false);
            this.Relations.Add(this.relationproject_Model_info);
            this.relationModel_infomarket_plan = new global::System.Data.DataRelation("Model_infomarket_plan", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemarket_plan.model_idColumn}, false);
            this.Relations.Add(this.relationModel_infomarket_plan);
            this.relationproductmarket_plan = new global::System.Data.DataRelation("productmarket_plan", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemarket_plan.product_idColumn}, false);
            this.Relations.Add(this.relationproductmarket_plan);
            this.relationsegmentmarket_plan = new global::System.Data.DataRelation("segmentmarket_plan", new global::System.Data.DataColumn[] {
                        this.tablesegment.segment_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemarket_plan.segment_idColumn}, false);
            this.Relations.Add(this.relationsegmentmarket_plan);
            this.relationchannelmarket_plan = new global::System.Data.DataRelation("channelmarket_plan", new global::System.Data.DataColumn[] {
                        this.tablechannel.channel_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemarket_plan.channel_idColumn}, false);
            this.Relations.Add(this.relationchannelmarket_plan);
            this.relationtaskmarket_plan = new global::System.Data.DataRelation("taskmarket_plan", new global::System.Data.DataColumn[] {
                        this.tabletask.task_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemarket_plan.task_idColumn}, false);
            this.Relations.Add(this.relationtaskmarket_plan);
            this.relationModel_infomarket_plan_tree = new global::System.Data.DataRelation("Model_infomarket_plan_tree", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemarket_plan_tree.model_idColumn}, false);
            this.Relations.Add(this.relationModel_infomarket_plan_tree);
            this.relationmarket_planmarket_plan_tree_parent = new global::System.Data.DataRelation("market_planmarket_plan_tree_parent", new global::System.Data.DataColumn[] {
                        this.tablemarket_plan.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemarket_plan_tree.parent_idColumn}, false);
            this.Relations.Add(this.relationmarket_planmarket_plan_tree_parent);
            this.relationmarket_planmarket_plan_tree_child = new global::System.Data.DataRelation("market_planmarket_plan_tree_child", new global::System.Data.DataColumn[] {
                        this.tablemarket_plan.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemarket_plan_tree.child_idColumn}, false);
            this.Relations.Add(this.relationmarket_planmarket_plan_tree_child);
            this.relationModel_infoscenario = new global::System.Data.DataRelation("Model_infoscenario", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablescenario.model_idColumn}, false);
            this.Relations.Add(this.relationModel_infoscenario);
            this.relationscenarioscenario_market_plan = new global::System.Data.DataRelation("scenarioscenario_market_plan", new global::System.Data.DataColumn[] {
                        this.tablescenario.scenario_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablescenario_market_plan.scenario_idColumn}, false);
            this.Relations.Add(this.relationscenarioscenario_market_plan);
            this.relationmarket_planscenario_market_plan = new global::System.Data.DataRelation("market_planscenario_market_plan", new global::System.Data.DataColumn[] {
                        this.tablemarket_plan.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablescenario_market_plan.market_plan_idColumn}, false);
            this.Relations.Add(this.relationmarket_planscenario_market_plan);
            this.relationModel_infoscenario_market_plan = new global::System.Data.DataRelation("Model_infoscenario_market_plan", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablescenario_market_plan.model_idColumn}, false);
            this.Relations.Add(this.relationModel_infoscenario_market_plan);
            this.relationModel_infonetwork_parameter = new global::System.Data.DataRelation("Model_infonetwork_parameter", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablenetwork_parameter.model_idColumn}, false);
            this.Relations.Add(this.relationModel_infonetwork_parameter);
            this.relationnetwork_parametersegment_network = new global::System.Data.DataRelation("network_parametersegment_network", new global::System.Data.DataColumn[] {
                        this.tablenetwork_parameter.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablesegment_network.network_paramColumn}, false);
            this.Relations.Add(this.relationnetwork_parametersegment_network);
            this.relationfromsegmentsegment_network = new global::System.Data.DataRelation("fromsegmentsegment_network", new global::System.Data.DataColumn[] {
                        this.tablesegment.segment_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablesegment_network.from_idColumn}, false);
            this.Relations.Add(this.relationfromsegmentsegment_network);
            this.relationtosegmentsegment_network = new global::System.Data.DataRelation("tosegmentsegment_network", new global::System.Data.DataColumn[] {
                        this.tablesegment.segment_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablesegment_network.to_idColumn}, false);
            this.Relations.Add(this.relationtosegmentsegment_network);
            this.relationModel_infosegment_network = new global::System.Data.DataRelation("Model_infosegment_network", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablesegment_network.model_idColumn}, false);
            this.Relations.Add(this.relationModel_infosegment_network);
            this.relationsegmentexternal_data = new global::System.Data.DataRelation("segmentexternal_data", new global::System.Data.DataColumn[] {
                        this.tablesegment.segment_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableexternal_data.segment_idColumn}, false);
            this.Relations.Add(this.relationsegmentexternal_data);
            this.relationchannelexternal_data = new global::System.Data.DataRelation("channelexternal_data", new global::System.Data.DataColumn[] {
                        this.tablechannel.channel_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableexternal_data.channel_idColumn}, false);
            this.Relations.Add(this.relationchannelexternal_data);
            this.relationproductexternal_data = new global::System.Data.DataRelation("productexternal_data", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableexternal_data.product_idColumn}, false);
            this.Relations.Add(this.relationproductexternal_data);
            this.relationModel_infoexternal_data = new global::System.Data.DataRelation("Model_infoexternal_data", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableexternal_data.model_idColumn}, false);
            this.Relations.Add(this.relationModel_infoexternal_data);
            this.relationModel_infomodel_parameter = new global::System.Data.DataRelation("Model_infomodel_parameter", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemodel_parameter.model_idColumn}, false);
            this.Relations.Add(this.relationModel_infomodel_parameter);
            this.relationModel_infomarket_utility = new global::System.Data.DataRelation("Model_infomarket_utility", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemarket_utility.model_idColumn}, false);
            this.Relations.Add(this.relationModel_infomarket_utility);
            this.relationproductmarket_utility = new global::System.Data.DataRelation("productmarket_utility", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemarket_utility.product_idColumn}, false);
            this.Relations.Add(this.relationproductmarket_utility);
            this.relationchannelmarket_utility = new global::System.Data.DataRelation("channelmarket_utility", new global::System.Data.DataColumn[] {
                        this.tablechannel.channel_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemarket_utility.channel_idColumn}, false);
            this.Relations.Add(this.relationchannelmarket_utility);
            this.relationsegmentmarket_utility = new global::System.Data.DataRelation("segmentmarket_utility", new global::System.Data.DataColumn[] {
                        this.tablesegment.segment_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemarket_utility.segment_idColumn}, false);
            this.Relations.Add(this.relationsegmentmarket_utility);
            this.relationmarket_planmarket_utility = new global::System.Data.DataRelation("market_planmarket_utility", new global::System.Data.DataColumn[] {
                        this.tablemarket_plan.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablemarket_utility.market_plan_idColumn}, false);
            this.Relations.Add(this.relationmarket_planmarket_utility);
            this.relationModel_infoproduct_tree = new global::System.Data.DataRelation("Model_infoproduct_tree", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_tree.model_idColumn}, false);
            this.Relations.Add(this.relationModel_infoproduct_tree);
            this.relationproductproduct_tree = new global::System.Data.DataRelation("productproduct_tree", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_tree.parent_idColumn}, false);
            this.Relations.Add(this.relationproductproduct_tree);
            this.relationproductproduct_tree1 = new global::System.Data.DataRelation("productproduct_tree1", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_tree.child_idColumn}, false);
            this.Relations.Add(this.relationproductproduct_tree1);
            this.relationModel_infoproduct_type = new global::System.Data.DataRelation("Model_infoproduct_type", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_type.model_idColumn}, false);
            this.Relations.Add(this.relationModel_infoproduct_type);
            this.relationFK_scenario_simulation = new global::System.Data.DataRelation("FK_scenario_simulation", new global::System.Data.DataColumn[] {
                        this.tablescenario.scenario_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablesimulation.scenario_idColumn}, false);
            this.Relations.Add(this.relationFK_scenario_simulation);
            this.relationSimulationSimQueue = new global::System.Data.DataRelation("SimulationSimQueue", new global::System.Data.DataColumn[] {
                        this.tablesimulation.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablesim_queue.sim_idColumn}, false);
            this.Relations.Add(this.relationSimulationSimQueue);
            this.relationSimulationVariable = new global::System.Data.DataRelation("SimulationVariable", new global::System.Data.DataColumn[] {
                        this.tablesimulation.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablescenario_variable.sim_idColumn}, false);
            this.Relations.Add(this.relationSimulationVariable);
            this.relationscenario_variable_sim_variable_value = new global::System.Data.DataRelation("scenario_variable_sim_variable_value", new global::System.Data.DataColumn[] {
                        this.tablescenario_variable.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablesim_variable_value.var_idColumn}, false);
            this.Relations.Add(this.relationscenario_variable_sim_variable_value);
            this.relationSimVariableValue = new global::System.Data.DataRelation("SimVariableValue", new global::System.Data.DataColumn[] {
                        this.tablesim_queue.run_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablesim_variable_value.run_idColumn}, false);
            this.Relations.Add(this.relationSimVariableValue);
            this.relationmodel_parameter_scenario_parameter = new global::System.Data.DataRelation("model_parameter_scenario_parameter", new global::System.Data.DataColumn[] {
                        this.tablemodel_parameter.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablescenario_parameter.param_idColumn}, false);
            this.Relations.Add(this.relationmodel_parameter_scenario_parameter);
            this.relationSimulationParameter = new global::System.Data.DataRelation("SimulationParameter", new global::System.Data.DataColumn[] {
                        this.tablesimulation.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablescenario_parameter.sim_idColumn}, false);
            this.Relations.Add(this.relationSimulationParameter);
            this.relationModel_info_scenario_parameter = new global::System.Data.DataRelation("Model_info_scenario_parameter", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablescenario_parameter.model_idColumn}, false);
            this.Relations.Add(this.relationModel_info_scenario_parameter);
            this.relationSimulationMetric = new global::System.Data.DataRelation("SimulationMetric", new global::System.Data.DataColumn[] {
                        this.tablesimulation.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablescenario_metric.sim_idColumn}, false);
            this.Relations.Add(this.relationSimulationMetric);
            this.relationSimulationSeed = new global::System.Data.DataRelation("SimulationSeed", new global::System.Data.DataColumn[] {
                        this.tablesimulation.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablescenario_simseed.sim_idColumn}, false);
            this.Relations.Add(this.relationSimulationSeed);
            this.relationFK_product_product_channel_size = new global::System.Data.DataRelation("FK_product_product_channel_size", new global::System.Data.DataColumn[] {
                        this.tableproduct.product_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_channel_size.product_idColumn}, false);
            this.Relations.Add(this.relationFK_product_product_channel_size);
            this.relationFK_Model_info_product_channel_size = new global::System.Data.DataRelation("FK_Model_info_product_channel_size", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_channel_size.model_idColumn}, false);
            this.Relations.Add(this.relationFK_Model_info_product_channel_size);
            this.relationFK_channel_product_channel_size = new global::System.Data.DataRelation("FK_channel_product_channel_size", new global::System.Data.DataColumn[] {
                        this.tablechannel.channel_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableproduct_channel_size.channel_idColumn}, false);
            this.Relations.Add(this.relationFK_channel_product_channel_size);
            this.relationFK_Model_info_pack_size = new global::System.Data.DataRelation("FK_Model_info_pack_size", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablepack_size.model_idColumn}, false);
            this.Relations.Add(this.relationFK_Model_info_pack_size);
            this.relationFK_pack_size_dist_pack_size = new global::System.Data.DataRelation("FK_pack_size_dist_pack_size", new global::System.Data.DataColumn[] {
                        this.tablepack_size.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablepack_size_dist.pack_size_idColumn}, false);
            this.Relations.Add(this.relationFK_pack_size_dist_pack_size);
            this.relationFK_Model_info_price_type = new global::System.Data.DataRelation("FK_Model_info_price_type", new global::System.Data.DataColumn[] {
                        this.tableModel_info.model_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableprice_type.model_idColumn}, false);
            this.Relations.Add(this.relationFK_Model_info_price_type);
            this.relationFK_segment_segment_price_utility = new global::System.Data.DataRelation("FK_segment_segment_price_utility", new global::System.Data.DataColumn[] {
                        this.tablesegment.segment_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablesegment_price_utility.segment_idColumn}, false);
            this.Relations.Add(this.relationFK_segment_segment_price_utility);
            this.relationFK_price_type_segment_price_utility = new global::System.Data.DataRelation("FK_price_type_segment_price_utility", new global::System.Data.DataColumn[] {
                        this.tableprice_type.idColumn}, new global::System.Data.DataColumn[] {
                        this.tablesegment_price_utility.price_type_idColumn}, false);
            this.Relations.Add(this.relationFK_price_type_segment_price_utility);
            this.relationSimQueueLog = new global::System.Data.DataRelation("SimQueueLog", new global::System.Data.DataColumn[] {
                        this.tablesim_queue.run_idColumn}, new global::System.Data.DataColumn[] {
                        this.tablerun_log.run_idColumn}, false);
            this.Relations.Add(this.relationSimQueueLog);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializepack_size_dist() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializechannel() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeproduct_matrix() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesegment() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesegment_channel() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeshare_pen_brand_aware() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetask_rate_fact() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeproduct() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeproduct_channel() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetask() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetask_product_fact() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeproduct_attribute() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeproduct_attribute_value() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeconsumer_preference() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedistribution() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedisplay() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializemass_media() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeproduct_event() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetask_event() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeModel_info() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializemarket_plan() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializemarket_plan_tree() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializescenario() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializescenario_market_plan() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializenetwork_parameter() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesegment_network() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeexternal_data() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializemodel_parameter() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializemarket_utility() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeproduct_tree() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeproduct_type() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeproject() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesimulation() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesim_queue() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializescenario_variable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesim_variable_value() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializescenario_parameter() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializescenario_metric() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializescenario_simseed() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializerun_log() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeproduct_channel_size() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedb_schema_info() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesimulation_status() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeresults_status() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializepack_size() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeprice_type() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesegment_price_utility() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            MrktSimDBSchema ds = new MrktSimDBSchema();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void pack_size_distRowChangeEventHandler(object sender, pack_size_distRowChangeEvent e);
        
        public delegate void channelRowChangeEventHandler(object sender, channelRowChangeEvent e);
        
        public delegate void product_matrixRowChangeEventHandler(object sender, product_matrixRowChangeEvent e);
        
        public delegate void segmentRowChangeEventHandler(object sender, segmentRowChangeEvent e);
        
        public delegate void segment_channelRowChangeEventHandler(object sender, segment_channelRowChangeEvent e);
        
        public delegate void share_pen_brand_awareRowChangeEventHandler(object sender, share_pen_brand_awareRowChangeEvent e);
        
        public delegate void task_rate_factRowChangeEventHandler(object sender, task_rate_factRowChangeEvent e);
        
        public delegate void productRowChangeEventHandler(object sender, productRowChangeEvent e);
        
        public delegate void product_channelRowChangeEventHandler(object sender, product_channelRowChangeEvent e);
        
        public delegate void taskRowChangeEventHandler(object sender, taskRowChangeEvent e);
        
        public delegate void task_product_factRowChangeEventHandler(object sender, task_product_factRowChangeEvent e);
        
        public delegate void product_attributeRowChangeEventHandler(object sender, product_attributeRowChangeEvent e);
        
        public delegate void product_attribute_valueRowChangeEventHandler(object sender, product_attribute_valueRowChangeEvent e);
        
        public delegate void consumer_preferenceRowChangeEventHandler(object sender, consumer_preferenceRowChangeEvent e);
        
        public delegate void distributionRowChangeEventHandler(object sender, distributionRowChangeEvent e);
        
        public delegate void displayRowChangeEventHandler(object sender, displayRowChangeEvent e);
        
        public delegate void mass_mediaRowChangeEventHandler(object sender, mass_mediaRowChangeEvent e);
        
        public delegate void product_eventRowChangeEventHandler(object sender, product_eventRowChangeEvent e);
        
        public delegate void task_eventRowChangeEventHandler(object sender, task_eventRowChangeEvent e);
        
        public delegate void Model_infoRowChangeEventHandler(object sender, Model_infoRowChangeEvent e);
        
        public delegate void market_planRowChangeEventHandler(object sender, market_planRowChangeEvent e);
        
        public delegate void market_plan_treeRowChangeEventHandler(object sender, market_plan_treeRowChangeEvent e);
        
        public delegate void scenarioRowChangeEventHandler(object sender, scenarioRowChangeEvent e);
        
        public delegate void scenario_market_planRowChangeEventHandler(object sender, scenario_market_planRowChangeEvent e);
        
        public delegate void network_parameterRowChangeEventHandler(object sender, network_parameterRowChangeEvent e);
        
        public delegate void segment_networkRowChangeEventHandler(object sender, segment_networkRowChangeEvent e);
        
        public delegate void external_dataRowChangeEventHandler(object sender, external_dataRowChangeEvent e);
        
        public delegate void model_parameterRowChangeEventHandler(object sender, model_parameterRowChangeEvent e);
        
        public delegate void market_utilityRowChangeEventHandler(object sender, market_utilityRowChangeEvent e);
        
        public delegate void product_treeRowChangeEventHandler(object sender, product_treeRowChangeEvent e);
        
        public delegate void product_typeRowChangeEventHandler(object sender, product_typeRowChangeEvent e);
        
        public delegate void projectRowChangeEventHandler(object sender, projectRowChangeEvent e);
        
        public delegate void simulationRowChangeEventHandler(object sender, simulationRowChangeEvent e);
        
        public delegate void sim_queueRowChangeEventHandler(object sender, sim_queueRowChangeEvent e);
        
        public delegate void scenario_variableRowChangeEventHandler(object sender, scenario_variableRowChangeEvent e);
        
        public delegate void sim_variable_valueRowChangeEventHandler(object sender, sim_variable_valueRowChangeEvent e);
        
        public delegate void scenario_parameterRowChangeEventHandler(object sender, scenario_parameterRowChangeEvent e);
        
        public delegate void scenario_metricRowChangeEventHandler(object sender, scenario_metricRowChangeEvent e);
        
        public delegate void scenario_simseedRowChangeEventHandler(object sender, scenario_simseedRowChangeEvent e);
        
        public delegate void run_logRowChangeEventHandler(object sender, run_logRowChangeEvent e);
        
        public delegate void product_channel_sizeRowChangeEventHandler(object sender, product_channel_sizeRowChangeEvent e);
        
        public delegate void db_schema_infoRowChangeEventHandler(object sender, db_schema_infoRowChangeEvent e);
        
        public delegate void simulation_statusRowChangeEventHandler(object sender, simulation_statusRowChangeEvent e);
        
        public delegate void results_statusRowChangeEventHandler(object sender, results_statusRowChangeEvent e);
        
        public delegate void pack_sizeRowChangeEventHandler(object sender, pack_sizeRowChangeEvent e);
        
        public delegate void price_typeRowChangeEventHandler(object sender, price_typeRowChangeEvent e);
        
        public delegate void segment_price_utilityRowChangeEventHandler(object sender, segment_price_utilityRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class pack_size_distDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnpack_size_id;
            
            private global::System.Data.DataColumn columnsize;
            
            private global::System.Data.DataColumn columndist;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pack_size_distDataTable() {
                this.TableName = "pack_size_dist";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal pack_size_distDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected pack_size_distDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pack_size_idColumn {
                get {
                    return this.columnpack_size_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sizeColumn {
                get {
                    return this.columnsize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn distColumn {
                get {
                    return this.columndist;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pack_size_distRow this[int index] {
                get {
                    return ((pack_size_distRow)(this.Rows[index]));
                }
            }
            
            public event pack_size_distRowChangeEventHandler pack_size_distRowChanging;
            
            public event pack_size_distRowChangeEventHandler pack_size_distRowChanged;
            
            public event pack_size_distRowChangeEventHandler pack_size_distRowDeleting;
            
            public event pack_size_distRowChangeEventHandler pack_size_distRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addpack_size_distRow(pack_size_distRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pack_size_distRow Addpack_size_distRow(pack_sizeRow parentpack_sizeRowByFK_pack_size_dist_pack_size, int size, double dist) {
                pack_size_distRow rowpack_size_distRow = ((pack_size_distRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        size,
                        dist};
                if ((parentpack_sizeRowByFK_pack_size_dist_pack_size != null)) {
                    columnValuesArray[0] = parentpack_sizeRowByFK_pack_size_dist_pack_size[0];
                }
                rowpack_size_distRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowpack_size_distRow);
                return rowpack_size_distRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                pack_size_distDataTable cln = ((pack_size_distDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new pack_size_distDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnpack_size_id = base.Columns["pack_size_id"];
                this.columnsize = base.Columns["size"];
                this.columndist = base.Columns["dist"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnpack_size_id = new global::System.Data.DataColumn("pack_size_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpack_size_id);
                this.columnsize = new global::System.Data.DataColumn("size", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsize);
                this.columndist = new global::System.Data.DataColumn("dist", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndist);
                this.columnpack_size_id.AllowDBNull = false;
                this.columnsize.AllowDBNull = false;
                this.columndist.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pack_size_distRow Newpack_size_distRow() {
                return ((pack_size_distRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new pack_size_distRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(pack_size_distRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.pack_size_distRowChanged != null)) {
                    this.pack_size_distRowChanged(this, new pack_size_distRowChangeEvent(((pack_size_distRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.pack_size_distRowChanging != null)) {
                    this.pack_size_distRowChanging(this, new pack_size_distRowChangeEvent(((pack_size_distRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.pack_size_distRowDeleted != null)) {
                    this.pack_size_distRowDeleted(this, new pack_size_distRowChangeEvent(((pack_size_distRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.pack_size_distRowDeleting != null)) {
                    this.pack_size_distRowDeleting(this, new pack_size_distRowChangeEvent(((pack_size_distRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removepack_size_distRow(pack_size_distRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "pack_size_distDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class channelDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnchannel_id;
            
            private global::System.Data.DataColumn columnchannel_name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public channelDataTable() {
                this.TableName = "channel";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal channelDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected channelDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn channel_idColumn {
                get {
                    return this.columnchannel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn channel_nameColumn {
                get {
                    return this.columnchannel_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public channelRow this[int index] {
                get {
                    return ((channelRow)(this.Rows[index]));
                }
            }
            
            public event channelRowChangeEventHandler channelRowChanging;
            
            public event channelRowChangeEventHandler channelRowChanged;
            
            public event channelRowChangeEventHandler channelRowDeleting;
            
            public event channelRowChangeEventHandler channelRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddchannelRow(channelRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public channelRow AddchannelRow(Model_infoRow parentModel_infoRowByModel_infochannel, string channel_name) {
                channelRow rowchannelRow = ((channelRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        channel_name};
                if ((parentModel_infoRowByModel_infochannel != null)) {
                    columnValuesArray[0] = parentModel_infoRowByModel_infochannel[0];
                }
                rowchannelRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowchannelRow);
                return rowchannelRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public channelRow FindBychannel_id(int channel_id) {
                return ((channelRow)(this.Rows.Find(new object[] {
                            channel_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                channelDataTable cln = ((channelDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new channelDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmodel_id = base.Columns["model_id"];
                this.columnchannel_id = base.Columns["channel_id"];
                this.columnchannel_name = base.Columns["channel_name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnchannel_id = new global::System.Data.DataColumn("channel_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchannel_id);
                this.columnchannel_name = new global::System.Data.DataColumn("channel_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchannel_name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("MrktSimDBSchemaKey2", new global::System.Data.DataColumn[] {
                                this.columnchannel_id}, true));
                this.columnmodel_id.AllowDBNull = false;
                this.columnchannel_id.AutoIncrement = true;
                this.columnchannel_id.AutoIncrementSeed = -100;
                this.columnchannel_id.AutoIncrementStep = -1;
                this.columnchannel_id.AllowDBNull = false;
                this.columnchannel_id.ReadOnly = true;
                this.columnchannel_id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public channelRow NewchannelRow() {
                return ((channelRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new channelRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(channelRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.channelRowChanged != null)) {
                    this.channelRowChanged(this, new channelRowChangeEvent(((channelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.channelRowChanging != null)) {
                    this.channelRowChanging(this, new channelRowChangeEvent(((channelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.channelRowDeleted != null)) {
                    this.channelRowDeleted(this, new channelRowChangeEvent(((channelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.channelRowDeleting != null)) {
                    this.channelRowDeleting(this, new channelRowChangeEvent(((channelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovechannelRow(channelRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "channelDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class product_matrixDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnhave_product_id;
            
            private global::System.Data.DataColumn columnwant_product_id;
            
            private global::System.Data.DataColumn columnvalue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_matrixDataTable() {
                this.TableName = "product_matrix";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal product_matrixDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected product_matrixDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn have_product_idColumn {
                get {
                    return this.columnhave_product_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn want_product_idColumn {
                get {
                    return this.columnwant_product_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valueColumn {
                get {
                    return this.columnvalue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_matrixRow this[int index] {
                get {
                    return ((product_matrixRow)(this.Rows[index]));
                }
            }
            
            public event product_matrixRowChangeEventHandler product_matrixRowChanging;
            
            public event product_matrixRowChangeEventHandler product_matrixRowChanged;
            
            public event product_matrixRowChangeEventHandler product_matrixRowDeleting;
            
            public event product_matrixRowChangeEventHandler product_matrixRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addproduct_matrixRow(product_matrixRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_matrixRow Addproduct_matrixRow(Model_infoRow parentModel_infoRowByModel_infoproduct_matrix, productRow parentproductRowByproductproduct_matrix_have, productRow parentproductRowByproductproduct_matrix_want, string value) {
                product_matrixRow rowproduct_matrixRow = ((product_matrixRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        value};
                if ((parentModel_infoRowByModel_infoproduct_matrix != null)) {
                    columnValuesArray[0] = parentModel_infoRowByModel_infoproduct_matrix[0];
                }
                if ((parentproductRowByproductproduct_matrix_have != null)) {
                    columnValuesArray[1] = parentproductRowByproductproduct_matrix_have[1];
                }
                if ((parentproductRowByproductproduct_matrix_want != null)) {
                    columnValuesArray[2] = parentproductRowByproductproduct_matrix_want[1];
                }
                rowproduct_matrixRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowproduct_matrixRow);
                return rowproduct_matrixRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                product_matrixDataTable cln = ((product_matrixDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new product_matrixDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmodel_id = base.Columns["model_id"];
                this.columnhave_product_id = base.Columns["have_product_id"];
                this.columnwant_product_id = base.Columns["want_product_id"];
                this.columnvalue = base.Columns["value"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnhave_product_id = new global::System.Data.DataColumn("have_product_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhave_product_id);
                this.columnwant_product_id = new global::System.Data.DataColumn("want_product_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwant_product_id);
                this.columnvalue = new global::System.Data.DataColumn("value", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalue);
                this.columnmodel_id.AllowDBNull = false;
                this.columnhave_product_id.AllowDBNull = false;
                this.columnwant_product_id.AllowDBNull = false;
                this.columnvalue.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_matrixRow Newproduct_matrixRow() {
                return ((product_matrixRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new product_matrixRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(product_matrixRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.product_matrixRowChanged != null)) {
                    this.product_matrixRowChanged(this, new product_matrixRowChangeEvent(((product_matrixRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.product_matrixRowChanging != null)) {
                    this.product_matrixRowChanging(this, new product_matrixRowChangeEvent(((product_matrixRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.product_matrixRowDeleted != null)) {
                    this.product_matrixRowDeleted(this, new product_matrixRowChangeEvent(((product_matrixRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.product_matrixRowDeleting != null)) {
                    this.product_matrixRowDeleting(this, new product_matrixRowChangeEvent(((product_matrixRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeproduct_matrixRow(product_matrixRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "product_matrixDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class segmentDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnsegment_id;
            
            private global::System.Data.DataColumn columnsegment_model;
            
            private global::System.Data.DataColumn columnsegment_name;
            
            private global::System.Data.DataColumn columncolor;
            
            private global::System.Data.DataColumn columnshow_current_share_pie_chart;
            
            private global::System.Data.DataColumn columnshow_cmulative_share_chart;
            
            private global::System.Data.DataColumn columnsegment_size;
            
            private global::System.Data.DataColumn columngrowth_rate;
            
            private global::System.Data.DataColumn columngrowth_rate_people_percent;
            
            private global::System.Data.DataColumn columngrowth_rate_month_year;
            
            private global::System.Data.DataColumn columncompress_population;
            
            private global::System.Data.DataColumn columnvariability;
            
            private global::System.Data.DataColumn columnprice_disutility;
            
            private global::System.Data.DataColumn columnattribute_sensitivity;
            
            private global::System.Data.DataColumn columnpersuasion_scaling;
            
            private global::System.Data.DataColumn columndisplay_utility;
            
            private global::System.Data.DataColumn columndisplay_utility_scaling_factor;
            
            private global::System.Data.DataColumn columnmax_display_hits_per_trip;
            
            private global::System.Data.DataColumn columninertia;
            
            private global::System.Data.DataColumn columnrepurchase;
            
            private global::System.Data.DataColumn columnrepurchase_model;
            
            private global::System.Data.DataColumn columngamma_location_parameter_a;
            
            private global::System.Data.DataColumn columngamma_shape_parameter_k;
            
            private global::System.Data.DataColumn columnrepurchase_period_frequency;
            
            private global::System.Data.DataColumn columnrepurchase_frequency_variation;
            
            private global::System.Data.DataColumn columnrepurchase_timescale;
            
            private global::System.Data.DataColumn columnavg_max_units_purch;
            
            private global::System.Data.DataColumn columnshopping_trip_interval;
            
            private global::System.Data.DataColumn columncategory_penetration;
            
            private global::System.Data.DataColumn columncategory_rejection;
            
            private global::System.Data.DataColumn columnnum_initial_buyers;
            
            private global::System.Data.DataColumn columninitial_buying_period;
            
            private global::System.Data.DataColumn columnseed_with_repurchasers;
            
            private global::System.Data.DataColumn columnuse_budget;
            
            private global::System.Data.DataColumn columnbudget;
            
            private global::System.Data.DataColumn columnbudget_period;
            
            private global::System.Data.DataColumn columnsave_unspent;
            
            private global::System.Data.DataColumn columninitial_savings;
            
            private global::System.Data.DataColumn columnsocial_network_model;
            
            private global::System.Data.DataColumn columnnum_close_contacts;
            
            private global::System.Data.DataColumn columnprob_talking_close_contact_pre;
            
            private global::System.Data.DataColumn columnprob_talking_close_contact_post;
            
            private global::System.Data.DataColumn columnuse_local;
            
            private global::System.Data.DataColumn columnnum_distant_contacts;
            
            private global::System.Data.DataColumn columnprob_talk_distant_contact_pre;
            
            private global::System.Data.DataColumn columnprob_talk_distant_contact_post;
            
            private global::System.Data.DataColumn columnawareness_weight_personal_message;
            
            private global::System.Data.DataColumn columnpre_persuasion_prob;
            
            private global::System.Data.DataColumn columnpost_persuasion_prob;
            
            private global::System.Data.DataColumn columnunits_desired_trigger;
            
            private global::System.Data.DataColumn columnawareness_model;
            
            private global::System.Data.DataColumn columnawareness_threshold;
            
            private global::System.Data.DataColumn columnawareness_decay_rate_pre;
            
            private global::System.Data.DataColumn columnawareness_decay_rate_post;
            
            private global::System.Data.DataColumn columnpersuasion_decay_rate_pre;
            
            private global::System.Data.DataColumn columnpersuasion_decay_rate_post;
            
            private global::System.Data.DataColumn columnpersuasion_decay_method;
            
            private global::System.Data.DataColumn columnproduct_choice_model;
            
            private global::System.Data.DataColumn columnpersuasion_score;
            
            private global::System.Data.DataColumn columnpersuasion_value_computation;
            
            private global::System.Data.DataColumn columnpersuasion_contribution_overall_score;
            
            private global::System.Data.DataColumn columnutility_score;
            
            private global::System.Data.DataColumn columncombination_part_utilities;
            
            private global::System.Data.DataColumn columnprice_contribution_overall_score;
            
            private global::System.Data.DataColumn columnprice_score;
            
            private global::System.Data.DataColumn columnprice_value;
            
            private global::System.Data.DataColumn columnreference_price;
            
            private global::System.Data.DataColumn columnchoice_prob;
            
            private global::System.Data.DataColumn columninertia_model;
            
            private global::System.Data.DataColumn columnerror_term;
            
            private global::System.Data.DataColumn columnerror_term_user_value;
            
            private global::System.Data.DataColumn columnloyalty;
            
            private global::System.Data.DataColumn columnmin_freq;
            
            private global::System.Data.DataColumn columnmax_freq;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segmentDataTable() {
                this.TableName = "segment";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal segmentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected segmentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn segment_idColumn {
                get {
                    return this.columnsegment_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn segment_modelColumn {
                get {
                    return this.columnsegment_model;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn segment_nameColumn {
                get {
                    return this.columnsegment_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn colorColumn {
                get {
                    return this.columncolor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn show_current_share_pie_chartColumn {
                get {
                    return this.columnshow_current_share_pie_chart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn show_cmulative_share_chartColumn {
                get {
                    return this.columnshow_cmulative_share_chart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn segment_sizeColumn {
                get {
                    return this.columnsegment_size;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn growth_rateColumn {
                get {
                    return this.columngrowth_rate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn growth_rate_people_percentColumn {
                get {
                    return this.columngrowth_rate_people_percent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn growth_rate_month_yearColumn {
                get {
                    return this.columngrowth_rate_month_year;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn compress_populationColumn {
                get {
                    return this.columncompress_population;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn variabilityColumn {
                get {
                    return this.columnvariability;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn price_disutilityColumn {
                get {
                    return this.columnprice_disutility;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn attribute_sensitivityColumn {
                get {
                    return this.columnattribute_sensitivity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn persuasion_scalingColumn {
                get {
                    return this.columnpersuasion_scaling;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn display_utilityColumn {
                get {
                    return this.columndisplay_utility;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn display_utility_scaling_factorColumn {
                get {
                    return this.columndisplay_utility_scaling_factor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn max_display_hits_per_tripColumn {
                get {
                    return this.columnmax_display_hits_per_trip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn inertiaColumn {
                get {
                    return this.columninertia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn repurchaseColumn {
                get {
                    return this.columnrepurchase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn repurchase_modelColumn {
                get {
                    return this.columnrepurchase_model;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gamma_location_parameter_aColumn {
                get {
                    return this.columngamma_location_parameter_a;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gamma_shape_parameter_kColumn {
                get {
                    return this.columngamma_shape_parameter_k;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn repurchase_period_frequencyColumn {
                get {
                    return this.columnrepurchase_period_frequency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn repurchase_frequency_variationColumn {
                get {
                    return this.columnrepurchase_frequency_variation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn repurchase_timescaleColumn {
                get {
                    return this.columnrepurchase_timescale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn avg_max_units_purchColumn {
                get {
                    return this.columnavg_max_units_purch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shopping_trip_intervalColumn {
                get {
                    return this.columnshopping_trip_interval;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn category_penetrationColumn {
                get {
                    return this.columncategory_penetration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn category_rejectionColumn {
                get {
                    return this.columncategory_rejection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn num_initial_buyersColumn {
                get {
                    return this.columnnum_initial_buyers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn initial_buying_periodColumn {
                get {
                    return this.columninitial_buying_period;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn seed_with_repurchasersColumn {
                get {
                    return this.columnseed_with_repurchasers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn use_budgetColumn {
                get {
                    return this.columnuse_budget;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn budgetColumn {
                get {
                    return this.columnbudget;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn budget_periodColumn {
                get {
                    return this.columnbudget_period;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn save_unspentColumn {
                get {
                    return this.columnsave_unspent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn initial_savingsColumn {
                get {
                    return this.columninitial_savings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn social_network_modelColumn {
                get {
                    return this.columnsocial_network_model;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn num_close_contactsColumn {
                get {
                    return this.columnnum_close_contacts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn prob_talking_close_contact_preColumn {
                get {
                    return this.columnprob_talking_close_contact_pre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn prob_talking_close_contact_postColumn {
                get {
                    return this.columnprob_talking_close_contact_post;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn use_localColumn {
                get {
                    return this.columnuse_local;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn num_distant_contactsColumn {
                get {
                    return this.columnnum_distant_contacts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn prob_talk_distant_contact_preColumn {
                get {
                    return this.columnprob_talk_distant_contact_pre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn prob_talk_distant_contact_postColumn {
                get {
                    return this.columnprob_talk_distant_contact_post;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn awareness_weight_personal_messageColumn {
                get {
                    return this.columnawareness_weight_personal_message;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pre_persuasion_probColumn {
                get {
                    return this.columnpre_persuasion_prob;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn post_persuasion_probColumn {
                get {
                    return this.columnpost_persuasion_prob;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn units_desired_triggerColumn {
                get {
                    return this.columnunits_desired_trigger;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn awareness_modelColumn {
                get {
                    return this.columnawareness_model;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn awareness_thresholdColumn {
                get {
                    return this.columnawareness_threshold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn awareness_decay_rate_preColumn {
                get {
                    return this.columnawareness_decay_rate_pre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn awareness_decay_rate_postColumn {
                get {
                    return this.columnawareness_decay_rate_post;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn persuasion_decay_rate_preColumn {
                get {
                    return this.columnpersuasion_decay_rate_pre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn persuasion_decay_rate_postColumn {
                get {
                    return this.columnpersuasion_decay_rate_post;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn persuasion_decay_methodColumn {
                get {
                    return this.columnpersuasion_decay_method;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_choice_modelColumn {
                get {
                    return this.columnproduct_choice_model;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn persuasion_scoreColumn {
                get {
                    return this.columnpersuasion_score;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn persuasion_value_computationColumn {
                get {
                    return this.columnpersuasion_value_computation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn persuasion_contribution_overall_scoreColumn {
                get {
                    return this.columnpersuasion_contribution_overall_score;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn utility_scoreColumn {
                get {
                    return this.columnutility_score;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn combination_part_utilitiesColumn {
                get {
                    return this.columncombination_part_utilities;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn price_contribution_overall_scoreColumn {
                get {
                    return this.columnprice_contribution_overall_score;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn price_scoreColumn {
                get {
                    return this.columnprice_score;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn price_valueColumn {
                get {
                    return this.columnprice_value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn reference_priceColumn {
                get {
                    return this.columnreference_price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn choice_probColumn {
                get {
                    return this.columnchoice_prob;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn inertia_modelColumn {
                get {
                    return this.columninertia_model;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn error_termColumn {
                get {
                    return this.columnerror_term;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn error_term_user_valueColumn {
                get {
                    return this.columnerror_term_user_value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn loyaltyColumn {
                get {
                    return this.columnloyalty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn min_freqColumn {
                get {
                    return this.columnmin_freq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn max_freqColumn {
                get {
                    return this.columnmax_freq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segmentRow this[int index] {
                get {
                    return ((segmentRow)(this.Rows[index]));
                }
            }
            
            public event segmentRowChangeEventHandler segmentRowChanging;
            
            public event segmentRowChangeEventHandler segmentRowChanged;
            
            public event segmentRowChangeEventHandler segmentRowDeleting;
            
            public event segmentRowChangeEventHandler segmentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddsegmentRow(segmentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segmentRow AddsegmentRow(
                        Model_infoRow parentModel_infoRowByModel_infosegment, 
                        string segment_model, 
                        string segment_name, 
                        string color, 
                        string show_current_share_pie_chart, 
                        string show_cmulative_share_chart, 
                        double segment_size, 
                        double growth_rate, 
                        string growth_rate_people_percent, 
                        string growth_rate_month_year, 
                        string compress_population, 
                        int variability, 
                        double price_disutility, 
                        double attribute_sensitivity, 
                        double persuasion_scaling, 
                        double display_utility, 
                        double display_utility_scaling_factor, 
                        double max_display_hits_per_trip, 
                        double inertia, 
                        string repurchase, 
                        string repurchase_model, 
                        double gamma_location_parameter_a, 
                        double gamma_shape_parameter_k, 
                        double repurchase_period_frequency, 
                        double repurchase_frequency_variation, 
                        string repurchase_timescale, 
                        double avg_max_units_purch, 
                        double shopping_trip_interval, 
                        int category_penetration, 
                        int category_rejection, 
                        long num_initial_buyers, 
                        double initial_buying_period, 
                        string seed_with_repurchasers, 
                        string use_budget, 
                        double budget, 
                        string budget_period, 
                        string save_unspent, 
                        double initial_savings, 
                        string social_network_model, 
                        double num_close_contacts, 
                        double prob_talking_close_contact_pre, 
                        double prob_talking_close_contact_post, 
                        string use_local, 
                        double num_distant_contacts, 
                        double prob_talk_distant_contact_pre, 
                        double prob_talk_distant_contact_post, 
                        double awareness_weight_personal_message, 
                        double pre_persuasion_prob, 
                        double post_persuasion_prob, 
                        double units_desired_trigger, 
                        string awareness_model, 
                        double awareness_threshold, 
                        double awareness_decay_rate_pre, 
                        double awareness_decay_rate_post, 
                        double persuasion_decay_rate_pre, 
                        double persuasion_decay_rate_post, 
                        string persuasion_decay_method, 
                        string product_choice_model, 
                        string persuasion_score, 
                        string persuasion_value_computation, 
                        string persuasion_contribution_overall_score, 
                        string utility_score, 
                        string combination_part_utilities, 
                        string price_contribution_overall_score, 
                        string price_score, 
                        string price_value, 
                        double reference_price, 
                        string choice_prob, 
                        string inertia_model, 
                        string error_term, 
                        int error_term_user_value, 
                        double loyalty, 
                        double min_freq, 
                        double max_freq) {
                segmentRow rowsegmentRow = ((segmentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        segment_model,
                        segment_name,
                        color,
                        show_current_share_pie_chart,
                        show_cmulative_share_chart,
                        segment_size,
                        growth_rate,
                        growth_rate_people_percent,
                        growth_rate_month_year,
                        compress_population,
                        variability,
                        price_disutility,
                        attribute_sensitivity,
                        persuasion_scaling,
                        display_utility,
                        display_utility_scaling_factor,
                        max_display_hits_per_trip,
                        inertia,
                        repurchase,
                        repurchase_model,
                        gamma_location_parameter_a,
                        gamma_shape_parameter_k,
                        repurchase_period_frequency,
                        repurchase_frequency_variation,
                        repurchase_timescale,
                        avg_max_units_purch,
                        shopping_trip_interval,
                        category_penetration,
                        category_rejection,
                        num_initial_buyers,
                        initial_buying_period,
                        seed_with_repurchasers,
                        use_budget,
                        budget,
                        budget_period,
                        save_unspent,
                        initial_savings,
                        social_network_model,
                        num_close_contacts,
                        prob_talking_close_contact_pre,
                        prob_talking_close_contact_post,
                        use_local,
                        num_distant_contacts,
                        prob_talk_distant_contact_pre,
                        prob_talk_distant_contact_post,
                        awareness_weight_personal_message,
                        pre_persuasion_prob,
                        post_persuasion_prob,
                        units_desired_trigger,
                        awareness_model,
                        awareness_threshold,
                        awareness_decay_rate_pre,
                        awareness_decay_rate_post,
                        persuasion_decay_rate_pre,
                        persuasion_decay_rate_post,
                        persuasion_decay_method,
                        product_choice_model,
                        persuasion_score,
                        persuasion_value_computation,
                        persuasion_contribution_overall_score,
                        utility_score,
                        combination_part_utilities,
                        price_contribution_overall_score,
                        price_score,
                        price_value,
                        reference_price,
                        choice_prob,
                        inertia_model,
                        error_term,
                        error_term_user_value,
                        loyalty,
                        min_freq,
                        max_freq};
                if ((parentModel_infoRowByModel_infosegment != null)) {
                    columnValuesArray[0] = parentModel_infoRowByModel_infosegment[0];
                }
                rowsegmentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsegmentRow);
                return rowsegmentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segmentRow FindBysegment_id(int segment_id) {
                return ((segmentRow)(this.Rows.Find(new object[] {
                            segment_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                segmentDataTable cln = ((segmentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new segmentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmodel_id = base.Columns["model_id"];
                this.columnsegment_id = base.Columns["segment_id"];
                this.columnsegment_model = base.Columns["segment_model"];
                this.columnsegment_name = base.Columns["segment_name"];
                this.columncolor = base.Columns["color"];
                this.columnshow_current_share_pie_chart = base.Columns["show_current_share_pie_chart"];
                this.columnshow_cmulative_share_chart = base.Columns["show_cmulative_share_chart"];
                this.columnsegment_size = base.Columns["segment_size"];
                this.columngrowth_rate = base.Columns["growth_rate"];
                this.columngrowth_rate_people_percent = base.Columns["growth_rate_people_percent"];
                this.columngrowth_rate_month_year = base.Columns["growth_rate_month_year"];
                this.columncompress_population = base.Columns["compress_population"];
                this.columnvariability = base.Columns["variability"];
                this.columnprice_disutility = base.Columns["price_disutility"];
                this.columnattribute_sensitivity = base.Columns["attribute_sensitivity"];
                this.columnpersuasion_scaling = base.Columns["persuasion_scaling"];
                this.columndisplay_utility = base.Columns["display_utility"];
                this.columndisplay_utility_scaling_factor = base.Columns["display_utility_scaling_factor"];
                this.columnmax_display_hits_per_trip = base.Columns["max_display_hits_per_trip"];
                this.columninertia = base.Columns["inertia"];
                this.columnrepurchase = base.Columns["repurchase"];
                this.columnrepurchase_model = base.Columns["repurchase_model"];
                this.columngamma_location_parameter_a = base.Columns["gamma_location_parameter_a"];
                this.columngamma_shape_parameter_k = base.Columns["gamma_shape_parameter_k"];
                this.columnrepurchase_period_frequency = base.Columns["repurchase_period_frequency"];
                this.columnrepurchase_frequency_variation = base.Columns["repurchase_frequency_variation"];
                this.columnrepurchase_timescale = base.Columns["repurchase_timescale"];
                this.columnavg_max_units_purch = base.Columns["avg_max_units_purch"];
                this.columnshopping_trip_interval = base.Columns["shopping_trip_interval"];
                this.columncategory_penetration = base.Columns["category_penetration"];
                this.columncategory_rejection = base.Columns["category_rejection"];
                this.columnnum_initial_buyers = base.Columns["num_initial_buyers"];
                this.columninitial_buying_period = base.Columns["initial_buying_period"];
                this.columnseed_with_repurchasers = base.Columns["seed_with_repurchasers"];
                this.columnuse_budget = base.Columns["use_budget"];
                this.columnbudget = base.Columns["budget"];
                this.columnbudget_period = base.Columns["budget_period"];
                this.columnsave_unspent = base.Columns["save_unspent"];
                this.columninitial_savings = base.Columns["initial_savings"];
                this.columnsocial_network_model = base.Columns["social_network_model"];
                this.columnnum_close_contacts = base.Columns["num_close_contacts"];
                this.columnprob_talking_close_contact_pre = base.Columns["prob_talking_close_contact_pre"];
                this.columnprob_talking_close_contact_post = base.Columns["prob_talking_close_contact_post"];
                this.columnuse_local = base.Columns["use_local"];
                this.columnnum_distant_contacts = base.Columns["num_distant_contacts"];
                this.columnprob_talk_distant_contact_pre = base.Columns["prob_talk_distant_contact_pre"];
                this.columnprob_talk_distant_contact_post = base.Columns["prob_talk_distant_contact_post"];
                this.columnawareness_weight_personal_message = base.Columns["awareness_weight_personal_message"];
                this.columnpre_persuasion_prob = base.Columns["pre_persuasion_prob"];
                this.columnpost_persuasion_prob = base.Columns["post_persuasion_prob"];
                this.columnunits_desired_trigger = base.Columns["units_desired_trigger"];
                this.columnawareness_model = base.Columns["awareness_model"];
                this.columnawareness_threshold = base.Columns["awareness_threshold"];
                this.columnawareness_decay_rate_pre = base.Columns["awareness_decay_rate_pre"];
                this.columnawareness_decay_rate_post = base.Columns["awareness_decay_rate_post"];
                this.columnpersuasion_decay_rate_pre = base.Columns["persuasion_decay_rate_pre"];
                this.columnpersuasion_decay_rate_post = base.Columns["persuasion_decay_rate_post"];
                this.columnpersuasion_decay_method = base.Columns["persuasion_decay_method"];
                this.columnproduct_choice_model = base.Columns["product_choice_model"];
                this.columnpersuasion_score = base.Columns["persuasion_score"];
                this.columnpersuasion_value_computation = base.Columns["persuasion_value_computation"];
                this.columnpersuasion_contribution_overall_score = base.Columns["persuasion_contribution_overall_score"];
                this.columnutility_score = base.Columns["utility_score"];
                this.columncombination_part_utilities = base.Columns["combination_part_utilities"];
                this.columnprice_contribution_overall_score = base.Columns["price_contribution_overall_score"];
                this.columnprice_score = base.Columns["price_score"];
                this.columnprice_value = base.Columns["price_value"];
                this.columnreference_price = base.Columns["reference_price"];
                this.columnchoice_prob = base.Columns["choice_prob"];
                this.columninertia_model = base.Columns["inertia_model"];
                this.columnerror_term = base.Columns["error_term"];
                this.columnerror_term_user_value = base.Columns["error_term_user_value"];
                this.columnloyalty = base.Columns["loyalty"];
                this.columnmin_freq = base.Columns["min_freq"];
                this.columnmax_freq = base.Columns["max_freq"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnsegment_id = new global::System.Data.DataColumn("segment_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsegment_id);
                this.columnsegment_model = new global::System.Data.DataColumn("segment_model", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsegment_model);
                this.columnsegment_name = new global::System.Data.DataColumn("segment_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsegment_name);
                this.columncolor = new global::System.Data.DataColumn("color", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor);
                this.columnshow_current_share_pie_chart = new global::System.Data.DataColumn("show_current_share_pie_chart", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshow_current_share_pie_chart);
                this.columnshow_cmulative_share_chart = new global::System.Data.DataColumn("show_cmulative_share_chart", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshow_cmulative_share_chart);
                this.columnsegment_size = new global::System.Data.DataColumn("segment_size", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsegment_size);
                this.columngrowth_rate = new global::System.Data.DataColumn("growth_rate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngrowth_rate);
                this.columngrowth_rate_people_percent = new global::System.Data.DataColumn("growth_rate_people_percent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngrowth_rate_people_percent);
                this.columngrowth_rate_month_year = new global::System.Data.DataColumn("growth_rate_month_year", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngrowth_rate_month_year);
                this.columncompress_population = new global::System.Data.DataColumn("compress_population", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompress_population);
                this.columnvariability = new global::System.Data.DataColumn("variability", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvariability);
                this.columnprice_disutility = new global::System.Data.DataColumn("price_disutility", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice_disutility);
                this.columnattribute_sensitivity = new global::System.Data.DataColumn("attribute_sensitivity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattribute_sensitivity);
                this.columnpersuasion_scaling = new global::System.Data.DataColumn("persuasion_scaling", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpersuasion_scaling);
                this.columndisplay_utility = new global::System.Data.DataColumn("display_utility", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndisplay_utility);
                this.columndisplay_utility_scaling_factor = new global::System.Data.DataColumn("display_utility_scaling_factor", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndisplay_utility_scaling_factor);
                this.columnmax_display_hits_per_trip = new global::System.Data.DataColumn("max_display_hits_per_trip", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmax_display_hits_per_trip);
                this.columninertia = new global::System.Data.DataColumn("inertia", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninertia);
                this.columnrepurchase = new global::System.Data.DataColumn("repurchase", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrepurchase);
                this.columnrepurchase_model = new global::System.Data.DataColumn("repurchase_model", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrepurchase_model);
                this.columngamma_location_parameter_a = new global::System.Data.DataColumn("gamma_location_parameter_a", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngamma_location_parameter_a);
                this.columngamma_shape_parameter_k = new global::System.Data.DataColumn("gamma_shape_parameter_k", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngamma_shape_parameter_k);
                this.columnrepurchase_period_frequency = new global::System.Data.DataColumn("repurchase_period_frequency", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrepurchase_period_frequency);
                this.columnrepurchase_frequency_variation = new global::System.Data.DataColumn("repurchase_frequency_variation", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrepurchase_frequency_variation);
                this.columnrepurchase_timescale = new global::System.Data.DataColumn("repurchase_timescale", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrepurchase_timescale);
                this.columnavg_max_units_purch = new global::System.Data.DataColumn("avg_max_units_purch", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnavg_max_units_purch);
                this.columnshopping_trip_interval = new global::System.Data.DataColumn("shopping_trip_interval", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshopping_trip_interval);
                this.columncategory_penetration = new global::System.Data.DataColumn("category_penetration", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncategory_penetration);
                this.columncategory_rejection = new global::System.Data.DataColumn("category_rejection", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncategory_rejection);
                this.columnnum_initial_buyers = new global::System.Data.DataColumn("num_initial_buyers", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnum_initial_buyers);
                this.columninitial_buying_period = new global::System.Data.DataColumn("initial_buying_period", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninitial_buying_period);
                this.columnseed_with_repurchasers = new global::System.Data.DataColumn("seed_with_repurchasers", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseed_with_repurchasers);
                this.columnuse_budget = new global::System.Data.DataColumn("use_budget", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuse_budget);
                this.columnbudget = new global::System.Data.DataColumn("budget", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbudget);
                this.columnbudget_period = new global::System.Data.DataColumn("budget_period", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbudget_period);
                this.columnsave_unspent = new global::System.Data.DataColumn("save_unspent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsave_unspent);
                this.columninitial_savings = new global::System.Data.DataColumn("initial_savings", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninitial_savings);
                this.columnsocial_network_model = new global::System.Data.DataColumn("social_network_model", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsocial_network_model);
                this.columnnum_close_contacts = new global::System.Data.DataColumn("num_close_contacts", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnum_close_contacts);
                this.columnprob_talking_close_contact_pre = new global::System.Data.DataColumn("prob_talking_close_contact_pre", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprob_talking_close_contact_pre);
                this.columnprob_talking_close_contact_post = new global::System.Data.DataColumn("prob_talking_close_contact_post", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprob_talking_close_contact_post);
                this.columnuse_local = new global::System.Data.DataColumn("use_local", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuse_local);
                this.columnnum_distant_contacts = new global::System.Data.DataColumn("num_distant_contacts", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnum_distant_contacts);
                this.columnprob_talk_distant_contact_pre = new global::System.Data.DataColumn("prob_talk_distant_contact_pre", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprob_talk_distant_contact_pre);
                this.columnprob_talk_distant_contact_post = new global::System.Data.DataColumn("prob_talk_distant_contact_post", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprob_talk_distant_contact_post);
                this.columnawareness_weight_personal_message = new global::System.Data.DataColumn("awareness_weight_personal_message", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnawareness_weight_personal_message);
                this.columnpre_persuasion_prob = new global::System.Data.DataColumn("pre_persuasion_prob", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpre_persuasion_prob);
                this.columnpost_persuasion_prob = new global::System.Data.DataColumn("post_persuasion_prob", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpost_persuasion_prob);
                this.columnunits_desired_trigger = new global::System.Data.DataColumn("units_desired_trigger", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunits_desired_trigger);
                this.columnawareness_model = new global::System.Data.DataColumn("awareness_model", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnawareness_model);
                this.columnawareness_threshold = new global::System.Data.DataColumn("awareness_threshold", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnawareness_threshold);
                this.columnawareness_decay_rate_pre = new global::System.Data.DataColumn("awareness_decay_rate_pre", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnawareness_decay_rate_pre);
                this.columnawareness_decay_rate_post = new global::System.Data.DataColumn("awareness_decay_rate_post", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnawareness_decay_rate_post);
                this.columnpersuasion_decay_rate_pre = new global::System.Data.DataColumn("persuasion_decay_rate_pre", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpersuasion_decay_rate_pre);
                this.columnpersuasion_decay_rate_post = new global::System.Data.DataColumn("persuasion_decay_rate_post", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpersuasion_decay_rate_post);
                this.columnpersuasion_decay_method = new global::System.Data.DataColumn("persuasion_decay_method", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpersuasion_decay_method);
                this.columnproduct_choice_model = new global::System.Data.DataColumn("product_choice_model", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_choice_model);
                this.columnpersuasion_score = new global::System.Data.DataColumn("persuasion_score", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpersuasion_score);
                this.columnpersuasion_value_computation = new global::System.Data.DataColumn("persuasion_value_computation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpersuasion_value_computation);
                this.columnpersuasion_contribution_overall_score = new global::System.Data.DataColumn("persuasion_contribution_overall_score", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpersuasion_contribution_overall_score);
                this.columnutility_score = new global::System.Data.DataColumn("utility_score", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnutility_score);
                this.columncombination_part_utilities = new global::System.Data.DataColumn("combination_part_utilities", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncombination_part_utilities);
                this.columnprice_contribution_overall_score = new global::System.Data.DataColumn("price_contribution_overall_score", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice_contribution_overall_score);
                this.columnprice_score = new global::System.Data.DataColumn("price_score", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice_score);
                this.columnprice_value = new global::System.Data.DataColumn("price_value", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice_value);
                this.columnreference_price = new global::System.Data.DataColumn("reference_price", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreference_price);
                this.columnchoice_prob = new global::System.Data.DataColumn("choice_prob", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchoice_prob);
                this.columninertia_model = new global::System.Data.DataColumn("inertia_model", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninertia_model);
                this.columnerror_term = new global::System.Data.DataColumn("error_term", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnerror_term);
                this.columnerror_term_user_value = new global::System.Data.DataColumn("error_term_user_value", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnerror_term_user_value);
                this.columnloyalty = new global::System.Data.DataColumn("loyalty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnloyalty);
                this.columnmin_freq = new global::System.Data.DataColumn("min_freq", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmin_freq);
                this.columnmax_freq = new global::System.Data.DataColumn("max_freq", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmax_freq);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("MrktSimDBSchemaKey5", new global::System.Data.DataColumn[] {
                                this.columnsegment_id}, true));
                this.columnmodel_id.AllowDBNull = false;
                this.columnsegment_id.AutoIncrement = true;
                this.columnsegment_id.AutoIncrementSeed = -100;
                this.columnsegment_id.AutoIncrementStep = -1;
                this.columnsegment_id.AllowDBNull = false;
                this.columnsegment_id.ReadOnly = true;
                this.columnsegment_id.Unique = true;
                this.columnsegment_size.AllowDBNull = false;
                this.columnmin_freq.AllowDBNull = false;
                this.columnmin_freq.DefaultValue = ((double)(0));
                this.columnmax_freq.AllowDBNull = false;
                this.columnmax_freq.DefaultValue = ((double)(100));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segmentRow NewsegmentRow() {
                return ((segmentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new segmentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(segmentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.segmentRowChanged != null)) {
                    this.segmentRowChanged(this, new segmentRowChangeEvent(((segmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.segmentRowChanging != null)) {
                    this.segmentRowChanging(this, new segmentRowChangeEvent(((segmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.segmentRowDeleted != null)) {
                    this.segmentRowDeleted(this, new segmentRowChangeEvent(((segmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.segmentRowDeleting != null)) {
                    this.segmentRowDeleting(this, new segmentRowChangeEvent(((segmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovesegmentRow(segmentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "segmentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class segment_channelDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnsegment_id;
            
            private global::System.Data.DataColumn columnchannel_id;
            
            private global::System.Data.DataColumn columnprobability_of_choice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segment_channelDataTable() {
                this.TableName = "segment_channel";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal segment_channelDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected segment_channelDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn segment_idColumn {
                get {
                    return this.columnsegment_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn channel_idColumn {
                get {
                    return this.columnchannel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn probability_of_choiceColumn {
                get {
                    return this.columnprobability_of_choice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segment_channelRow this[int index] {
                get {
                    return ((segment_channelRow)(this.Rows[index]));
                }
            }
            
            public event segment_channelRowChangeEventHandler segment_channelRowChanging;
            
            public event segment_channelRowChangeEventHandler segment_channelRowChanged;
            
            public event segment_channelRowChangeEventHandler segment_channelRowDeleting;
            
            public event segment_channelRowChangeEventHandler segment_channelRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addsegment_channelRow(segment_channelRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segment_channelRow Addsegment_channelRow(Model_infoRow parentModel_infoRowByModel_infosegment_channel, segmentRow parentsegmentRowBysegmentsegment_channel, channelRow parentchannelRowBychannelsegment_channel, string probability_of_choice) {
                segment_channelRow rowsegment_channelRow = ((segment_channelRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        probability_of_choice};
                if ((parentModel_infoRowByModel_infosegment_channel != null)) {
                    columnValuesArray[0] = parentModel_infoRowByModel_infosegment_channel[0];
                }
                if ((parentsegmentRowBysegmentsegment_channel != null)) {
                    columnValuesArray[1] = parentsegmentRowBysegmentsegment_channel[1];
                }
                if ((parentchannelRowBychannelsegment_channel != null)) {
                    columnValuesArray[2] = parentchannelRowBychannelsegment_channel[1];
                }
                rowsegment_channelRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsegment_channelRow);
                return rowsegment_channelRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                segment_channelDataTable cln = ((segment_channelDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new segment_channelDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmodel_id = base.Columns["model_id"];
                this.columnsegment_id = base.Columns["segment_id"];
                this.columnchannel_id = base.Columns["channel_id"];
                this.columnprobability_of_choice = base.Columns["probability_of_choice"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnsegment_id = new global::System.Data.DataColumn("segment_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsegment_id);
                this.columnchannel_id = new global::System.Data.DataColumn("channel_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchannel_id);
                this.columnprobability_of_choice = new global::System.Data.DataColumn("probability_of_choice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprobability_of_choice);
                this.columnmodel_id.AllowDBNull = false;
                this.columnsegment_id.AllowDBNull = false;
                this.columnchannel_id.AllowDBNull = false;
                this.columnprobability_of_choice.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segment_channelRow Newsegment_channelRow() {
                return ((segment_channelRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new segment_channelRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(segment_channelRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.segment_channelRowChanged != null)) {
                    this.segment_channelRowChanged(this, new segment_channelRowChangeEvent(((segment_channelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.segment_channelRowChanging != null)) {
                    this.segment_channelRowChanging(this, new segment_channelRowChangeEvent(((segment_channelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.segment_channelRowDeleted != null)) {
                    this.segment_channelRowDeleted(this, new segment_channelRowChangeEvent(((segment_channelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.segment_channelRowDeleting != null)) {
                    this.segment_channelRowDeleting(this, new segment_channelRowChangeEvent(((segment_channelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removesegment_channelRow(segment_channelRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "segment_channelDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class share_pen_brand_awareDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columnsegment_id;
            
            private global::System.Data.DataColumn columninitial_share;
            
            private global::System.Data.DataColumn columnpenetration;
            
            private global::System.Data.DataColumn columnbrand_awareness;
            
            private global::System.Data.DataColumn columnpersuasion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public share_pen_brand_awareDataTable() {
                this.TableName = "share_pen_brand_aware";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal share_pen_brand_awareDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected share_pen_brand_awareDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn segment_idColumn {
                get {
                    return this.columnsegment_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn initial_shareColumn {
                get {
                    return this.columninitial_share;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn penetrationColumn {
                get {
                    return this.columnpenetration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn brand_awarenessColumn {
                get {
                    return this.columnbrand_awareness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn persuasionColumn {
                get {
                    return this.columnpersuasion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public share_pen_brand_awareRow this[int index] {
                get {
                    return ((share_pen_brand_awareRow)(this.Rows[index]));
                }
            }
            
            public event share_pen_brand_awareRowChangeEventHandler share_pen_brand_awareRowChanging;
            
            public event share_pen_brand_awareRowChangeEventHandler share_pen_brand_awareRowChanged;
            
            public event share_pen_brand_awareRowChangeEventHandler share_pen_brand_awareRowDeleting;
            
            public event share_pen_brand_awareRowChangeEventHandler share_pen_brand_awareRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addshare_pen_brand_awareRow(share_pen_brand_awareRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public share_pen_brand_awareRow Addshare_pen_brand_awareRow(Model_infoRow parentModel_infoRowByModel_infoshare_pen_brand_aware, productRow parentproductRowByproductshare_pen_brand_aware, segmentRow parentsegmentRowBysegmentshare_pen_brand_aware, double initial_share, double penetration, double brand_awareness, double persuasion) {
                share_pen_brand_awareRow rowshare_pen_brand_awareRow = ((share_pen_brand_awareRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        initial_share,
                        penetration,
                        brand_awareness,
                        persuasion};
                if ((parentModel_infoRowByModel_infoshare_pen_brand_aware != null)) {
                    columnValuesArray[0] = parentModel_infoRowByModel_infoshare_pen_brand_aware[0];
                }
                if ((parentproductRowByproductshare_pen_brand_aware != null)) {
                    columnValuesArray[1] = parentproductRowByproductshare_pen_brand_aware[1];
                }
                if ((parentsegmentRowBysegmentshare_pen_brand_aware != null)) {
                    columnValuesArray[2] = parentsegmentRowBysegmentshare_pen_brand_aware[1];
                }
                rowshare_pen_brand_awareRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowshare_pen_brand_awareRow);
                return rowshare_pen_brand_awareRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                share_pen_brand_awareDataTable cln = ((share_pen_brand_awareDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new share_pen_brand_awareDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmodel_id = base.Columns["model_id"];
                this.columnproduct_id = base.Columns["product_id"];
                this.columnsegment_id = base.Columns["segment_id"];
                this.columninitial_share = base.Columns["initial_share"];
                this.columnpenetration = base.Columns["penetration"];
                this.columnbrand_awareness = base.Columns["brand_awareness"];
                this.columnpersuasion = base.Columns["persuasion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columnsegment_id = new global::System.Data.DataColumn("segment_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsegment_id);
                this.columninitial_share = new global::System.Data.DataColumn("initial_share", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninitial_share);
                this.columnpenetration = new global::System.Data.DataColumn("penetration", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpenetration);
                this.columnbrand_awareness = new global::System.Data.DataColumn("brand_awareness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbrand_awareness);
                this.columnpersuasion = new global::System.Data.DataColumn("persuasion", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpersuasion);
                this.columnmodel_id.AllowDBNull = false;
                this.columnproduct_id.AllowDBNull = false;
                this.columnsegment_id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public share_pen_brand_awareRow Newshare_pen_brand_awareRow() {
                return ((share_pen_brand_awareRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new share_pen_brand_awareRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(share_pen_brand_awareRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.share_pen_brand_awareRowChanged != null)) {
                    this.share_pen_brand_awareRowChanged(this, new share_pen_brand_awareRowChangeEvent(((share_pen_brand_awareRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.share_pen_brand_awareRowChanging != null)) {
                    this.share_pen_brand_awareRowChanging(this, new share_pen_brand_awareRowChangeEvent(((share_pen_brand_awareRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.share_pen_brand_awareRowDeleted != null)) {
                    this.share_pen_brand_awareRowDeleted(this, new share_pen_brand_awareRowChangeEvent(((share_pen_brand_awareRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.share_pen_brand_awareRowDeleting != null)) {
                    this.share_pen_brand_awareRowDeleting(this, new share_pen_brand_awareRowChangeEvent(((share_pen_brand_awareRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeshare_pen_brand_awareRow(share_pen_brand_awareRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "share_pen_brand_awareDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class task_rate_factDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnsegment_id;
            
            private global::System.Data.DataColumn columntask_id;
            
            private global::System.Data.DataColumn columnstart_date;
            
            private global::System.Data.DataColumn columnend_date;
            
            private global::System.Data.DataColumn columntime_period;
            
            private global::System.Data.DataColumn columntask_rate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public task_rate_factDataTable() {
                this.TableName = "task_rate_fact";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal task_rate_factDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected task_rate_factDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn segment_idColumn {
                get {
                    return this.columnsegment_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn task_idColumn {
                get {
                    return this.columntask_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_dateColumn {
                get {
                    return this.columnstart_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn end_dateColumn {
                get {
                    return this.columnend_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn time_periodColumn {
                get {
                    return this.columntime_period;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn task_rateColumn {
                get {
                    return this.columntask_rate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public task_rate_factRow this[int index] {
                get {
                    return ((task_rate_factRow)(this.Rows[index]));
                }
            }
            
            public event task_rate_factRowChangeEventHandler task_rate_factRowChanging;
            
            public event task_rate_factRowChangeEventHandler task_rate_factRowChanged;
            
            public event task_rate_factRowChangeEventHandler task_rate_factRowDeleting;
            
            public event task_rate_factRowChangeEventHandler task_rate_factRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtask_rate_factRow(task_rate_factRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public task_rate_factRow Addtask_rate_factRow(Model_infoRow parentModel_infoRowByModel_infotask_rate_fact, segmentRow parentsegmentRowBysegmenttask_rate_fact, taskRow parenttaskRowBytasktask_rate_fact, System.DateTime start_date, System.DateTime end_date, string time_period, double task_rate) {
                task_rate_factRow rowtask_rate_factRow = ((task_rate_factRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        start_date,
                        end_date,
                        time_period,
                        task_rate};
                if ((parentModel_infoRowByModel_infotask_rate_fact != null)) {
                    columnValuesArray[0] = parentModel_infoRowByModel_infotask_rate_fact[0];
                }
                if ((parentsegmentRowBysegmenttask_rate_fact != null)) {
                    columnValuesArray[1] = parentsegmentRowBysegmenttask_rate_fact[1];
                }
                if ((parenttaskRowBytasktask_rate_fact != null)) {
                    columnValuesArray[2] = parenttaskRowBytasktask_rate_fact[1];
                }
                rowtask_rate_factRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtask_rate_factRow);
                return rowtask_rate_factRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                task_rate_factDataTable cln = ((task_rate_factDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new task_rate_factDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmodel_id = base.Columns["model_id"];
                this.columnsegment_id = base.Columns["segment_id"];
                this.columntask_id = base.Columns["task_id"];
                this.columnstart_date = base.Columns["start_date"];
                this.columnend_date = base.Columns["end_date"];
                this.columntime_period = base.Columns["time_period"];
                this.columntask_rate = base.Columns["task_rate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnsegment_id = new global::System.Data.DataColumn("segment_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsegment_id);
                this.columntask_id = new global::System.Data.DataColumn("task_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntask_id);
                this.columnstart_date = new global::System.Data.DataColumn("start_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_date);
                this.columnend_date = new global::System.Data.DataColumn("end_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_date);
                this.columntime_period = new global::System.Data.DataColumn("time_period", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntime_period);
                this.columntask_rate = new global::System.Data.DataColumn("task_rate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntask_rate);
                this.columnmodel_id.AllowDBNull = false;
                this.columnsegment_id.AllowDBNull = false;
                this.columntask_id.AllowDBNull = false;
                this.columnstart_date.AllowDBNull = false;
                this.columnend_date.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public task_rate_factRow Newtask_rate_factRow() {
                return ((task_rate_factRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new task_rate_factRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(task_rate_factRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.task_rate_factRowChanged != null)) {
                    this.task_rate_factRowChanged(this, new task_rate_factRowChangeEvent(((task_rate_factRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.task_rate_factRowChanging != null)) {
                    this.task_rate_factRowChanging(this, new task_rate_factRowChangeEvent(((task_rate_factRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.task_rate_factRowDeleted != null)) {
                    this.task_rate_factRowDeleted(this, new task_rate_factRowChangeEvent(((task_rate_factRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.task_rate_factRowDeleting != null)) {
                    this.task_rate_factRowDeleting(this, new task_rate_factRowChangeEvent(((task_rate_factRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetask_rate_factRow(task_rate_factRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "task_rate_factDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class productDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columnproduct_name;
            
            private global::System.Data.DataColumn columnbrand_id;
            
            private global::System.Data.DataColumn columntype;
            
            private global::System.Data.DataColumn columnproduct_group;
            
            private global::System.Data.DataColumn columnrelated_group;
            
            private global::System.Data.DataColumn columnpercent_relation;
            
            private global::System.Data.DataColumn columncost;
            
            private global::System.Data.DataColumn columninitial_dislike_probability;
            
            private global::System.Data.DataColumn columnrepeat_like_probability;
            
            private global::System.Data.DataColumn columncolor;
            
            private global::System.Data.DataColumn columncompany_name;
            
            private global::System.Data.DataColumn columnSKU;
            
            private global::System.Data.DataColumn columnproduct_base_name;
            
            private global::System.Data.DataColumn columnproduct_type;
            
            private global::System.Data.DataColumn columnbase_price;
            
            private global::System.Data.DataColumn columneq_units;
            
            private global::System.Data.DataColumn columnpack_size_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public productDataTable() {
                this.TableName = "product";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal productDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected productDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_nameColumn {
                get {
                    return this.columnproduct_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn brand_idColumn {
                get {
                    return this.columnbrand_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn typeColumn {
                get {
                    return this.columntype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_groupColumn {
                get {
                    return this.columnproduct_group;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn related_groupColumn {
                get {
                    return this.columnrelated_group;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn percent_relationColumn {
                get {
                    return this.columnpercent_relation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn costColumn {
                get {
                    return this.columncost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn initial_dislike_probabilityColumn {
                get {
                    return this.columninitial_dislike_probability;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn repeat_like_probabilityColumn {
                get {
                    return this.columnrepeat_like_probability;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn colorColumn {
                get {
                    return this.columncolor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn company_nameColumn {
                get {
                    return this.columncompany_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SKUColumn {
                get {
                    return this.columnSKU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_base_nameColumn {
                get {
                    return this.columnproduct_base_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_typeColumn {
                get {
                    return this.columnproduct_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn base_priceColumn {
                get {
                    return this.columnbase_price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn eq_unitsColumn {
                get {
                    return this.columneq_units;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pack_size_idColumn {
                get {
                    return this.columnpack_size_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public productRow this[int index] {
                get {
                    return ((productRow)(this.Rows[index]));
                }
            }
            
            public event productRowChangeEventHandler productRowChanging;
            
            public event productRowChangeEventHandler productRowChanged;
            
            public event productRowChangeEventHandler productRowDeleting;
            
            public event productRowChangeEventHandler productRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddproductRow(productRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public productRow AddproductRow(
                        Model_infoRow parentModel_infoRowByModel_infoproduct, 
                        string product_name, 
                        int brand_id, 
                        string type, 
                        string product_group, 
                        string related_group, 
                        string percent_relation, 
                        double cost, 
                        double initial_dislike_probability, 
                        double repeat_like_probability, 
                        string color, 
                        string company_name, 
                        string SKU, 
                        string product_base_name, 
                        product_typeRow parentproduct_typeRowByproductproduct_type, 
                        double base_price, 
                        double eq_units, 
                        pack_sizeRow parentpack_sizeRowByFK_pack_size_product) {
                productRow rowproductRow = ((productRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        product_name,
                        brand_id,
                        type,
                        product_group,
                        related_group,
                        percent_relation,
                        cost,
                        initial_dislike_probability,
                        repeat_like_probability,
                        color,
                        company_name,
                        SKU,
                        product_base_name,
                        null,
                        base_price,
                        eq_units,
                        null};
                if ((parentModel_infoRowByModel_infoproduct != null)) {
                    columnValuesArray[0] = parentModel_infoRowByModel_infoproduct[0];
                }
                if ((parentproduct_typeRowByproductproduct_type != null)) {
                    columnValuesArray[15] = parentproduct_typeRowByproductproduct_type[1];
                }
                if ((parentpack_sizeRowByFK_pack_size_product != null)) {
                    columnValuesArray[18] = parentpack_sizeRowByFK_pack_size_product[0];
                }
                rowproductRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowproductRow);
                return rowproductRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public productRow FindByproduct_id(int product_id) {
                return ((productRow)(this.Rows.Find(new object[] {
                            product_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                productDataTable cln = ((productDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new productDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmodel_id = base.Columns["model_id"];
                this.columnproduct_id = base.Columns["product_id"];
                this.columnproduct_name = base.Columns["product_name"];
                this.columnbrand_id = base.Columns["brand_id"];
                this.columntype = base.Columns["type"];
                this.columnproduct_group = base.Columns["product_group"];
                this.columnrelated_group = base.Columns["related_group"];
                this.columnpercent_relation = base.Columns["percent_relation"];
                this.columncost = base.Columns["cost"];
                this.columninitial_dislike_probability = base.Columns["initial_dislike_probability"];
                this.columnrepeat_like_probability = base.Columns["repeat_like_probability"];
                this.columncolor = base.Columns["color"];
                this.columncompany_name = base.Columns["company_name"];
                this.columnSKU = base.Columns["SKU"];
                this.columnproduct_base_name = base.Columns["product_base_name"];
                this.columnproduct_type = base.Columns["product_type"];
                this.columnbase_price = base.Columns["base_price"];
                this.columneq_units = base.Columns["eq_units"];
                this.columnpack_size_id = base.Columns["pack_size_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columnproduct_name = new global::System.Data.DataColumn("product_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_name);
                this.columnbrand_id = new global::System.Data.DataColumn("brand_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbrand_id);
                this.columntype = new global::System.Data.DataColumn("type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype);
                this.columnproduct_group = new global::System.Data.DataColumn("product_group", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_group);
                this.columnrelated_group = new global::System.Data.DataColumn("related_group", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrelated_group);
                this.columnpercent_relation = new global::System.Data.DataColumn("percent_relation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpercent_relation);
                this.columncost = new global::System.Data.DataColumn("cost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncost);
                this.columninitial_dislike_probability = new global::System.Data.DataColumn("initial_dislike_probability", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninitial_dislike_probability);
                this.columnrepeat_like_probability = new global::System.Data.DataColumn("repeat_like_probability", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrepeat_like_probability);
                this.columncolor = new global::System.Data.DataColumn("color", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor);
                this.columncompany_name = new global::System.Data.DataColumn("company_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_name);
                this.columnSKU = new global::System.Data.DataColumn("SKU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSKU);
                this.columnproduct_base_name = new global::System.Data.DataColumn("product_base_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_base_name);
                this.columnproduct_type = new global::System.Data.DataColumn("product_type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_type);
                this.columnbase_price = new global::System.Data.DataColumn("base_price", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbase_price);
                this.columneq_units = new global::System.Data.DataColumn("eq_units", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columneq_units);
                this.columnpack_size_id = new global::System.Data.DataColumn("pack_size_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpack_size_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("MrktSimDBSchemaKey3", new global::System.Data.DataColumn[] {
                                this.columnproduct_id}, true));
                this.columnmodel_id.AllowDBNull = false;
                this.columnproduct_id.AutoIncrement = true;
                this.columnproduct_id.AutoIncrementSeed = -100;
                this.columnproduct_id.AutoIncrementStep = -1;
                this.columnproduct_id.AllowDBNull = false;
                this.columnproduct_id.ReadOnly = true;
                this.columnproduct_id.Unique = true;
                this.columnbrand_id.AllowDBNull = false;
                this.columntype.AllowDBNull = false;
                this.columnproduct_group.AllowDBNull = false;
                this.columnrelated_group.AllowDBNull = false;
                this.columnpercent_relation.AllowDBNull = false;
                this.columnpack_size_id.AllowDBNull = false;
                this.columnpack_size_id.DefaultValue = ((int)(-1));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public productRow NewproductRow() {
                return ((productRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new productRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(productRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.productRowChanged != null)) {
                    this.productRowChanged(this, new productRowChangeEvent(((productRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.productRowChanging != null)) {
                    this.productRowChanging(this, new productRowChangeEvent(((productRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.productRowDeleted != null)) {
                    this.productRowDeleted(this, new productRowChangeEvent(((productRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.productRowDeleting != null)) {
                    this.productRowDeleting(this, new productRowChangeEvent(((productRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveproductRow(productRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "productDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class product_channelDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columnchannel_id;
            
            private global::System.Data.DataColumn columnmarkup;
            
            private global::System.Data.DataColumn columnprice;
            
            private global::System.Data.DataColumn columnperiodic_price;
            
            private global::System.Data.DataColumn columnhow_often;
            
            private global::System.Data.DataColumn columnpercent_SKU_in_dist;
            
            private global::System.Data.DataColumn columnptype;
            
            private global::System.Data.DataColumn columnstart_date;
            
            private global::System.Data.DataColumn columnend_date;
            
            private global::System.Data.DataColumn columnrecord_id;
            
            private global::System.Data.DataColumn columnduration;
            
            private global::System.Data.DataColumn columnmarket_plan_id;
            
            private global::System.Data.DataColumn columnprice_type;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_channelDataTable() {
                this.TableName = "product_channel";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal product_channelDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected product_channelDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn channel_idColumn {
                get {
                    return this.columnchannel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn markupColumn {
                get {
                    return this.columnmarkup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn priceColumn {
                get {
                    return this.columnprice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn periodic_priceColumn {
                get {
                    return this.columnperiodic_price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn how_oftenColumn {
                get {
                    return this.columnhow_often;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn percent_SKU_in_distColumn {
                get {
                    return this.columnpercent_SKU_in_dist;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ptypeColumn {
                get {
                    return this.columnptype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_dateColumn {
                get {
                    return this.columnstart_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn end_dateColumn {
                get {
                    return this.columnend_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn record_idColumn {
                get {
                    return this.columnrecord_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn durationColumn {
                get {
                    return this.columnduration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn market_plan_idColumn {
                get {
                    return this.columnmarket_plan_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn price_typeColumn {
                get {
                    return this.columnprice_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_channelRow this[int index] {
                get {
                    return ((product_channelRow)(this.Rows[index]));
                }
            }
            
            public event product_channelRowChangeEventHandler product_channelRowChanging;
            
            public event product_channelRowChangeEventHandler product_channelRowChanged;
            
            public event product_channelRowChangeEventHandler product_channelRowDeleting;
            
            public event product_channelRowChangeEventHandler product_channelRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addproduct_channelRow(product_channelRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_channelRow Addproduct_channelRow(Model_infoRow parentModel_infoRowByModel_infoproduct_channel, productRow parentproductRowByproductproduct_channel, channelRow parentchannelRowBychannelproduct_channel, double markup, double price, double periodic_price, string how_often, double percent_SKU_in_dist, string ptype, System.DateTime start_date, System.DateTime end_date, int duration, market_planRow parentmarket_planRowBymarket_planproduct_channel, price_typeRow parentprice_typeRowByFK_price_type_product_channel) {
                product_channelRow rowproduct_channelRow = ((product_channelRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        markup,
                        price,
                        periodic_price,
                        how_often,
                        percent_SKU_in_dist,
                        ptype,
                        start_date,
                        end_date,
                        null,
                        duration,
                        null,
                        null};
                if ((parentModel_infoRowByModel_infoproduct_channel != null)) {
                    columnValuesArray[0] = parentModel_infoRowByModel_infoproduct_channel[0];
                }
                if ((parentproductRowByproductproduct_channel != null)) {
                    columnValuesArray[1] = parentproductRowByproductproduct_channel[1];
                }
                if ((parentchannelRowBychannelproduct_channel != null)) {
                    columnValuesArray[2] = parentchannelRowBychannelproduct_channel[1];
                }
                if ((parentmarket_planRowBymarket_planproduct_channel != null)) {
                    columnValuesArray[13] = parentmarket_planRowBymarket_planproduct_channel[1];
                }
                if ((parentprice_typeRowByFK_price_type_product_channel != null)) {
                    columnValuesArray[14] = parentprice_typeRowByFK_price_type_product_channel[0];
                }
                rowproduct_channelRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowproduct_channelRow);
                return rowproduct_channelRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_channelRow FindByrecord_id(int record_id) {
                return ((product_channelRow)(this.Rows.Find(new object[] {
                            record_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                product_channelDataTable cln = ((product_channelDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new product_channelDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmodel_id = base.Columns["model_id"];
                this.columnproduct_id = base.Columns["product_id"];
                this.columnchannel_id = base.Columns["channel_id"];
                this.columnmarkup = base.Columns["markup"];
                this.columnprice = base.Columns["price"];
                this.columnperiodic_price = base.Columns["periodic_price"];
                this.columnhow_often = base.Columns["how_often"];
                this.columnpercent_SKU_in_dist = base.Columns["percent_SKU_in_dist"];
                this.columnptype = base.Columns["ptype"];
                this.columnstart_date = base.Columns["start_date"];
                this.columnend_date = base.Columns["end_date"];
                this.columnrecord_id = base.Columns["record_id"];
                this.columnduration = base.Columns["duration"];
                this.columnmarket_plan_id = base.Columns["market_plan_id"];
                this.columnprice_type = base.Columns["price_type"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columnchannel_id = new global::System.Data.DataColumn("channel_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchannel_id);
                this.columnmarkup = new global::System.Data.DataColumn("markup", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmarkup);
                this.columnprice = new global::System.Data.DataColumn("price", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice);
                this.columnperiodic_price = new global::System.Data.DataColumn("periodic_price", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnperiodic_price);
                this.columnhow_often = new global::System.Data.DataColumn("how_often", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhow_often);
                this.columnpercent_SKU_in_dist = new global::System.Data.DataColumn("percent_SKU_in_dist", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpercent_SKU_in_dist);
                this.columnptype = new global::System.Data.DataColumn("ptype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnptype);
                this.columnstart_date = new global::System.Data.DataColumn("start_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_date);
                this.columnend_date = new global::System.Data.DataColumn("end_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_date);
                this.columnrecord_id = new global::System.Data.DataColumn("record_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecord_id);
                this.columnduration = new global::System.Data.DataColumn("duration", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnduration);
                this.columnmarket_plan_id = new global::System.Data.DataColumn("market_plan_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmarket_plan_id);
                this.columnprice_type = new global::System.Data.DataColumn("price_type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice_type);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("MrktSimDBSchemaKey7", new global::System.Data.DataColumn[] {
                                this.columnrecord_id}, true));
                this.columnmodel_id.AllowDBNull = false;
                this.columnproduct_id.AllowDBNull = false;
                this.columnchannel_id.AllowDBNull = false;
                this.columnstart_date.AllowDBNull = false;
                this.columnend_date.AllowDBNull = false;
                this.columnrecord_id.AutoIncrement = true;
                this.columnrecord_id.AutoIncrementSeed = -100;
                this.columnrecord_id.AutoIncrementStep = -1;
                this.columnrecord_id.AllowDBNull = false;
                this.columnrecord_id.ReadOnly = true;
                this.columnrecord_id.Unique = true;
                this.columnprice_type.AllowDBNull = false;
                this.columnprice_type.DefaultValue = ((int)(-1));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_channelRow Newproduct_channelRow() {
                return ((product_channelRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new product_channelRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(product_channelRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.product_channelRowChanged != null)) {
                    this.product_channelRowChanged(this, new product_channelRowChangeEvent(((product_channelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.product_channelRowChanging != null)) {
                    this.product_channelRowChanging(this, new product_channelRowChangeEvent(((product_channelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.product_channelRowDeleted != null)) {
                    this.product_channelRowDeleted(this, new product_channelRowChangeEvent(((product_channelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.product_channelRowDeleting != null)) {
                    this.product_channelRowDeleting(this, new product_channelRowChangeEvent(((product_channelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeproduct_channelRow(product_channelRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "product_channelDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class taskDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columntask_id;
            
            private global::System.Data.DataColumn columntask_name;
            
            private global::System.Data.DataColumn columnstart_date;
            
            private global::System.Data.DataColumn columnend_date;
            
            private global::System.Data.DataColumn columnsuitability_min;
            
            private global::System.Data.DataColumn columnsuitability_max;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taskDataTable() {
                this.TableName = "task";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal taskDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected taskDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn task_idColumn {
                get {
                    return this.columntask_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn task_nameColumn {
                get {
                    return this.columntask_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_dateColumn {
                get {
                    return this.columnstart_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn end_dateColumn {
                get {
                    return this.columnend_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn suitability_minColumn {
                get {
                    return this.columnsuitability_min;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn suitability_maxColumn {
                get {
                    return this.columnsuitability_max;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taskRow this[int index] {
                get {
                    return ((taskRow)(this.Rows[index]));
                }
            }
            
            public event taskRowChangeEventHandler taskRowChanging;
            
            public event taskRowChangeEventHandler taskRowChanged;
            
            public event taskRowChangeEventHandler taskRowDeleting;
            
            public event taskRowChangeEventHandler taskRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtaskRow(taskRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taskRow AddtaskRow(Model_infoRow parentModel_infoRowByModel_infotask, string task_name, System.DateTime start_date, System.DateTime end_date, byte suitability_min, byte suitability_max) {
                taskRow rowtaskRow = ((taskRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        task_name,
                        start_date,
                        end_date,
                        suitability_min,
                        suitability_max};
                if ((parentModel_infoRowByModel_infotask != null)) {
                    columnValuesArray[0] = parentModel_infoRowByModel_infotask[0];
                }
                rowtaskRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtaskRow);
                return rowtaskRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taskRow FindBytask_id(int task_id) {
                return ((taskRow)(this.Rows.Find(new object[] {
                            task_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                taskDataTable cln = ((taskDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new taskDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmodel_id = base.Columns["model_id"];
                this.columntask_id = base.Columns["task_id"];
                this.columntask_name = base.Columns["task_name"];
                this.columnstart_date = base.Columns["start_date"];
                this.columnend_date = base.Columns["end_date"];
                this.columnsuitability_min = base.Columns["suitability_min"];
                this.columnsuitability_max = base.Columns["suitability_max"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columntask_id = new global::System.Data.DataColumn("task_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntask_id);
                this.columntask_name = new global::System.Data.DataColumn("task_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntask_name);
                this.columnstart_date = new global::System.Data.DataColumn("start_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_date);
                this.columnend_date = new global::System.Data.DataColumn("end_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_date);
                this.columnsuitability_min = new global::System.Data.DataColumn("suitability_min", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsuitability_min);
                this.columnsuitability_max = new global::System.Data.DataColumn("suitability_max", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsuitability_max);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("MrktSimDBSchemaKey6", new global::System.Data.DataColumn[] {
                                this.columntask_id}, true));
                this.columnmodel_id.AllowDBNull = false;
                this.columntask_id.AutoIncrement = true;
                this.columntask_id.AutoIncrementSeed = -100;
                this.columntask_id.AutoIncrementStep = -1;
                this.columntask_id.AllowDBNull = false;
                this.columntask_id.ReadOnly = true;
                this.columntask_id.Unique = true;
                this.columnstart_date.AllowDBNull = false;
                this.columnend_date.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taskRow NewtaskRow() {
                return ((taskRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new taskRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(taskRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.taskRowChanged != null)) {
                    this.taskRowChanged(this, new taskRowChangeEvent(((taskRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.taskRowChanging != null)) {
                    this.taskRowChanging(this, new taskRowChangeEvent(((taskRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.taskRowDeleted != null)) {
                    this.taskRowDeleted(this, new taskRowChangeEvent(((taskRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.taskRowDeleting != null)) {
                    this.taskRowDeleting(this, new taskRowChangeEvent(((taskRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetaskRow(taskRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "taskDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class task_product_factDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columntask_id;
            
            private global::System.Data.DataColumn columnpre_use_upsku;
            
            private global::System.Data.DataColumn columnpost_use_upsku;
            
            private global::System.Data.DataColumn columnsuitability;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public task_product_factDataTable() {
                this.TableName = "task_product_fact";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal task_product_factDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected task_product_factDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn task_idColumn {
                get {
                    return this.columntask_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pre_use_upskuColumn {
                get {
                    return this.columnpre_use_upsku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn post_use_upskuColumn {
                get {
                    return this.columnpost_use_upsku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn suitabilityColumn {
                get {
                    return this.columnsuitability;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public task_product_factRow this[int index] {
                get {
                    return ((task_product_factRow)(this.Rows[index]));
                }
            }
            
            public event task_product_factRowChangeEventHandler task_product_factRowChanging;
            
            public event task_product_factRowChangeEventHandler task_product_factRowChanged;
            
            public event task_product_factRowChangeEventHandler task_product_factRowDeleting;
            
            public event task_product_factRowChangeEventHandler task_product_factRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtask_product_factRow(task_product_factRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public task_product_factRow Addtask_product_factRow(Model_infoRow parentModel_infoRowByModel_infotask_product_fact, productRow parentproductRowByproducttask_product_fact, taskRow parenttaskRowBytasktask_product_fact, int pre_use_upsku, int post_use_upsku, byte suitability) {
                task_product_factRow rowtask_product_factRow = ((task_product_factRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        pre_use_upsku,
                        post_use_upsku,
                        suitability};
                if ((parentModel_infoRowByModel_infotask_product_fact != null)) {
                    columnValuesArray[0] = parentModel_infoRowByModel_infotask_product_fact[0];
                }
                if ((parentproductRowByproducttask_product_fact != null)) {
                    columnValuesArray[1] = parentproductRowByproducttask_product_fact[1];
                }
                if ((parenttaskRowBytasktask_product_fact != null)) {
                    columnValuesArray[2] = parenttaskRowBytasktask_product_fact[1];
                }
                rowtask_product_factRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtask_product_factRow);
                return rowtask_product_factRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                task_product_factDataTable cln = ((task_product_factDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new task_product_factDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmodel_id = base.Columns["model_id"];
                this.columnproduct_id = base.Columns["product_id"];
                this.columntask_id = base.Columns["task_id"];
                this.columnpre_use_upsku = base.Columns["pre_use_upsku"];
                this.columnpost_use_upsku = base.Columns["post_use_upsku"];
                this.columnsuitability = base.Columns["suitability"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columntask_id = new global::System.Data.DataColumn("task_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntask_id);
                this.columnpre_use_upsku = new global::System.Data.DataColumn("pre_use_upsku", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpre_use_upsku);
                this.columnpost_use_upsku = new global::System.Data.DataColumn("post_use_upsku", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpost_use_upsku);
                this.columnsuitability = new global::System.Data.DataColumn("suitability", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsuitability);
                this.columnmodel_id.AllowDBNull = false;
                this.columnproduct_id.AllowDBNull = false;
                this.columntask_id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public task_product_factRow Newtask_product_factRow() {
                return ((task_product_factRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new task_product_factRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(task_product_factRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.task_product_factRowChanged != null)) {
                    this.task_product_factRowChanged(this, new task_product_factRowChangeEvent(((task_product_factRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.task_product_factRowChanging != null)) {
                    this.task_product_factRowChanging(this, new task_product_factRowChangeEvent(((task_product_factRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.task_product_factRowDeleted != null)) {
                    this.task_product_factRowDeleted(this, new task_product_factRowChangeEvent(((task_product_factRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.task_product_factRowDeleting != null)) {
                    this.task_product_factRowDeleting(this, new task_product_factRowChangeEvent(((task_product_factRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetask_product_factRow(task_product_factRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "task_product_factDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class product_attributeDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnproduct_attribute_id;
            
            private global::System.Data.DataColumn columnproduct_attribute_name;
            
            private global::System.Data.DataColumn columnutility_max;
            
            private global::System.Data.DataColumn columnutility_min;
            
            private global::System.Data.DataColumn columncust_pref_max;
            
            private global::System.Data.DataColumn columncust_pref_min;
            
            private global::System.Data.DataColumn columncust_tau;
            
            private global::System.Data.DataColumn columntype;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_attributeDataTable() {
                this.TableName = "product_attribute";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal product_attributeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected product_attributeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_attribute_idColumn {
                get {
                    return this.columnproduct_attribute_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_attribute_nameColumn {
                get {
                    return this.columnproduct_attribute_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn utility_maxColumn {
                get {
                    return this.columnutility_max;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn utility_minColumn {
                get {
                    return this.columnutility_min;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cust_pref_maxColumn {
                get {
                    return this.columncust_pref_max;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cust_pref_minColumn {
                get {
                    return this.columncust_pref_min;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cust_tauColumn {
                get {
                    return this.columncust_tau;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn typeColumn {
                get {
                    return this.columntype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_attributeRow this[int index] {
                get {
                    return ((product_attributeRow)(this.Rows[index]));
                }
            }
            
            public event product_attributeRowChangeEventHandler product_attributeRowChanging;
            
            public event product_attributeRowChangeEventHandler product_attributeRowChanged;
            
            public event product_attributeRowChangeEventHandler product_attributeRowDeleting;
            
            public event product_attributeRowChangeEventHandler product_attributeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addproduct_attributeRow(product_attributeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_attributeRow Addproduct_attributeRow(Model_infoRow parentModel_infoRowByModel_infoproduct_attribute, string product_attribute_name, double utility_max, double utility_min, double cust_pref_max, double cust_pref_min, double cust_tau, int type) {
                product_attributeRow rowproduct_attributeRow = ((product_attributeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        product_attribute_name,
                        utility_max,
                        utility_min,
                        cust_pref_max,
                        cust_pref_min,
                        cust_tau,
                        type};
                if ((parentModel_infoRowByModel_infoproduct_attribute != null)) {
                    columnValuesArray[0] = parentModel_infoRowByModel_infoproduct_attribute[0];
                }
                rowproduct_attributeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowproduct_attributeRow);
                return rowproduct_attributeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_attributeRow FindByproduct_attribute_id(int product_attribute_id) {
                return ((product_attributeRow)(this.Rows.Find(new object[] {
                            product_attribute_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                product_attributeDataTable cln = ((product_attributeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new product_attributeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmodel_id = base.Columns["model_id"];
                this.columnproduct_attribute_id = base.Columns["product_attribute_id"];
                this.columnproduct_attribute_name = base.Columns["product_attribute_name"];
                this.columnutility_max = base.Columns["utility_max"];
                this.columnutility_min = base.Columns["utility_min"];
                this.columncust_pref_max = base.Columns["cust_pref_max"];
                this.columncust_pref_min = base.Columns["cust_pref_min"];
                this.columncust_tau = base.Columns["cust_tau"];
                this.columntype = base.Columns["type"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnproduct_attribute_id = new global::System.Data.DataColumn("product_attribute_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_attribute_id);
                this.columnproduct_attribute_name = new global::System.Data.DataColumn("product_attribute_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_attribute_name);
                this.columnutility_max = new global::System.Data.DataColumn("utility_max", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnutility_max);
                this.columnutility_min = new global::System.Data.DataColumn("utility_min", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnutility_min);
                this.columncust_pref_max = new global::System.Data.DataColumn("cust_pref_max", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncust_pref_max);
                this.columncust_pref_min = new global::System.Data.DataColumn("cust_pref_min", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncust_pref_min);
                this.columncust_tau = new global::System.Data.DataColumn("cust_tau", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncust_tau);
                this.columntype = new global::System.Data.DataColumn("type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("MrktSimDBSchemaKey4", new global::System.Data.DataColumn[] {
                                this.columnproduct_attribute_id}, true));
                this.columnmodel_id.AllowDBNull = false;
                this.columnproduct_attribute_id.AutoIncrement = true;
                this.columnproduct_attribute_id.AutoIncrementSeed = -100;
                this.columnproduct_attribute_id.AutoIncrementStep = -1;
                this.columnproduct_attribute_id.AllowDBNull = false;
                this.columnproduct_attribute_id.ReadOnly = true;
                this.columnproduct_attribute_id.Unique = true;
                this.columntype.AllowDBNull = false;
                this.columntype.DefaultValue = ((int)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_attributeRow Newproduct_attributeRow() {
                return ((product_attributeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new product_attributeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(product_attributeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.product_attributeRowChanged != null)) {
                    this.product_attributeRowChanged(this, new product_attributeRowChangeEvent(((product_attributeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.product_attributeRowChanging != null)) {
                    this.product_attributeRowChanging(this, new product_attributeRowChangeEvent(((product_attributeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.product_attributeRowDeleted != null)) {
                    this.product_attributeRowDeleted(this, new product_attributeRowChangeEvent(((product_attributeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.product_attributeRowDeleting != null)) {
                    this.product_attributeRowDeleting(this, new product_attributeRowChangeEvent(((product_attributeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeproduct_attributeRow(product_attributeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "product_attributeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class product_attribute_valueDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnrecord_id;
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columnproduct_attribute_id;
            
            private global::System.Data.DataColumn columnstart_date;
            
            private global::System.Data.DataColumn columnpre_attribute_value;
            
            private global::System.Data.DataColumn columnpost_attribute_value;
            
            private global::System.Data.DataColumn columnhas_attribute;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_attribute_valueDataTable() {
                this.TableName = "product_attribute_value";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal product_attribute_valueDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected product_attribute_valueDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn record_idColumn {
                get {
                    return this.columnrecord_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_attribute_idColumn {
                get {
                    return this.columnproduct_attribute_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_dateColumn {
                get {
                    return this.columnstart_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pre_attribute_valueColumn {
                get {
                    return this.columnpre_attribute_value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn post_attribute_valueColumn {
                get {
                    return this.columnpost_attribute_value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn has_attributeColumn {
                get {
                    return this.columnhas_attribute;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_attribute_valueRow this[int index] {
                get {
                    return ((product_attribute_valueRow)(this.Rows[index]));
                }
            }
            
            public event product_attribute_valueRowChangeEventHandler product_attribute_valueRowChanging;
            
            public event product_attribute_valueRowChangeEventHandler product_attribute_valueRowChanged;
            
            public event product_attribute_valueRowChangeEventHandler product_attribute_valueRowDeleting;
            
            public event product_attribute_valueRowChangeEventHandler product_attribute_valueRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addproduct_attribute_valueRow(product_attribute_valueRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_attribute_valueRow Addproduct_attribute_valueRow(Model_infoRow parentModel_infoRowByModel_infoproduct_attribute_value, productRow parentproductRowByproductproduct_attribute_value, product_attributeRow parentproduct_attributeRowByproduct_attributeproduct_attribute_value, System.DateTime start_date, double pre_attribute_value, double post_attribute_value, bool has_attribute) {
                product_attribute_valueRow rowproduct_attribute_valueRow = ((product_attribute_valueRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        null,
                        start_date,
                        pre_attribute_value,
                        post_attribute_value,
                        has_attribute};
                if ((parentModel_infoRowByModel_infoproduct_attribute_value != null)) {
                    columnValuesArray[1] = parentModel_infoRowByModel_infoproduct_attribute_value[0];
                }
                if ((parentproductRowByproductproduct_attribute_value != null)) {
                    columnValuesArray[2] = parentproductRowByproductproduct_attribute_value[1];
                }
                if ((parentproduct_attributeRowByproduct_attributeproduct_attribute_value != null)) {
                    columnValuesArray[3] = parentproduct_attributeRowByproduct_attributeproduct_attribute_value[1];
                }
                rowproduct_attribute_valueRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowproduct_attribute_valueRow);
                return rowproduct_attribute_valueRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_attribute_valueRow FindByrecord_id(int record_id) {
                return ((product_attribute_valueRow)(this.Rows.Find(new object[] {
                            record_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                product_attribute_valueDataTable cln = ((product_attribute_valueDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new product_attribute_valueDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrecord_id = base.Columns["record_id"];
                this.columnmodel_id = base.Columns["model_id"];
                this.columnproduct_id = base.Columns["product_id"];
                this.columnproduct_attribute_id = base.Columns["product_attribute_id"];
                this.columnstart_date = base.Columns["start_date"];
                this.columnpre_attribute_value = base.Columns["pre_attribute_value"];
                this.columnpost_attribute_value = base.Columns["post_attribute_value"];
                this.columnhas_attribute = base.Columns["has_attribute"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrecord_id = new global::System.Data.DataColumn("record_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecord_id);
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columnproduct_attribute_id = new global::System.Data.DataColumn("product_attribute_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_attribute_id);
                this.columnstart_date = new global::System.Data.DataColumn("start_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_date);
                this.columnpre_attribute_value = new global::System.Data.DataColumn("pre_attribute_value", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpre_attribute_value);
                this.columnpost_attribute_value = new global::System.Data.DataColumn("post_attribute_value", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpost_attribute_value);
                this.columnhas_attribute = new global::System.Data.DataColumn("has_attribute", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhas_attribute);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("MrktSimDBSchemaKey8", new global::System.Data.DataColumn[] {
                                this.columnrecord_id}, true));
                this.columnrecord_id.AutoIncrement = true;
                this.columnrecord_id.AllowDBNull = false;
                this.columnrecord_id.ReadOnly = true;
                this.columnrecord_id.Unique = true;
                this.columnmodel_id.AllowDBNull = false;
                this.columnproduct_id.AllowDBNull = false;
                this.columnproduct_attribute_id.AllowDBNull = false;
                this.columnpre_attribute_value.AllowDBNull = false;
                this.columnpost_attribute_value.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_attribute_valueRow Newproduct_attribute_valueRow() {
                return ((product_attribute_valueRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new product_attribute_valueRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(product_attribute_valueRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.product_attribute_valueRowChanged != null)) {
                    this.product_attribute_valueRowChanged(this, new product_attribute_valueRowChangeEvent(((product_attribute_valueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.product_attribute_valueRowChanging != null)) {
                    this.product_attribute_valueRowChanging(this, new product_attribute_valueRowChangeEvent(((product_attribute_valueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.product_attribute_valueRowDeleted != null)) {
                    this.product_attribute_valueRowDeleted(this, new product_attribute_valueRowChangeEvent(((product_attribute_valueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.product_attribute_valueRowDeleting != null)) {
                    this.product_attribute_valueRowDeleting(this, new product_attribute_valueRowChangeEvent(((product_attribute_valueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeproduct_attribute_valueRow(product_attribute_valueRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "product_attribute_valueDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class consumer_preferenceDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnrecord_id;
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnsegment_id;
            
            private global::System.Data.DataColumn columnproduct_attribute_id;
            
            private global::System.Data.DataColumn columnstart_date;
            
            private global::System.Data.DataColumn columnpre_preference_value;
            
            private global::System.Data.DataColumn columnpost_preference_value;
            
            private global::System.Data.DataColumn columnprice_sensitivity;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public consumer_preferenceDataTable() {
                this.TableName = "consumer_preference";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal consumer_preferenceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected consumer_preferenceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn record_idColumn {
                get {
                    return this.columnrecord_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn segment_idColumn {
                get {
                    return this.columnsegment_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_attribute_idColumn {
                get {
                    return this.columnproduct_attribute_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_dateColumn {
                get {
                    return this.columnstart_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pre_preference_valueColumn {
                get {
                    return this.columnpre_preference_value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn post_preference_valueColumn {
                get {
                    return this.columnpost_preference_value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn price_sensitivityColumn {
                get {
                    return this.columnprice_sensitivity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public consumer_preferenceRow this[int index] {
                get {
                    return ((consumer_preferenceRow)(this.Rows[index]));
                }
            }
            
            public event consumer_preferenceRowChangeEventHandler consumer_preferenceRowChanging;
            
            public event consumer_preferenceRowChangeEventHandler consumer_preferenceRowChanged;
            
            public event consumer_preferenceRowChangeEventHandler consumer_preferenceRowDeleting;
            
            public event consumer_preferenceRowChangeEventHandler consumer_preferenceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addconsumer_preferenceRow(consumer_preferenceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public consumer_preferenceRow Addconsumer_preferenceRow(Model_infoRow parentModel_infoRowByModel_infoconsumer_preference, segmentRow parentsegmentRowBysegmentconsumer_preference, product_attributeRow parentproduct_attributeRowByproduct_attributeconsumer_preference, System.DateTime start_date, double pre_preference_value, double post_preference_value, double price_sensitivity) {
                consumer_preferenceRow rowconsumer_preferenceRow = ((consumer_preferenceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        null,
                        start_date,
                        pre_preference_value,
                        post_preference_value,
                        price_sensitivity};
                if ((parentModel_infoRowByModel_infoconsumer_preference != null)) {
                    columnValuesArray[1] = parentModel_infoRowByModel_infoconsumer_preference[0];
                }
                if ((parentsegmentRowBysegmentconsumer_preference != null)) {
                    columnValuesArray[2] = parentsegmentRowBysegmentconsumer_preference[1];
                }
                if ((parentproduct_attributeRowByproduct_attributeconsumer_preference != null)) {
                    columnValuesArray[3] = parentproduct_attributeRowByproduct_attributeconsumer_preference[1];
                }
                rowconsumer_preferenceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowconsumer_preferenceRow);
                return rowconsumer_preferenceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public consumer_preferenceRow FindByrecord_id(int record_id) {
                return ((consumer_preferenceRow)(this.Rows.Find(new object[] {
                            record_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                consumer_preferenceDataTable cln = ((consumer_preferenceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new consumer_preferenceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrecord_id = base.Columns["record_id"];
                this.columnmodel_id = base.Columns["model_id"];
                this.columnsegment_id = base.Columns["segment_id"];
                this.columnproduct_attribute_id = base.Columns["product_attribute_id"];
                this.columnstart_date = base.Columns["start_date"];
                this.columnpre_preference_value = base.Columns["pre_preference_value"];
                this.columnpost_preference_value = base.Columns["post_preference_value"];
                this.columnprice_sensitivity = base.Columns["price_sensitivity"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrecord_id = new global::System.Data.DataColumn("record_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecord_id);
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnsegment_id = new global::System.Data.DataColumn("segment_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsegment_id);
                this.columnproduct_attribute_id = new global::System.Data.DataColumn("product_attribute_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_attribute_id);
                this.columnstart_date = new global::System.Data.DataColumn("start_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_date);
                this.columnpre_preference_value = new global::System.Data.DataColumn("pre_preference_value", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpre_preference_value);
                this.columnpost_preference_value = new global::System.Data.DataColumn("post_preference_value", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpost_preference_value);
                this.columnprice_sensitivity = new global::System.Data.DataColumn("price_sensitivity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice_sensitivity);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("MrktSimDBSchemaKey12", new global::System.Data.DataColumn[] {
                                this.columnrecord_id}, true));
                this.columnrecord_id.AutoIncrement = true;
                this.columnrecord_id.AutoIncrementSeed = -100;
                this.columnrecord_id.AutoIncrementStep = -1;
                this.columnrecord_id.AllowDBNull = false;
                this.columnrecord_id.ReadOnly = true;
                this.columnrecord_id.Unique = true;
                this.columnmodel_id.AllowDBNull = false;
                this.columnsegment_id.AllowDBNull = false;
                this.columnproduct_attribute_id.AllowDBNull = false;
                this.columnpre_preference_value.AllowDBNull = false;
                this.columnpost_preference_value.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public consumer_preferenceRow Newconsumer_preferenceRow() {
                return ((consumer_preferenceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new consumer_preferenceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(consumer_preferenceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.consumer_preferenceRowChanged != null)) {
                    this.consumer_preferenceRowChanged(this, new consumer_preferenceRowChangeEvent(((consumer_preferenceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.consumer_preferenceRowChanging != null)) {
                    this.consumer_preferenceRowChanging(this, new consumer_preferenceRowChangeEvent(((consumer_preferenceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.consumer_preferenceRowDeleted != null)) {
                    this.consumer_preferenceRowDeleted(this, new consumer_preferenceRowChangeEvent(((consumer_preferenceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.consumer_preferenceRowDeleting != null)) {
                    this.consumer_preferenceRowDeleting(this, new consumer_preferenceRowChangeEvent(((consumer_preferenceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeconsumer_preferenceRow(consumer_preferenceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "consumer_preferenceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class distributionDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnrecord_id;
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columnchannel_id;
            
            private global::System.Data.DataColumn columnattr_value_F;
            
            private global::System.Data.DataColumn columnattr_value_G;
            
            private global::System.Data.DataColumn columnmessage_awareness_probability;
            
            private global::System.Data.DataColumn columnmessage_persuation_probability;
            
            private global::System.Data.DataColumn columnstart_date;
            
            private global::System.Data.DataColumn columnend_date;
            
            private global::System.Data.DataColumn columnmarket_plan_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public distributionDataTable() {
                this.TableName = "distribution";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal distributionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected distributionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn record_idColumn {
                get {
                    return this.columnrecord_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn channel_idColumn {
                get {
                    return this.columnchannel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn attr_value_FColumn {
                get {
                    return this.columnattr_value_F;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn attr_value_GColumn {
                get {
                    return this.columnattr_value_G;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn message_awareness_probabilityColumn {
                get {
                    return this.columnmessage_awareness_probability;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn message_persuation_probabilityColumn {
                get {
                    return this.columnmessage_persuation_probability;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_dateColumn {
                get {
                    return this.columnstart_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn end_dateColumn {
                get {
                    return this.columnend_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn market_plan_idColumn {
                get {
                    return this.columnmarket_plan_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public distributionRow this[int index] {
                get {
                    return ((distributionRow)(this.Rows[index]));
                }
            }
            
            public event distributionRowChangeEventHandler distributionRowChanging;
            
            public event distributionRowChangeEventHandler distributionRowChanged;
            
            public event distributionRowChangeEventHandler distributionRowDeleting;
            
            public event distributionRowChangeEventHandler distributionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddistributionRow(distributionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public distributionRow AdddistributionRow(Model_infoRow parentModel_infoRowByModel_infodistribution, productRow parentproductRowByproductdistribution, channelRow parentchannelRowBychanneldistribution, double attr_value_F, double attr_value_G, double message_awareness_probability, double message_persuation_probability, System.DateTime start_date, System.DateTime end_date, market_planRow parentmarket_planRowBymarket_plandistribution) {
                distributionRow rowdistributionRow = ((distributionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        null,
                        attr_value_F,
                        attr_value_G,
                        message_awareness_probability,
                        message_persuation_probability,
                        start_date,
                        end_date,
                        null};
                if ((parentModel_infoRowByModel_infodistribution != null)) {
                    columnValuesArray[1] = parentModel_infoRowByModel_infodistribution[0];
                }
                if ((parentproductRowByproductdistribution != null)) {
                    columnValuesArray[2] = parentproductRowByproductdistribution[1];
                }
                if ((parentchannelRowBychanneldistribution != null)) {
                    columnValuesArray[3] = parentchannelRowBychanneldistribution[1];
                }
                if ((parentmarket_planRowBymarket_plandistribution != null)) {
                    columnValuesArray[10] = parentmarket_planRowBymarket_plandistribution[1];
                }
                rowdistributionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdistributionRow);
                return rowdistributionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public distributionRow FindByrecord_id(int record_id) {
                return ((distributionRow)(this.Rows.Find(new object[] {
                            record_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                distributionDataTable cln = ((distributionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new distributionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrecord_id = base.Columns["record_id"];
                this.columnmodel_id = base.Columns["model_id"];
                this.columnproduct_id = base.Columns["product_id"];
                this.columnchannel_id = base.Columns["channel_id"];
                this.columnattr_value_F = base.Columns["attr_value_F"];
                this.columnattr_value_G = base.Columns["attr_value_G"];
                this.columnmessage_awareness_probability = base.Columns["message_awareness_probability"];
                this.columnmessage_persuation_probability = base.Columns["message_persuation_probability"];
                this.columnstart_date = base.Columns["start_date"];
                this.columnend_date = base.Columns["end_date"];
                this.columnmarket_plan_id = base.Columns["market_plan_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrecord_id = new global::System.Data.DataColumn("record_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecord_id);
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columnchannel_id = new global::System.Data.DataColumn("channel_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchannel_id);
                this.columnattr_value_F = new global::System.Data.DataColumn("attr_value_F", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattr_value_F);
                this.columnattr_value_G = new global::System.Data.DataColumn("attr_value_G", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattr_value_G);
                this.columnmessage_awareness_probability = new global::System.Data.DataColumn("message_awareness_probability", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmessage_awareness_probability);
                this.columnmessage_persuation_probability = new global::System.Data.DataColumn("message_persuation_probability", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmessage_persuation_probability);
                this.columnstart_date = new global::System.Data.DataColumn("start_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_date);
                this.columnend_date = new global::System.Data.DataColumn("end_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_date);
                this.columnmarket_plan_id = new global::System.Data.DataColumn("market_plan_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmarket_plan_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("MrktSimDBSchemaKey13", new global::System.Data.DataColumn[] {
                                this.columnrecord_id}, true));
                this.columnrecord_id.AutoIncrement = true;
                this.columnrecord_id.AutoIncrementSeed = -100;
                this.columnrecord_id.AutoIncrementStep = -1;
                this.columnrecord_id.AllowDBNull = false;
                this.columnrecord_id.ReadOnly = true;
                this.columnrecord_id.Unique = true;
                this.columnmodel_id.AllowDBNull = false;
                this.columnproduct_id.AllowDBNull = false;
                this.columnchannel_id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public distributionRow NewdistributionRow() {
                return ((distributionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new distributionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(distributionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.distributionRowChanged != null)) {
                    this.distributionRowChanged(this, new distributionRowChangeEvent(((distributionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.distributionRowChanging != null)) {
                    this.distributionRowChanging(this, new distributionRowChangeEvent(((distributionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.distributionRowDeleted != null)) {
                    this.distributionRowDeleted(this, new distributionRowChangeEvent(((distributionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.distributionRowDeleting != null)) {
                    this.distributionRowDeleting(this, new distributionRowChangeEvent(((distributionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedistributionRow(distributionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "distributionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class displayDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnrecord_id;
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columnchannel_id;
            
            private global::System.Data.DataColumn columnmedia_type;
            
            private global::System.Data.DataColumn columnattr_value_F;
            
            private global::System.Data.DataColumn columnmessage_awareness_probability;
            
            private global::System.Data.DataColumn columnmessage_persuation_probability;
            
            private global::System.Data.DataColumn columnstart_date;
            
            private global::System.Data.DataColumn columnend_date;
            
            private global::System.Data.DataColumn columnmarket_plan_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public displayDataTable() {
                this.TableName = "display";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal displayDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected displayDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn record_idColumn {
                get {
                    return this.columnrecord_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn channel_idColumn {
                get {
                    return this.columnchannel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn media_typeColumn {
                get {
                    return this.columnmedia_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn attr_value_FColumn {
                get {
                    return this.columnattr_value_F;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn message_awareness_probabilityColumn {
                get {
                    return this.columnmessage_awareness_probability;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn message_persuation_probabilityColumn {
                get {
                    return this.columnmessage_persuation_probability;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_dateColumn {
                get {
                    return this.columnstart_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn end_dateColumn {
                get {
                    return this.columnend_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn market_plan_idColumn {
                get {
                    return this.columnmarket_plan_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public displayRow this[int index] {
                get {
                    return ((displayRow)(this.Rows[index]));
                }
            }
            
            public event displayRowChangeEventHandler displayRowChanging;
            
            public event displayRowChangeEventHandler displayRowChanged;
            
            public event displayRowChangeEventHandler displayRowDeleting;
            
            public event displayRowChangeEventHandler displayRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddisplayRow(displayRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public displayRow AdddisplayRow(Model_infoRow parentModel_infoRowByModel_infodisplay, productRow parentproductRowByproductdisplay, channelRow parentchannelRowBychanneldisplay, string media_type, double attr_value_F, double message_awareness_probability, double message_persuation_probability, System.DateTime start_date, System.DateTime end_date, market_planRow parentmarket_planRowBymarket_plandisplay) {
                displayRow rowdisplayRow = ((displayRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        null,
                        media_type,
                        attr_value_F,
                        message_awareness_probability,
                        message_persuation_probability,
                        start_date,
                        end_date,
                        null};
                if ((parentModel_infoRowByModel_infodisplay != null)) {
                    columnValuesArray[1] = parentModel_infoRowByModel_infodisplay[0];
                }
                if ((parentproductRowByproductdisplay != null)) {
                    columnValuesArray[2] = parentproductRowByproductdisplay[1];
                }
                if ((parentchannelRowBychanneldisplay != null)) {
                    columnValuesArray[3] = parentchannelRowBychanneldisplay[1];
                }
                if ((parentmarket_planRowBymarket_plandisplay != null)) {
                    columnValuesArray[10] = parentmarket_planRowBymarket_plandisplay[1];
                }
                rowdisplayRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdisplayRow);
                return rowdisplayRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public displayRow FindByrecord_id(int record_id) {
                return ((displayRow)(this.Rows.Find(new object[] {
                            record_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                displayDataTable cln = ((displayDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new displayDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrecord_id = base.Columns["record_id"];
                this.columnmodel_id = base.Columns["model_id"];
                this.columnproduct_id = base.Columns["product_id"];
                this.columnchannel_id = base.Columns["channel_id"];
                this.columnmedia_type = base.Columns["media_type"];
                this.columnattr_value_F = base.Columns["attr_value_F"];
                this.columnmessage_awareness_probability = base.Columns["message_awareness_probability"];
                this.columnmessage_persuation_probability = base.Columns["message_persuation_probability"];
                this.columnstart_date = base.Columns["start_date"];
                this.columnend_date = base.Columns["end_date"];
                this.columnmarket_plan_id = base.Columns["market_plan_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrecord_id = new global::System.Data.DataColumn("record_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecord_id);
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columnchannel_id = new global::System.Data.DataColumn("channel_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchannel_id);
                this.columnmedia_type = new global::System.Data.DataColumn("media_type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmedia_type);
                this.columnattr_value_F = new global::System.Data.DataColumn("attr_value_F", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattr_value_F);
                this.columnmessage_awareness_probability = new global::System.Data.DataColumn("message_awareness_probability", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmessage_awareness_probability);
                this.columnmessage_persuation_probability = new global::System.Data.DataColumn("message_persuation_probability", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmessage_persuation_probability);
                this.columnstart_date = new global::System.Data.DataColumn("start_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_date);
                this.columnend_date = new global::System.Data.DataColumn("end_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_date);
                this.columnmarket_plan_id = new global::System.Data.DataColumn("market_plan_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmarket_plan_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("MrktSimDBSchemaKey14", new global::System.Data.DataColumn[] {
                                this.columnrecord_id}, true));
                this.columnrecord_id.AutoIncrement = true;
                this.columnrecord_id.AutoIncrementSeed = -100;
                this.columnrecord_id.AutoIncrementStep = -1;
                this.columnrecord_id.AllowDBNull = false;
                this.columnrecord_id.ReadOnly = true;
                this.columnrecord_id.Unique = true;
                this.columnmodel_id.AllowDBNull = false;
                this.columnproduct_id.AllowDBNull = false;
                this.columnchannel_id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public displayRow NewdisplayRow() {
                return ((displayRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new displayRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(displayRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.displayRowChanged != null)) {
                    this.displayRowChanged(this, new displayRowChangeEvent(((displayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.displayRowChanging != null)) {
                    this.displayRowChanging(this, new displayRowChangeEvent(((displayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.displayRowDeleted != null)) {
                    this.displayRowDeleted(this, new displayRowChangeEvent(((displayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.displayRowDeleting != null)) {
                    this.displayRowDeleting(this, new displayRowChangeEvent(((displayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedisplayRow(displayRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "displayDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class mass_mediaDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnrecord_id;
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columnchannel_id;
            
            private global::System.Data.DataColumn columnsegment_id;
            
            private global::System.Data.DataColumn columnmedia_type;
            
            private global::System.Data.DataColumn columnattr_value_G;
            
            private global::System.Data.DataColumn columnattr_value_H;
            
            private global::System.Data.DataColumn columnattr_value_I;
            
            private global::System.Data.DataColumn columnmessage_awareness_probability;
            
            private global::System.Data.DataColumn columnmessage_persuation_probability;
            
            private global::System.Data.DataColumn columnstart_date;
            
            private global::System.Data.DataColumn columnend_date;
            
            private global::System.Data.DataColumn columnmarket_plan_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mass_mediaDataTable() {
                this.TableName = "mass_media";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal mass_mediaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected mass_mediaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn record_idColumn {
                get {
                    return this.columnrecord_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn channel_idColumn {
                get {
                    return this.columnchannel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn segment_idColumn {
                get {
                    return this.columnsegment_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn media_typeColumn {
                get {
                    return this.columnmedia_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn attr_value_GColumn {
                get {
                    return this.columnattr_value_G;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn attr_value_HColumn {
                get {
                    return this.columnattr_value_H;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn attr_value_IColumn {
                get {
                    return this.columnattr_value_I;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn message_awareness_probabilityColumn {
                get {
                    return this.columnmessage_awareness_probability;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn message_persuation_probabilityColumn {
                get {
                    return this.columnmessage_persuation_probability;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_dateColumn {
                get {
                    return this.columnstart_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn end_dateColumn {
                get {
                    return this.columnend_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn market_plan_idColumn {
                get {
                    return this.columnmarket_plan_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mass_mediaRow this[int index] {
                get {
                    return ((mass_mediaRow)(this.Rows[index]));
                }
            }
            
            public event mass_mediaRowChangeEventHandler mass_mediaRowChanging;
            
            public event mass_mediaRowChangeEventHandler mass_mediaRowChanged;
            
            public event mass_mediaRowChangeEventHandler mass_mediaRowDeleting;
            
            public event mass_mediaRowChangeEventHandler mass_mediaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addmass_mediaRow(mass_mediaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mass_mediaRow Addmass_mediaRow(Model_infoRow parentModel_infoRowByModel_infomass_media, productRow parentproductRowByproductmass_media, channelRow parentchannelRowBychannelmass_media, segmentRow parentsegmentRowBysegmentmass_media, string media_type, double attr_value_G, double attr_value_H, double attr_value_I, double message_awareness_probability, double message_persuation_probability, System.DateTime start_date, System.DateTime end_date, market_planRow parentmarket_planRowBymarket_planmass_media) {
                mass_mediaRow rowmass_mediaRow = ((mass_mediaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        null,
                        null,
                        media_type,
                        attr_value_G,
                        attr_value_H,
                        attr_value_I,
                        message_awareness_probability,
                        message_persuation_probability,
                        start_date,
                        end_date,
                        null};
                if ((parentModel_infoRowByModel_infomass_media != null)) {
                    columnValuesArray[1] = parentModel_infoRowByModel_infomass_media[0];
                }
                if ((parentproductRowByproductmass_media != null)) {
                    columnValuesArray[2] = parentproductRowByproductmass_media[1];
                }
                if ((parentchannelRowBychannelmass_media != null)) {
                    columnValuesArray[3] = parentchannelRowBychannelmass_media[1];
                }
                if ((parentsegmentRowBysegmentmass_media != null)) {
                    columnValuesArray[4] = parentsegmentRowBysegmentmass_media[1];
                }
                if ((parentmarket_planRowBymarket_planmass_media != null)) {
                    columnValuesArray[13] = parentmarket_planRowBymarket_planmass_media[1];
                }
                rowmass_mediaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmass_mediaRow);
                return rowmass_mediaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mass_mediaRow FindByrecord_id(int record_id) {
                return ((mass_mediaRow)(this.Rows.Find(new object[] {
                            record_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                mass_mediaDataTable cln = ((mass_mediaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new mass_mediaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrecord_id = base.Columns["record_id"];
                this.columnmodel_id = base.Columns["model_id"];
                this.columnproduct_id = base.Columns["product_id"];
                this.columnchannel_id = base.Columns["channel_id"];
                this.columnsegment_id = base.Columns["segment_id"];
                this.columnmedia_type = base.Columns["media_type"];
                this.columnattr_value_G = base.Columns["attr_value_G"];
                this.columnattr_value_H = base.Columns["attr_value_H"];
                this.columnattr_value_I = base.Columns["attr_value_I"];
                this.columnmessage_awareness_probability = base.Columns["message_awareness_probability"];
                this.columnmessage_persuation_probability = base.Columns["message_persuation_probability"];
                this.columnstart_date = base.Columns["start_date"];
                this.columnend_date = base.Columns["end_date"];
                this.columnmarket_plan_id = base.Columns["market_plan_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrecord_id = new global::System.Data.DataColumn("record_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecord_id);
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columnchannel_id = new global::System.Data.DataColumn("channel_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchannel_id);
                this.columnsegment_id = new global::System.Data.DataColumn("segment_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsegment_id);
                this.columnmedia_type = new global::System.Data.DataColumn("media_type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmedia_type);
                this.columnattr_value_G = new global::System.Data.DataColumn("attr_value_G", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattr_value_G);
                this.columnattr_value_H = new global::System.Data.DataColumn("attr_value_H", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattr_value_H);
                this.columnattr_value_I = new global::System.Data.DataColumn("attr_value_I", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattr_value_I);
                this.columnmessage_awareness_probability = new global::System.Data.DataColumn("message_awareness_probability", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmessage_awareness_probability);
                this.columnmessage_persuation_probability = new global::System.Data.DataColumn("message_persuation_probability", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmessage_persuation_probability);
                this.columnstart_date = new global::System.Data.DataColumn("start_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_date);
                this.columnend_date = new global::System.Data.DataColumn("end_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_date);
                this.columnmarket_plan_id = new global::System.Data.DataColumn("market_plan_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmarket_plan_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("MrktSimDBSchemaKey16", new global::System.Data.DataColumn[] {
                                this.columnrecord_id}, true));
                this.columnrecord_id.AutoIncrement = true;
                this.columnrecord_id.AutoIncrementSeed = -100;
                this.columnrecord_id.AutoIncrementStep = -1;
                this.columnrecord_id.AllowDBNull = false;
                this.columnrecord_id.ReadOnly = true;
                this.columnrecord_id.Unique = true;
                this.columnmodel_id.AllowDBNull = false;
                this.columnproduct_id.AllowDBNull = false;
                this.columnchannel_id.AllowDBNull = false;
                this.columnsegment_id.AllowDBNull = false;
                this.columnmedia_type.AllowDBNull = false;
                this.columnstart_date.AllowDBNull = false;
                this.columnend_date.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mass_mediaRow Newmass_mediaRow() {
                return ((mass_mediaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new mass_mediaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(mass_mediaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.mass_mediaRowChanged != null)) {
                    this.mass_mediaRowChanged(this, new mass_mediaRowChangeEvent(((mass_mediaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.mass_mediaRowChanging != null)) {
                    this.mass_mediaRowChanging(this, new mass_mediaRowChangeEvent(((mass_mediaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.mass_mediaRowDeleted != null)) {
                    this.mass_mediaRowDeleted(this, new mass_mediaRowChangeEvent(((mass_mediaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.mass_mediaRowDeleting != null)) {
                    this.mass_mediaRowDeleting(this, new mass_mediaRowChangeEvent(((mass_mediaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removemass_mediaRow(mass_mediaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "mass_mediaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class product_eventDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnrecord_id;
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnsegment_id;
            
            private global::System.Data.DataColumn columnchannel_id;
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columndemand_modification;
            
            private global::System.Data.DataColumn columnstart_date;
            
            private global::System.Data.DataColumn columnend_date;
            
            private global::System.Data.DataColumn columnmarket_plan_id;
            
            private global::System.Data.DataColumn columntype;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_eventDataTable() {
                this.TableName = "product_event";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal product_eventDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected product_eventDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn record_idColumn {
                get {
                    return this.columnrecord_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn segment_idColumn {
                get {
                    return this.columnsegment_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn channel_idColumn {
                get {
                    return this.columnchannel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn demand_modificationColumn {
                get {
                    return this.columndemand_modification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_dateColumn {
                get {
                    return this.columnstart_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn end_dateColumn {
                get {
                    return this.columnend_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn market_plan_idColumn {
                get {
                    return this.columnmarket_plan_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn typeColumn {
                get {
                    return this.columntype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_eventRow this[int index] {
                get {
                    return ((product_eventRow)(this.Rows[index]));
                }
            }
            
            public event product_eventRowChangeEventHandler product_eventRowChanging;
            
            public event product_eventRowChangeEventHandler product_eventRowChanged;
            
            public event product_eventRowChangeEventHandler product_eventRowDeleting;
            
            public event product_eventRowChangeEventHandler product_eventRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addproduct_eventRow(product_eventRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_eventRow Addproduct_eventRow(Model_infoRow parentModel_infoRowByModel_infoproduct_event, segmentRow parentsegmentRowBysegmentproduct_event, channelRow parentchannelRowBychannelproduct_event, productRow parentproductRowByproductproduct_event, double demand_modification, System.DateTime start_date, System.DateTime end_date, market_planRow parentmarket_planRowBymarket_planproduct_event, byte type) {
                product_eventRow rowproduct_eventRow = ((product_eventRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        null,
                        null,
                        demand_modification,
                        start_date,
                        end_date,
                        null,
                        type};
                if ((parentModel_infoRowByModel_infoproduct_event != null)) {
                    columnValuesArray[1] = parentModel_infoRowByModel_infoproduct_event[0];
                }
                if ((parentsegmentRowBysegmentproduct_event != null)) {
                    columnValuesArray[2] = parentsegmentRowBysegmentproduct_event[1];
                }
                if ((parentchannelRowBychannelproduct_event != null)) {
                    columnValuesArray[3] = parentchannelRowBychannelproduct_event[1];
                }
                if ((parentproductRowByproductproduct_event != null)) {
                    columnValuesArray[4] = parentproductRowByproductproduct_event[1];
                }
                if ((parentmarket_planRowBymarket_planproduct_event != null)) {
                    columnValuesArray[8] = parentmarket_planRowBymarket_planproduct_event[1];
                }
                rowproduct_eventRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowproduct_eventRow);
                return rowproduct_eventRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_eventRow FindByrecord_id(int record_id) {
                return ((product_eventRow)(this.Rows.Find(new object[] {
                            record_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                product_eventDataTable cln = ((product_eventDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new product_eventDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrecord_id = base.Columns["record_id"];
                this.columnmodel_id = base.Columns["model_id"];
                this.columnsegment_id = base.Columns["segment_id"];
                this.columnchannel_id = base.Columns["channel_id"];
                this.columnproduct_id = base.Columns["product_id"];
                this.columndemand_modification = base.Columns["demand_modification"];
                this.columnstart_date = base.Columns["start_date"];
                this.columnend_date = base.Columns["end_date"];
                this.columnmarket_plan_id = base.Columns["market_plan_id"];
                this.columntype = base.Columns["type"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrecord_id = new global::System.Data.DataColumn("record_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecord_id);
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnsegment_id = new global::System.Data.DataColumn("segment_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsegment_id);
                this.columnchannel_id = new global::System.Data.DataColumn("channel_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchannel_id);
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columndemand_modification = new global::System.Data.DataColumn("demand_modification", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndemand_modification);
                this.columnstart_date = new global::System.Data.DataColumn("start_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_date);
                this.columnend_date = new global::System.Data.DataColumn("end_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_date);
                this.columnmarket_plan_id = new global::System.Data.DataColumn("market_plan_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmarket_plan_id);
                this.columntype = new global::System.Data.DataColumn("type", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("MrktSimDBSchemaKey15", new global::System.Data.DataColumn[] {
                                this.columnrecord_id}, true));
                this.columnrecord_id.AutoIncrement = true;
                this.columnrecord_id.AutoIncrementSeed = -100;
                this.columnrecord_id.AutoIncrementStep = -1;
                this.columnrecord_id.AllowDBNull = false;
                this.columnrecord_id.ReadOnly = true;
                this.columnrecord_id.Unique = true;
                this.columnmodel_id.AllowDBNull = false;
                this.columnsegment_id.AllowDBNull = false;
                this.columnchannel_id.AllowDBNull = false;
                this.columnproduct_id.AllowDBNull = false;
                this.columnstart_date.AllowDBNull = false;
                this.columnend_date.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_eventRow Newproduct_eventRow() {
                return ((product_eventRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new product_eventRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(product_eventRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.product_eventRowChanged != null)) {
                    this.product_eventRowChanged(this, new product_eventRowChangeEvent(((product_eventRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.product_eventRowChanging != null)) {
                    this.product_eventRowChanging(this, new product_eventRowChangeEvent(((product_eventRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.product_eventRowDeleted != null)) {
                    this.product_eventRowDeleted(this, new product_eventRowChangeEvent(((product_eventRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.product_eventRowDeleting != null)) {
                    this.product_eventRowDeleting(this, new product_eventRowChangeEvent(((product_eventRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeproduct_eventRow(product_eventRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "product_eventDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class task_eventDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnrecord_id;
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnsegment_id;
            
            private global::System.Data.DataColumn columntask_id;
            
            private global::System.Data.DataColumn columndemand_modification;
            
            private global::System.Data.DataColumn columnstart_date;
            
            private global::System.Data.DataColumn columnend_date;
            
            private global::System.Data.DataColumn columnmarket_plan_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public task_eventDataTable() {
                this.TableName = "task_event";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal task_eventDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected task_eventDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn record_idColumn {
                get {
                    return this.columnrecord_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn segment_idColumn {
                get {
                    return this.columnsegment_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn task_idColumn {
                get {
                    return this.columntask_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn demand_modificationColumn {
                get {
                    return this.columndemand_modification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_dateColumn {
                get {
                    return this.columnstart_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn end_dateColumn {
                get {
                    return this.columnend_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn market_plan_idColumn {
                get {
                    return this.columnmarket_plan_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public task_eventRow this[int index] {
                get {
                    return ((task_eventRow)(this.Rows[index]));
                }
            }
            
            public event task_eventRowChangeEventHandler task_eventRowChanging;
            
            public event task_eventRowChangeEventHandler task_eventRowChanged;
            
            public event task_eventRowChangeEventHandler task_eventRowDeleting;
            
            public event task_eventRowChangeEventHandler task_eventRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addtask_eventRow(task_eventRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public task_eventRow Addtask_eventRow(Model_infoRow parentModel_infoRowByModel_infotask_event, segmentRow parentsegmentRowBysegmenttask_event, taskRow parenttaskRowBytasktask_event, double demand_modification, System.DateTime start_date, System.DateTime end_date, int market_plan_id) {
                task_eventRow rowtask_eventRow = ((task_eventRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        null,
                        demand_modification,
                        start_date,
                        end_date,
                        market_plan_id};
                if ((parentModel_infoRowByModel_infotask_event != null)) {
                    columnValuesArray[1] = parentModel_infoRowByModel_infotask_event[0];
                }
                if ((parentsegmentRowBysegmenttask_event != null)) {
                    columnValuesArray[2] = parentsegmentRowBysegmenttask_event[1];
                }
                if ((parenttaskRowBytasktask_event != null)) {
                    columnValuesArray[3] = parenttaskRowBytasktask_event[1];
                }
                rowtask_eventRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtask_eventRow);
                return rowtask_eventRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public task_eventRow FindByrecord_id(int record_id) {
                return ((task_eventRow)(this.Rows.Find(new object[] {
                            record_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                task_eventDataTable cln = ((task_eventDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new task_eventDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrecord_id = base.Columns["record_id"];
                this.columnmodel_id = base.Columns["model_id"];
                this.columnsegment_id = base.Columns["segment_id"];
                this.columntask_id = base.Columns["task_id"];
                this.columndemand_modification = base.Columns["demand_modification"];
                this.columnstart_date = base.Columns["start_date"];
                this.columnend_date = base.Columns["end_date"];
                this.columnmarket_plan_id = base.Columns["market_plan_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrecord_id = new global::System.Data.DataColumn("record_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecord_id);
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnsegment_id = new global::System.Data.DataColumn("segment_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsegment_id);
                this.columntask_id = new global::System.Data.DataColumn("task_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntask_id);
                this.columndemand_modification = new global::System.Data.DataColumn("demand_modification", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndemand_modification);
                this.columnstart_date = new global::System.Data.DataColumn("start_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_date);
                this.columnend_date = new global::System.Data.DataColumn("end_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_date);
                this.columnmarket_plan_id = new global::System.Data.DataColumn("market_plan_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmarket_plan_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("MrktSimDBSchemaKey17", new global::System.Data.DataColumn[] {
                                this.columnrecord_id}, true));
                this.columnrecord_id.AutoIncrement = true;
                this.columnrecord_id.AutoIncrementSeed = -100;
                this.columnrecord_id.AutoIncrementStep = -1;
                this.columnrecord_id.AllowDBNull = false;
                this.columnrecord_id.ReadOnly = true;
                this.columnrecord_id.Unique = true;
                this.columnmodel_id.AllowDBNull = false;
                this.columnsegment_id.AllowDBNull = false;
                this.columntask_id.AllowDBNull = false;
                this.columnstart_date.AllowDBNull = false;
                this.columnend_date.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public task_eventRow Newtask_eventRow() {
                return ((task_eventRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new task_eventRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(task_eventRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.task_eventRowChanged != null)) {
                    this.task_eventRowChanged(this, new task_eventRowChangeEvent(((task_eventRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.task_eventRowChanging != null)) {
                    this.task_eventRowChanging(this, new task_eventRowChangeEvent(((task_eventRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.task_eventRowDeleted != null)) {
                    this.task_eventRowDeleted(this, new task_eventRowChangeEvent(((task_eventRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.task_eventRowDeleting != null)) {
                    this.task_eventRowDeleting(this, new task_eventRowChangeEvent(((task_eventRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removetask_eventRow(task_eventRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "task_eventDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Model_infoDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnproject_id;
            
            private global::System.Data.DataColumn columnmodel_name;
            
            private global::System.Data.DataColumn columnmodel_type;
            
            private global::System.Data.DataColumn columndescr;
            
            private global::System.Data.DataColumn columnread_only;
            
            private global::System.Data.DataColumn columnlocked;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            private global::System.Data.DataColumn columnstart_date;
            
            private global::System.Data.DataColumn columnend_date;
            
            private global::System.Data.DataColumn columntask_based;
            
            private global::System.Data.DataColumn columnprofit_loss;
            
            private global::System.Data.DataColumn columnproduct_extensions;
            
            private global::System.Data.DataColumn columnproduct_dependency;
            
            private global::System.Data.DataColumn columnsegment_growth;
            
            private global::System.Data.DataColumn columnconsumer_budget;
            
            private global::System.Data.DataColumn columnperiodic_price;
            
            private global::System.Data.DataColumn columnpromoted_price;
            
            private global::System.Data.DataColumn columndistribution;
            
            private global::System.Data.DataColumn columndisplay;
            
            private global::System.Data.DataColumn columnsocial_network;
            
            private global::System.Data.DataColumn columnattribute_pre_and_post;
            
            private global::System.Data.DataColumn columnapp_code;
            
            private global::System.Data.DataColumn columnmarket_utility;
            
            private global::System.Data.DataColumn columncheckpoint_file;
            
            private global::System.Data.DataColumn columncheckpoint_date;
            
            private global::System.Data.DataColumn columncheckpoint_valid;
            
            private global::System.Data.DataColumn columnpop_size;
            
            private global::System.Data.DataColumn columncheckpoint_scale_factor;
            
            private global::System.Data.DataColumn columnseason_freq_part;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoDataTable() {
                this.TableName = "Model_info";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Model_infoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Model_infoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn project_idColumn {
                get {
                    return this.columnproject_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_nameColumn {
                get {
                    return this.columnmodel_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_typeColumn {
                get {
                    return this.columnmodel_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descrColumn {
                get {
                    return this.columndescr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn read_onlyColumn {
                get {
                    return this.columnread_only;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lockedColumn {
                get {
                    return this.columnlocked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_dateColumn {
                get {
                    return this.columnstart_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn end_dateColumn {
                get {
                    return this.columnend_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn task_basedColumn {
                get {
                    return this.columntask_based;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn profit_lossColumn {
                get {
                    return this.columnprofit_loss;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_extensionsColumn {
                get {
                    return this.columnproduct_extensions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_dependencyColumn {
                get {
                    return this.columnproduct_dependency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn segment_growthColumn {
                get {
                    return this.columnsegment_growth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn consumer_budgetColumn {
                get {
                    return this.columnconsumer_budget;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn periodic_priceColumn {
                get {
                    return this.columnperiodic_price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn promoted_priceColumn {
                get {
                    return this.columnpromoted_price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn distributionColumn {
                get {
                    return this.columndistribution;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn displayColumn {
                get {
                    return this.columndisplay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn social_networkColumn {
                get {
                    return this.columnsocial_network;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn attribute_pre_and_postColumn {
                get {
                    return this.columnattribute_pre_and_post;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn app_codeColumn {
                get {
                    return this.columnapp_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn market_utilityColumn {
                get {
                    return this.columnmarket_utility;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn checkpoint_fileColumn {
                get {
                    return this.columncheckpoint_file;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn checkpoint_dateColumn {
                get {
                    return this.columncheckpoint_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn checkpoint_validColumn {
                get {
                    return this.columncheckpoint_valid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pop_sizeColumn {
                get {
                    return this.columnpop_size;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn checkpoint_scale_factorColumn {
                get {
                    return this.columncheckpoint_scale_factor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn season_freq_partColumn {
                get {
                    return this.columnseason_freq_part;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow this[int index] {
                get {
                    return ((Model_infoRow)(this.Rows[index]));
                }
            }
            
            public event Model_infoRowChangeEventHandler Model_infoRowChanging;
            
            public event Model_infoRowChangeEventHandler Model_infoRowChanged;
            
            public event Model_infoRowChangeEventHandler Model_infoRowDeleting;
            
            public event Model_infoRowChangeEventHandler Model_infoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddModel_infoRow(Model_infoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow AddModel_infoRow(
                        projectRow parentprojectRowByproject_Model_info, 
                        string model_name, 
                        int model_type, 
                        string descr, 
                        bool read_only, 
                        bool locked, 
                        System.DateTime created, 
                        System.DateTime modified, 
                        System.DateTime start_date, 
                        System.DateTime end_date, 
                        bool task_based, 
                        bool profit_loss, 
                        bool product_extensions, 
                        bool product_dependency, 
                        bool segment_growth, 
                        bool consumer_budget, 
                        bool periodic_price, 
                        bool promoted_price, 
                        bool distribution, 
                        bool display, 
                        bool social_network, 
                        bool attribute_pre_and_post, 
                        string app_code, 
                        bool market_utility, 
                        string checkpoint_file, 
                        System.DateTime checkpoint_date, 
                        bool checkpoint_valid, 
                        int pop_size, 
                        double checkpoint_scale_factor, 
                        double season_freq_part) {
                Model_infoRow rowModel_infoRow = ((Model_infoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        model_name,
                        model_type,
                        descr,
                        read_only,
                        locked,
                        created,
                        modified,
                        start_date,
                        end_date,
                        task_based,
                        profit_loss,
                        product_extensions,
                        product_dependency,
                        segment_growth,
                        consumer_budget,
                        periodic_price,
                        promoted_price,
                        distribution,
                        display,
                        social_network,
                        attribute_pre_and_post,
                        app_code,
                        market_utility,
                        checkpoint_file,
                        checkpoint_date,
                        checkpoint_valid,
                        pop_size,
                        checkpoint_scale_factor,
                        season_freq_part};
                if ((parentprojectRowByproject_Model_info != null)) {
                    columnValuesArray[1] = parentprojectRowByproject_Model_info[0];
                }
                rowModel_infoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowModel_infoRow);
                return rowModel_infoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow FindBymodel_id(int model_id) {
                return ((Model_infoRow)(this.Rows.Find(new object[] {
                            model_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Model_infoDataTable cln = ((Model_infoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Model_infoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmodel_id = base.Columns["model_id"];
                this.columnproject_id = base.Columns["project_id"];
                this.columnmodel_name = base.Columns["model_name"];
                this.columnmodel_type = base.Columns["model_type"];
                this.columndescr = base.Columns["descr"];
                this.columnread_only = base.Columns["read_only"];
                this.columnlocked = base.Columns["locked"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
                this.columnstart_date = base.Columns["start_date"];
                this.columnend_date = base.Columns["end_date"];
                this.columntask_based = base.Columns["task_based"];
                this.columnprofit_loss = base.Columns["profit_loss"];
                this.columnproduct_extensions = base.Columns["product_extensions"];
                this.columnproduct_dependency = base.Columns["product_dependency"];
                this.columnsegment_growth = base.Columns["segment_growth"];
                this.columnconsumer_budget = base.Columns["consumer_budget"];
                this.columnperiodic_price = base.Columns["periodic_price"];
                this.columnpromoted_price = base.Columns["promoted_price"];
                this.columndistribution = base.Columns["distribution"];
                this.columndisplay = base.Columns["display"];
                this.columnsocial_network = base.Columns["social_network"];
                this.columnattribute_pre_and_post = base.Columns["attribute_pre_and_post"];
                this.columnapp_code = base.Columns["app_code"];
                this.columnmarket_utility = base.Columns["market_utility"];
                this.columncheckpoint_file = base.Columns["checkpoint_file"];
                this.columncheckpoint_date = base.Columns["checkpoint_date"];
                this.columncheckpoint_valid = base.Columns["checkpoint_valid"];
                this.columnpop_size = base.Columns["pop_size"];
                this.columncheckpoint_scale_factor = base.Columns["checkpoint_scale_factor"];
                this.columnseason_freq_part = base.Columns["season_freq_part"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnproject_id = new global::System.Data.DataColumn("project_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproject_id);
                this.columnmodel_name = new global::System.Data.DataColumn("model_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_name);
                this.columnmodel_type = new global::System.Data.DataColumn("model_type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_type);
                this.columndescr = new global::System.Data.DataColumn("descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescr);
                this.columnread_only = new global::System.Data.DataColumn("read_only", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnread_only);
                this.columnlocked = new global::System.Data.DataColumn("locked", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlocked);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.columnstart_date = new global::System.Data.DataColumn("start_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_date);
                this.columnend_date = new global::System.Data.DataColumn("end_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_date);
                this.columntask_based = new global::System.Data.DataColumn("task_based", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntask_based);
                this.columnprofit_loss = new global::System.Data.DataColumn("profit_loss", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprofit_loss);
                this.columnproduct_extensions = new global::System.Data.DataColumn("product_extensions", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_extensions);
                this.columnproduct_dependency = new global::System.Data.DataColumn("product_dependency", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_dependency);
                this.columnsegment_growth = new global::System.Data.DataColumn("segment_growth", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsegment_growth);
                this.columnconsumer_budget = new global::System.Data.DataColumn("consumer_budget", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconsumer_budget);
                this.columnperiodic_price = new global::System.Data.DataColumn("periodic_price", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnperiodic_price);
                this.columnpromoted_price = new global::System.Data.DataColumn("promoted_price", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpromoted_price);
                this.columndistribution = new global::System.Data.DataColumn("distribution", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndistribution);
                this.columndisplay = new global::System.Data.DataColumn("display", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndisplay);
                this.columnsocial_network = new global::System.Data.DataColumn("social_network", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsocial_network);
                this.columnattribute_pre_and_post = new global::System.Data.DataColumn("attribute_pre_and_post", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattribute_pre_and_post);
                this.columnapp_code = new global::System.Data.DataColumn("app_code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapp_code);
                this.columnmarket_utility = new global::System.Data.DataColumn("market_utility", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmarket_utility);
                this.columncheckpoint_file = new global::System.Data.DataColumn("checkpoint_file", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncheckpoint_file);
                this.columncheckpoint_date = new global::System.Data.DataColumn("checkpoint_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncheckpoint_date);
                this.columncheckpoint_valid = new global::System.Data.DataColumn("checkpoint_valid", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncheckpoint_valid);
                this.columnpop_size = new global::System.Data.DataColumn("pop_size", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpop_size);
                this.columncheckpoint_scale_factor = new global::System.Data.DataColumn("checkpoint_scale_factor", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncheckpoint_scale_factor);
                this.columnseason_freq_part = new global::System.Data.DataColumn("season_freq_part", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseason_freq_part);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("MrktSimDBSchemaKey11", new global::System.Data.DataColumn[] {
                                this.columnmodel_id}, true));
                this.columnmodel_id.AutoIncrement = true;
                this.columnmodel_id.AutoIncrementSeed = -100;
                this.columnmodel_id.AutoIncrementStep = -1;
                this.columnmodel_id.AllowDBNull = false;
                this.columnmodel_id.ReadOnly = true;
                this.columnmodel_id.Unique = true;
                this.columnproject_id.AllowDBNull = false;
                this.columnmodel_type.AllowDBNull = false;
                this.columnread_only.AllowDBNull = false;
                this.columnlocked.AllowDBNull = false;
                this.columntask_based.AllowDBNull = false;
                this.columnprofit_loss.AllowDBNull = false;
                this.columnproduct_extensions.AllowDBNull = false;
                this.columnproduct_dependency.AllowDBNull = false;
                this.columnsegment_growth.AllowDBNull = false;
                this.columnconsumer_budget.AllowDBNull = false;
                this.columnperiodic_price.AllowDBNull = false;
                this.columnpromoted_price.AllowDBNull = false;
                this.columndistribution.AllowDBNull = false;
                this.columndisplay.AllowDBNull = false;
                this.columnsocial_network.AllowDBNull = false;
                this.columnpop_size.AllowDBNull = false;
                this.columnpop_size.DefaultValue = ((int)(0));
                this.columncheckpoint_scale_factor.AllowDBNull = false;
                this.columncheckpoint_scale_factor.DefaultValue = ((double)(0));
                this.columnseason_freq_part.AllowDBNull = false;
                this.columnseason_freq_part.DefaultValue = ((double)(85));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow NewModel_infoRow() {
                return ((Model_infoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Model_infoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Model_infoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Model_infoRowChanged != null)) {
                    this.Model_infoRowChanged(this, new Model_infoRowChangeEvent(((Model_infoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Model_infoRowChanging != null)) {
                    this.Model_infoRowChanging(this, new Model_infoRowChangeEvent(((Model_infoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Model_infoRowDeleted != null)) {
                    this.Model_infoRowDeleted(this, new Model_infoRowChangeEvent(((Model_infoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Model_infoRowDeleting != null)) {
                    this.Model_infoRowDeleting(this, new Model_infoRowChangeEvent(((Model_infoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveModel_infoRow(Model_infoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Model_infoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class market_planDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columndescr;
            
            private global::System.Data.DataColumn columnstart_date;
            
            private global::System.Data.DataColumn columnend_date;
            
            private global::System.Data.DataColumn columninterval;
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columnsegment_id;
            
            private global::System.Data.DataColumn columnchannel_id;
            
            private global::System.Data.DataColumn columntask_id;
            
            private global::System.Data.DataColumn columntype;
            
            private global::System.Data.DataColumn columnparm1;
            
            private global::System.Data.DataColumn columnparm2;
            
            private global::System.Data.DataColumn columnparm3;
            
            private global::System.Data.DataColumn columnparm4;
            
            private global::System.Data.DataColumn columnparm5;
            
            private global::System.Data.DataColumn columnparm6;
            
            private global::System.Data.DataColumn columnuser_name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_planDataTable() {
                this.TableName = "market_plan";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal market_planDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected market_planDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descrColumn {
                get {
                    return this.columndescr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_dateColumn {
                get {
                    return this.columnstart_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn end_dateColumn {
                get {
                    return this.columnend_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn intervalColumn {
                get {
                    return this.columninterval;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn segment_idColumn {
                get {
                    return this.columnsegment_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn channel_idColumn {
                get {
                    return this.columnchannel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn task_idColumn {
                get {
                    return this.columntask_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn typeColumn {
                get {
                    return this.columntype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn parm1Column {
                get {
                    return this.columnparm1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn parm2Column {
                get {
                    return this.columnparm2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn parm3Column {
                get {
                    return this.columnparm3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn parm4Column {
                get {
                    return this.columnparm4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn parm5Column {
                get {
                    return this.columnparm5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn parm6Column {
                get {
                    return this.columnparm6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn user_nameColumn {
                get {
                    return this.columnuser_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_planRow this[int index] {
                get {
                    return ((market_planRow)(this.Rows[index]));
                }
            }
            
            public event market_planRowChangeEventHandler market_planRowChanging;
            
            public event market_planRowChangeEventHandler market_planRowChanged;
            
            public event market_planRowChangeEventHandler market_planRowDeleting;
            
            public event market_planRowChangeEventHandler market_planRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addmarket_planRow(market_planRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_planRow Addmarket_planRow(
                        Model_infoRow parentModel_infoRowByModel_infomarket_plan, 
                        string name, 
                        string descr, 
                        System.DateTime start_date, 
                        System.DateTime end_date, 
                        byte interval, 
                        productRow parentproductRowByproductmarket_plan, 
                        segmentRow parentsegmentRowBysegmentmarket_plan, 
                        channelRow parentchannelRowBychannelmarket_plan, 
                        taskRow parenttaskRowBytaskmarket_plan, 
                        byte type, 
                        double parm1, 
                        double parm2, 
                        double parm3, 
                        double parm4, 
                        double parm5, 
                        double parm6, 
                        string user_name) {
                market_planRow rowmarket_planRow = ((market_planRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        name,
                        descr,
                        start_date,
                        end_date,
                        interval,
                        null,
                        null,
                        null,
                        null,
                        type,
                        parm1,
                        parm2,
                        parm3,
                        parm4,
                        parm5,
                        parm6,
                        user_name};
                if ((parentModel_infoRowByModel_infomarket_plan != null)) {
                    columnValuesArray[0] = parentModel_infoRowByModel_infomarket_plan[0];
                }
                if ((parentproductRowByproductmarket_plan != null)) {
                    columnValuesArray[7] = parentproductRowByproductmarket_plan[1];
                }
                if ((parentsegmentRowBysegmentmarket_plan != null)) {
                    columnValuesArray[8] = parentsegmentRowBysegmentmarket_plan[1];
                }
                if ((parentchannelRowBychannelmarket_plan != null)) {
                    columnValuesArray[9] = parentchannelRowBychannelmarket_plan[1];
                }
                if ((parenttaskRowBytaskmarket_plan != null)) {
                    columnValuesArray[10] = parenttaskRowBytaskmarket_plan[1];
                }
                rowmarket_planRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmarket_planRow);
                return rowmarket_planRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_planRow FindByid(int id) {
                return ((market_planRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                market_planDataTable cln = ((market_planDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new market_planDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmodel_id = base.Columns["model_id"];
                this.columnid = base.Columns["id"];
                this.columnname = base.Columns["name"];
                this.columndescr = base.Columns["descr"];
                this.columnstart_date = base.Columns["start_date"];
                this.columnend_date = base.Columns["end_date"];
                this.columninterval = base.Columns["interval"];
                this.columnproduct_id = base.Columns["product_id"];
                this.columnsegment_id = base.Columns["segment_id"];
                this.columnchannel_id = base.Columns["channel_id"];
                this.columntask_id = base.Columns["task_id"];
                this.columntype = base.Columns["type"];
                this.columnparm1 = base.Columns["parm1"];
                this.columnparm2 = base.Columns["parm2"];
                this.columnparm3 = base.Columns["parm3"];
                this.columnparm4 = base.Columns["parm4"];
                this.columnparm5 = base.Columns["parm5"];
                this.columnparm6 = base.Columns["parm6"];
                this.columnuser_name = base.Columns["user_name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columndescr = new global::System.Data.DataColumn("descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescr);
                this.columnstart_date = new global::System.Data.DataColumn("start_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_date);
                this.columnend_date = new global::System.Data.DataColumn("end_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_date);
                this.columninterval = new global::System.Data.DataColumn("interval", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninterval);
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columnsegment_id = new global::System.Data.DataColumn("segment_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsegment_id);
                this.columnchannel_id = new global::System.Data.DataColumn("channel_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchannel_id);
                this.columntask_id = new global::System.Data.DataColumn("task_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntask_id);
                this.columntype = new global::System.Data.DataColumn("type", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype);
                this.columnparm1 = new global::System.Data.DataColumn("parm1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparm1);
                this.columnparm2 = new global::System.Data.DataColumn("parm2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparm2);
                this.columnparm3 = new global::System.Data.DataColumn("parm3", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparm3);
                this.columnparm4 = new global::System.Data.DataColumn("parm4", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparm4);
                this.columnparm5 = new global::System.Data.DataColumn("parm5", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparm5);
                this.columnparm6 = new global::System.Data.DataColumn("parm6", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparm6);
                this.columnuser_name = new global::System.Data.DataColumn("user_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser_name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("MrktSimDBSchemaKey19", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnmodel_id.AllowDBNull = false;
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -100;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columninterval.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_planRow Newmarket_planRow() {
                return ((market_planRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new market_planRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(market_planRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.market_planRowChanged != null)) {
                    this.market_planRowChanged(this, new market_planRowChangeEvent(((market_planRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.market_planRowChanging != null)) {
                    this.market_planRowChanging(this, new market_planRowChangeEvent(((market_planRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.market_planRowDeleted != null)) {
                    this.market_planRowDeleted(this, new market_planRowChangeEvent(((market_planRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.market_planRowDeleting != null)) {
                    this.market_planRowDeleting(this, new market_planRowChangeEvent(((market_planRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removemarket_planRow(market_planRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "market_planDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class market_plan_treeDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnparent_id;
            
            private global::System.Data.DataColumn columnchild_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_plan_treeDataTable() {
                this.TableName = "market_plan_tree";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal market_plan_treeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected market_plan_treeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn parent_idColumn {
                get {
                    return this.columnparent_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn child_idColumn {
                get {
                    return this.columnchild_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_plan_treeRow this[int index] {
                get {
                    return ((market_plan_treeRow)(this.Rows[index]));
                }
            }
            
            public event market_plan_treeRowChangeEventHandler market_plan_treeRowChanging;
            
            public event market_plan_treeRowChangeEventHandler market_plan_treeRowChanged;
            
            public event market_plan_treeRowChangeEventHandler market_plan_treeRowDeleting;
            
            public event market_plan_treeRowChangeEventHandler market_plan_treeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addmarket_plan_treeRow(market_plan_treeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_plan_treeRow Addmarket_plan_treeRow(Model_infoRow parentModel_infoRowByModel_infomarket_plan_tree, market_planRow parentmarket_planRowBymarket_planmarket_plan_tree_parent, market_planRow parentmarket_planRowBymarket_planmarket_plan_tree_child) {
                market_plan_treeRow rowmarket_plan_treeRow = ((market_plan_treeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null};
                if ((parentModel_infoRowByModel_infomarket_plan_tree != null)) {
                    columnValuesArray[0] = parentModel_infoRowByModel_infomarket_plan_tree[0];
                }
                if ((parentmarket_planRowBymarket_planmarket_plan_tree_parent != null)) {
                    columnValuesArray[1] = parentmarket_planRowBymarket_planmarket_plan_tree_parent[1];
                }
                if ((parentmarket_planRowBymarket_planmarket_plan_tree_child != null)) {
                    columnValuesArray[2] = parentmarket_planRowBymarket_planmarket_plan_tree_child[1];
                }
                rowmarket_plan_treeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmarket_plan_treeRow);
                return rowmarket_plan_treeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                market_plan_treeDataTable cln = ((market_plan_treeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new market_plan_treeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmodel_id = base.Columns["model_id"];
                this.columnparent_id = base.Columns["parent_id"];
                this.columnchild_id = base.Columns["child_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnparent_id = new global::System.Data.DataColumn("parent_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparent_id);
                this.columnchild_id = new global::System.Data.DataColumn("child_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchild_id);
                this.columnmodel_id.AllowDBNull = false;
                this.columnparent_id.AllowDBNull = false;
                this.columnchild_id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_plan_treeRow Newmarket_plan_treeRow() {
                return ((market_plan_treeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new market_plan_treeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(market_plan_treeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.market_plan_treeRowChanged != null)) {
                    this.market_plan_treeRowChanged(this, new market_plan_treeRowChangeEvent(((market_plan_treeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.market_plan_treeRowChanging != null)) {
                    this.market_plan_treeRowChanging(this, new market_plan_treeRowChangeEvent(((market_plan_treeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.market_plan_treeRowDeleted != null)) {
                    this.market_plan_treeRowDeleted(this, new market_plan_treeRowChangeEvent(((market_plan_treeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.market_plan_treeRowDeleting != null)) {
                    this.market_plan_treeRowDeleting(this, new market_plan_treeRowChangeEvent(((market_plan_treeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removemarket_plan_treeRow(market_plan_treeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "market_plan_treeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class scenarioDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnscenario_id;
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columndescr;
            
            private global::System.Data.DataColumn columnuser_name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenarioDataTable() {
                this.TableName = "scenario";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal scenarioDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected scenarioDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn scenario_idColumn {
                get {
                    return this.columnscenario_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descrColumn {
                get {
                    return this.columndescr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn user_nameColumn {
                get {
                    return this.columnuser_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenarioRow this[int index] {
                get {
                    return ((scenarioRow)(this.Rows[index]));
                }
            }
            
            public event scenarioRowChangeEventHandler scenarioRowChanging;
            
            public event scenarioRowChangeEventHandler scenarioRowChanged;
            
            public event scenarioRowChangeEventHandler scenarioRowDeleting;
            
            public event scenarioRowChangeEventHandler scenarioRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddscenarioRow(scenarioRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenarioRow AddscenarioRow(Model_infoRow parentModel_infoRowByModel_infoscenario, string name, string descr, string user_name) {
                scenarioRow rowscenarioRow = ((scenarioRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        name,
                        descr,
                        user_name};
                if ((parentModel_infoRowByModel_infoscenario != null)) {
                    columnValuesArray[1] = parentModel_infoRowByModel_infoscenario[0];
                }
                rowscenarioRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowscenarioRow);
                return rowscenarioRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenarioRow FindByscenario_id(int scenario_id) {
                return ((scenarioRow)(this.Rows.Find(new object[] {
                            scenario_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                scenarioDataTable cln = ((scenarioDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new scenarioDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnscenario_id = base.Columns["scenario_id"];
                this.columnmodel_id = base.Columns["model_id"];
                this.columnname = base.Columns["name"];
                this.columndescr = base.Columns["descr"];
                this.columnuser_name = base.Columns["user_name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnscenario_id = new global::System.Data.DataColumn("scenario_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnscenario_id);
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columndescr = new global::System.Data.DataColumn("descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescr);
                this.columnuser_name = new global::System.Data.DataColumn("user_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser_name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("MrktSimDBSchemaKey21", new global::System.Data.DataColumn[] {
                                this.columnscenario_id}, true));
                this.columnscenario_id.AutoIncrement = true;
                this.columnscenario_id.AutoIncrementSeed = -100;
                this.columnscenario_id.AutoIncrementStep = -1;
                this.columnscenario_id.AllowDBNull = false;
                this.columnscenario_id.ReadOnly = true;
                this.columnscenario_id.Unique = true;
                this.columnmodel_id.AllowDBNull = false;
                this.columnname.AllowDBNull = false;
                this.columndescr.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenarioRow NewscenarioRow() {
                return ((scenarioRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new scenarioRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(scenarioRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.scenarioRowChanged != null)) {
                    this.scenarioRowChanged(this, new scenarioRowChangeEvent(((scenarioRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.scenarioRowChanging != null)) {
                    this.scenarioRowChanging(this, new scenarioRowChangeEvent(((scenarioRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.scenarioRowDeleted != null)) {
                    this.scenarioRowDeleted(this, new scenarioRowChangeEvent(((scenarioRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.scenarioRowDeleting != null)) {
                    this.scenarioRowDeleting(this, new scenarioRowChangeEvent(((scenarioRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovescenarioRow(scenarioRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "scenarioDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class scenario_market_planDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnscenario_id;
            
            private global::System.Data.DataColumn columnmarket_plan_id;
            
            private global::System.Data.DataColumn columnmodel_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_market_planDataTable() {
                this.TableName = "scenario_market_plan";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal scenario_market_planDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected scenario_market_planDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn scenario_idColumn {
                get {
                    return this.columnscenario_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn market_plan_idColumn {
                get {
                    return this.columnmarket_plan_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_market_planRow this[int index] {
                get {
                    return ((scenario_market_planRow)(this.Rows[index]));
                }
            }
            
            public event scenario_market_planRowChangeEventHandler scenario_market_planRowChanging;
            
            public event scenario_market_planRowChangeEventHandler scenario_market_planRowChanged;
            
            public event scenario_market_planRowChangeEventHandler scenario_market_planRowDeleting;
            
            public event scenario_market_planRowChangeEventHandler scenario_market_planRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addscenario_market_planRow(scenario_market_planRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_market_planRow Addscenario_market_planRow(scenarioRow parentscenarioRowByscenarioscenario_market_plan, market_planRow parentmarket_planRowBymarket_planscenario_market_plan, Model_infoRow parentModel_infoRowByModel_infoscenario_market_plan) {
                scenario_market_planRow rowscenario_market_planRow = ((scenario_market_planRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null};
                if ((parentscenarioRowByscenarioscenario_market_plan != null)) {
                    columnValuesArray[0] = parentscenarioRowByscenarioscenario_market_plan[0];
                }
                if ((parentmarket_planRowBymarket_planscenario_market_plan != null)) {
                    columnValuesArray[1] = parentmarket_planRowBymarket_planscenario_market_plan[1];
                }
                if ((parentModel_infoRowByModel_infoscenario_market_plan != null)) {
                    columnValuesArray[2] = parentModel_infoRowByModel_infoscenario_market_plan[0];
                }
                rowscenario_market_planRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowscenario_market_planRow);
                return rowscenario_market_planRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                scenario_market_planDataTable cln = ((scenario_market_planDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new scenario_market_planDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnscenario_id = base.Columns["scenario_id"];
                this.columnmarket_plan_id = base.Columns["market_plan_id"];
                this.columnmodel_id = base.Columns["model_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnscenario_id = new global::System.Data.DataColumn("scenario_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnscenario_id);
                this.columnmarket_plan_id = new global::System.Data.DataColumn("market_plan_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmarket_plan_id);
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnscenario_id.AllowDBNull = false;
                this.columnmarket_plan_id.AllowDBNull = false;
                this.columnmodel_id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_market_planRow Newscenario_market_planRow() {
                return ((scenario_market_planRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new scenario_market_planRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(scenario_market_planRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.scenario_market_planRowChanged != null)) {
                    this.scenario_market_planRowChanged(this, new scenario_market_planRowChangeEvent(((scenario_market_planRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.scenario_market_planRowChanging != null)) {
                    this.scenario_market_planRowChanging(this, new scenario_market_planRowChangeEvent(((scenario_market_planRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.scenario_market_planRowDeleted != null)) {
                    this.scenario_market_planRowDeleted(this, new scenario_market_planRowChangeEvent(((scenario_market_planRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.scenario_market_planRowDeleting != null)) {
                    this.scenario_market_planRowDeleting(this, new scenario_market_planRowChangeEvent(((scenario_market_planRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removescenario_market_planRow(scenario_market_planRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "scenario_market_planDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class network_parameterDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columntype;
            
            private global::System.Data.DataColumn columnpersuasion_pre_use;
            
            private global::System.Data.DataColumn columnpersuasion_post_use;
            
            private global::System.Data.DataColumn columnawareness_weight;
            
            private global::System.Data.DataColumn columnnum_contacts;
            
            private global::System.Data.DataColumn columnprob_of_talking_pre_use;
            
            private global::System.Data.DataColumn columnprob_of_talking_post_use;
            
            private global::System.Data.DataColumn columnuse_local;
            
            private global::System.Data.DataColumn columnpercent_talking;
            
            private global::System.Data.DataColumn columnneg_persuasion_pre_use;
            
            private global::System.Data.DataColumn columnneg_persuasion_post_use;
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnneg_persuasion_reject;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public network_parameterDataTable() {
                this.TableName = "network_parameter";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal network_parameterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected network_parameterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn typeColumn {
                get {
                    return this.columntype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn persuasion_pre_useColumn {
                get {
                    return this.columnpersuasion_pre_use;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn persuasion_post_useColumn {
                get {
                    return this.columnpersuasion_post_use;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn awareness_weightColumn {
                get {
                    return this.columnawareness_weight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn num_contactsColumn {
                get {
                    return this.columnnum_contacts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn prob_of_talking_pre_useColumn {
                get {
                    return this.columnprob_of_talking_pre_use;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn prob_of_talking_post_useColumn {
                get {
                    return this.columnprob_of_talking_post_use;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn use_localColumn {
                get {
                    return this.columnuse_local;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn percent_talkingColumn {
                get {
                    return this.columnpercent_talking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn neg_persuasion_pre_useColumn {
                get {
                    return this.columnneg_persuasion_pre_use;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn neg_persuasion_post_useColumn {
                get {
                    return this.columnneg_persuasion_post_use;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn neg_persuasion_rejectColumn {
                get {
                    return this.columnneg_persuasion_reject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public network_parameterRow this[int index] {
                get {
                    return ((network_parameterRow)(this.Rows[index]));
                }
            }
            
            public event network_parameterRowChangeEventHandler network_parameterRowChanging;
            
            public event network_parameterRowChangeEventHandler network_parameterRowChanged;
            
            public event network_parameterRowChangeEventHandler network_parameterRowDeleting;
            
            public event network_parameterRowChangeEventHandler network_parameterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addnetwork_parameterRow(network_parameterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public network_parameterRow Addnetwork_parameterRow(string name, int type, double persuasion_pre_use, double persuasion_post_use, double awareness_weight, double num_contacts, double prob_of_talking_pre_use, double prob_of_talking_post_use, bool use_local, double percent_talking, double neg_persuasion_pre_use, double neg_persuasion_post_use, Model_infoRow parentModel_infoRowByModel_infonetwork_parameter, double neg_persuasion_reject) {
                network_parameterRow rownetwork_parameterRow = ((network_parameterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        name,
                        type,
                        persuasion_pre_use,
                        persuasion_post_use,
                        awareness_weight,
                        num_contacts,
                        prob_of_talking_pre_use,
                        prob_of_talking_post_use,
                        use_local,
                        percent_talking,
                        neg_persuasion_pre_use,
                        neg_persuasion_post_use,
                        null,
                        neg_persuasion_reject};
                if ((parentModel_infoRowByModel_infonetwork_parameter != null)) {
                    columnValuesArray[13] = parentModel_infoRowByModel_infonetwork_parameter[0];
                }
                rownetwork_parameterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rownetwork_parameterRow);
                return rownetwork_parameterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public network_parameterRow FindByid(int id) {
                return ((network_parameterRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                network_parameterDataTable cln = ((network_parameterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new network_parameterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnname = base.Columns["name"];
                this.columntype = base.Columns["type"];
                this.columnpersuasion_pre_use = base.Columns["persuasion_pre_use"];
                this.columnpersuasion_post_use = base.Columns["persuasion_post_use"];
                this.columnawareness_weight = base.Columns["awareness_weight"];
                this.columnnum_contacts = base.Columns["num_contacts"];
                this.columnprob_of_talking_pre_use = base.Columns["prob_of_talking_pre_use"];
                this.columnprob_of_talking_post_use = base.Columns["prob_of_talking_post_use"];
                this.columnuse_local = base.Columns["use_local"];
                this.columnpercent_talking = base.Columns["percent_talking"];
                this.columnneg_persuasion_pre_use = base.Columns["neg_persuasion_pre_use"];
                this.columnneg_persuasion_post_use = base.Columns["neg_persuasion_post_use"];
                this.columnmodel_id = base.Columns["model_id"];
                this.columnneg_persuasion_reject = base.Columns["neg_persuasion_reject"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columntype = new global::System.Data.DataColumn("type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype);
                this.columnpersuasion_pre_use = new global::System.Data.DataColumn("persuasion_pre_use", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpersuasion_pre_use);
                this.columnpersuasion_post_use = new global::System.Data.DataColumn("persuasion_post_use", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpersuasion_post_use);
                this.columnawareness_weight = new global::System.Data.DataColumn("awareness_weight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnawareness_weight);
                this.columnnum_contacts = new global::System.Data.DataColumn("num_contacts", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnum_contacts);
                this.columnprob_of_talking_pre_use = new global::System.Data.DataColumn("prob_of_talking_pre_use", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprob_of_talking_pre_use);
                this.columnprob_of_talking_post_use = new global::System.Data.DataColumn("prob_of_talking_post_use", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprob_of_talking_post_use);
                this.columnuse_local = new global::System.Data.DataColumn("use_local", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuse_local);
                this.columnpercent_talking = new global::System.Data.DataColumn("percent_talking", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpercent_talking);
                this.columnneg_persuasion_pre_use = new global::System.Data.DataColumn("neg_persuasion_pre_use", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnneg_persuasion_pre_use);
                this.columnneg_persuasion_post_use = new global::System.Data.DataColumn("neg_persuasion_post_use", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnneg_persuasion_post_use);
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnneg_persuasion_reject = new global::System.Data.DataColumn("neg_persuasion_reject", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnneg_persuasion_reject);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("MrktSimDBSchemaKey22", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -100;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columntype.AllowDBNull = false;
                this.columnpersuasion_pre_use.AllowDBNull = false;
                this.columnpersuasion_post_use.AllowDBNull = false;
                this.columnawareness_weight.AllowDBNull = false;
                this.columnnum_contacts.AllowDBNull = false;
                this.columnprob_of_talking_pre_use.AllowDBNull = false;
                this.columnprob_of_talking_post_use.AllowDBNull = false;
                this.columnuse_local.AllowDBNull = false;
                this.columnpercent_talking.AllowDBNull = false;
                this.columnneg_persuasion_pre_use.AllowDBNull = false;
                this.columnneg_persuasion_post_use.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public network_parameterRow Newnetwork_parameterRow() {
                return ((network_parameterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new network_parameterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(network_parameterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.network_parameterRowChanged != null)) {
                    this.network_parameterRowChanged(this, new network_parameterRowChangeEvent(((network_parameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.network_parameterRowChanging != null)) {
                    this.network_parameterRowChanging(this, new network_parameterRowChangeEvent(((network_parameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.network_parameterRowDeleted != null)) {
                    this.network_parameterRowDeleted(this, new network_parameterRowChangeEvent(((network_parameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.network_parameterRowDeleting != null)) {
                    this.network_parameterRowDeleting(this, new network_parameterRowChangeEvent(((network_parameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removenetwork_parameterRow(network_parameterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "network_parameterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class segment_networkDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnfrom_id;
            
            private global::System.Data.DataColumn columnto_id;
            
            private global::System.Data.DataColumn columnnetwork_param;
            
            private global::System.Data.DataColumn columnmodel_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segment_networkDataTable() {
                this.TableName = "segment_network";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal segment_networkDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected segment_networkDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn from_idColumn {
                get {
                    return this.columnfrom_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn to_idColumn {
                get {
                    return this.columnto_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn network_paramColumn {
                get {
                    return this.columnnetwork_param;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segment_networkRow this[int index] {
                get {
                    return ((segment_networkRow)(this.Rows[index]));
                }
            }
            
            public event segment_networkRowChangeEventHandler segment_networkRowChanging;
            
            public event segment_networkRowChangeEventHandler segment_networkRowChanged;
            
            public event segment_networkRowChangeEventHandler segment_networkRowDeleting;
            
            public event segment_networkRowChangeEventHandler segment_networkRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addsegment_networkRow(segment_networkRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segment_networkRow Addsegment_networkRow(segmentRow parentsegmentRowByfromsegmentsegment_network, segmentRow parentsegmentRowBytosegmentsegment_network, network_parameterRow parentnetwork_parameterRowBynetwork_parametersegment_network, Model_infoRow parentModel_infoRowByModel_infosegment_network) {
                segment_networkRow rowsegment_networkRow = ((segment_networkRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        null};
                if ((parentsegmentRowByfromsegmentsegment_network != null)) {
                    columnValuesArray[0] = parentsegmentRowByfromsegmentsegment_network[1];
                }
                if ((parentsegmentRowBytosegmentsegment_network != null)) {
                    columnValuesArray[1] = parentsegmentRowBytosegmentsegment_network[1];
                }
                if ((parentnetwork_parameterRowBynetwork_parametersegment_network != null)) {
                    columnValuesArray[2] = parentnetwork_parameterRowBynetwork_parametersegment_network[0];
                }
                if ((parentModel_infoRowByModel_infosegment_network != null)) {
                    columnValuesArray[3] = parentModel_infoRowByModel_infosegment_network[0];
                }
                rowsegment_networkRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsegment_networkRow);
                return rowsegment_networkRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                segment_networkDataTable cln = ((segment_networkDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new segment_networkDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnfrom_id = base.Columns["from_id"];
                this.columnto_id = base.Columns["to_id"];
                this.columnnetwork_param = base.Columns["network_param"];
                this.columnmodel_id = base.Columns["model_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnfrom_id = new global::System.Data.DataColumn("from_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfrom_id);
                this.columnto_id = new global::System.Data.DataColumn("to_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnto_id);
                this.columnnetwork_param = new global::System.Data.DataColumn("network_param", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnetwork_param);
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnfrom_id.AllowDBNull = false;
                this.columnto_id.AllowDBNull = false;
                this.columnnetwork_param.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segment_networkRow Newsegment_networkRow() {
                return ((segment_networkRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new segment_networkRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(segment_networkRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.segment_networkRowChanged != null)) {
                    this.segment_networkRowChanged(this, new segment_networkRowChangeEvent(((segment_networkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.segment_networkRowChanging != null)) {
                    this.segment_networkRowChanging(this, new segment_networkRowChangeEvent(((segment_networkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.segment_networkRowDeleted != null)) {
                    this.segment_networkRowDeleted(this, new segment_networkRowChangeEvent(((segment_networkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.segment_networkRowDeleting != null)) {
                    this.segment_networkRowDeleting(this, new segment_networkRowChangeEvent(((segment_networkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removesegment_networkRow(segment_networkRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "segment_networkDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class external_dataDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columncalendar_date;
            
            private global::System.Data.DataColumn columnsegment_id;
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columnchannel_id;
            
            private global::System.Data.DataColumn columntype;
            
            private global::System.Data.DataColumn columnvalue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public external_dataDataTable() {
                this.TableName = "external_data";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal external_dataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected external_dataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn calendar_dateColumn {
                get {
                    return this.columncalendar_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn segment_idColumn {
                get {
                    return this.columnsegment_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn channel_idColumn {
                get {
                    return this.columnchannel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn typeColumn {
                get {
                    return this.columntype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valueColumn {
                get {
                    return this.columnvalue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public external_dataRow this[int index] {
                get {
                    return ((external_dataRow)(this.Rows[index]));
                }
            }
            
            public event external_dataRowChangeEventHandler external_dataRowChanging;
            
            public event external_dataRowChangeEventHandler external_dataRowChanged;
            
            public event external_dataRowChangeEventHandler external_dataRowDeleting;
            
            public event external_dataRowChangeEventHandler external_dataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addexternal_dataRow(external_dataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public external_dataRow Addexternal_dataRow(Model_infoRow parentModel_infoRowByModel_infoexternal_data, System.DateTime calendar_date, segmentRow parentsegmentRowBysegmentexternal_data, productRow parentproductRowByproductexternal_data, channelRow parentchannelRowBychannelexternal_data, int type, double value) {
                external_dataRow rowexternal_dataRow = ((external_dataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        calendar_date,
                        null,
                        null,
                        null,
                        type,
                        value};
                if ((parentModel_infoRowByModel_infoexternal_data != null)) {
                    columnValuesArray[0] = parentModel_infoRowByModel_infoexternal_data[0];
                }
                if ((parentsegmentRowBysegmentexternal_data != null)) {
                    columnValuesArray[2] = parentsegmentRowBysegmentexternal_data[1];
                }
                if ((parentproductRowByproductexternal_data != null)) {
                    columnValuesArray[3] = parentproductRowByproductexternal_data[1];
                }
                if ((parentchannelRowBychannelexternal_data != null)) {
                    columnValuesArray[4] = parentchannelRowBychannelexternal_data[1];
                }
                rowexternal_dataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowexternal_dataRow);
                return rowexternal_dataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                external_dataDataTable cln = ((external_dataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new external_dataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmodel_id = base.Columns["model_id"];
                this.columncalendar_date = base.Columns["calendar_date"];
                this.columnsegment_id = base.Columns["segment_id"];
                this.columnproduct_id = base.Columns["product_id"];
                this.columnchannel_id = base.Columns["channel_id"];
                this.columntype = base.Columns["type"];
                this.columnvalue = base.Columns["value"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columncalendar_date = new global::System.Data.DataColumn("calendar_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncalendar_date);
                this.columnsegment_id = new global::System.Data.DataColumn("segment_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsegment_id);
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columnchannel_id = new global::System.Data.DataColumn("channel_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchannel_id);
                this.columntype = new global::System.Data.DataColumn("type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype);
                this.columnvalue = new global::System.Data.DataColumn("value", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalue);
                this.columnmodel_id.AllowDBNull = false;
                this.columncalendar_date.AllowDBNull = false;
                this.columnsegment_id.AllowDBNull = false;
                this.columnproduct_id.AllowDBNull = false;
                this.columnchannel_id.AllowDBNull = false;
                this.columntype.AllowDBNull = false;
                this.columnvalue.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public external_dataRow Newexternal_dataRow() {
                return ((external_dataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new external_dataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(external_dataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.external_dataRowChanged != null)) {
                    this.external_dataRowChanged(this, new external_dataRowChangeEvent(((external_dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.external_dataRowChanging != null)) {
                    this.external_dataRowChanging(this, new external_dataRowChangeEvent(((external_dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.external_dataRowDeleted != null)) {
                    this.external_dataRowDeleted(this, new external_dataRowChangeEvent(((external_dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.external_dataRowDeleting != null)) {
                    this.external_dataRowDeleting(this, new external_dataRowChangeEvent(((external_dataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeexternal_dataRow(external_dataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "external_dataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class model_parameterDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columntable_name;
            
            private global::System.Data.DataColumn columncol_name;
            
            private global::System.Data.DataColumn columnfilter;
            
            private global::System.Data.DataColumn columnidentity_row;
            
            private global::System.Data.DataColumn columnrow_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public model_parameterDataTable() {
                this.TableName = "model_parameter";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal model_parameterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected model_parameterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn table_nameColumn {
                get {
                    return this.columntable_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn col_nameColumn {
                get {
                    return this.columncol_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn filterColumn {
                get {
                    return this.columnfilter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn identity_rowColumn {
                get {
                    return this.columnidentity_row;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn row_idColumn {
                get {
                    return this.columnrow_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public model_parameterRow this[int index] {
                get {
                    return ((model_parameterRow)(this.Rows[index]));
                }
            }
            
            public event model_parameterRowChangeEventHandler model_parameterRowChanging;
            
            public event model_parameterRowChangeEventHandler model_parameterRowChanged;
            
            public event model_parameterRowChangeEventHandler model_parameterRowDeleting;
            
            public event model_parameterRowChangeEventHandler model_parameterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addmodel_parameterRow(model_parameterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public model_parameterRow Addmodel_parameterRow(Model_infoRow parentModel_infoRowByModel_infomodel_parameter, string name, string table_name, string col_name, string filter, string identity_row, int row_id) {
                model_parameterRow rowmodel_parameterRow = ((model_parameterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        name,
                        table_name,
                        col_name,
                        filter,
                        identity_row,
                        row_id};
                if ((parentModel_infoRowByModel_infomodel_parameter != null)) {
                    columnValuesArray[0] = parentModel_infoRowByModel_infomodel_parameter[0];
                }
                rowmodel_parameterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmodel_parameterRow);
                return rowmodel_parameterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public model_parameterRow FindByid(int id) {
                return ((model_parameterRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                model_parameterDataTable cln = ((model_parameterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new model_parameterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmodel_id = base.Columns["model_id"];
                this.columnid = base.Columns["id"];
                this.columnname = base.Columns["name"];
                this.columntable_name = base.Columns["table_name"];
                this.columncol_name = base.Columns["col_name"];
                this.columnfilter = base.Columns["filter"];
                this.columnidentity_row = base.Columns["identity_row"];
                this.columnrow_id = base.Columns["row_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columntable_name = new global::System.Data.DataColumn("table_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntable_name);
                this.columncol_name = new global::System.Data.DataColumn("col_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncol_name);
                this.columnfilter = new global::System.Data.DataColumn("filter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfilter);
                this.columnidentity_row = new global::System.Data.DataColumn("identity_row", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidentity_row);
                this.columnrow_id = new global::System.Data.DataColumn("row_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrow_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("MrktSimDBSchemaKey25", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnmodel_id.AllowDBNull = false;
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -100;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public model_parameterRow Newmodel_parameterRow() {
                return ((model_parameterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new model_parameterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(model_parameterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.model_parameterRowChanged != null)) {
                    this.model_parameterRowChanged(this, new model_parameterRowChangeEvent(((model_parameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.model_parameterRowChanging != null)) {
                    this.model_parameterRowChanging(this, new model_parameterRowChangeEvent(((model_parameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.model_parameterRowDeleted != null)) {
                    this.model_parameterRowDeleted(this, new model_parameterRowChangeEvent(((model_parameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.model_parameterRowDeleting != null)) {
                    this.model_parameterRowDeleting(this, new model_parameterRowChangeEvent(((model_parameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removemodel_parameterRow(model_parameterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "model_parameterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class market_utilityDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnrecord_id;
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnmarket_plan_id;
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columnchannel_id;
            
            private global::System.Data.DataColumn columnsegment_id;
            
            private global::System.Data.DataColumn columnpercent_dist;
            
            private global::System.Data.DataColumn columnawareness;
            
            private global::System.Data.DataColumn columnpersuasion;
            
            private global::System.Data.DataColumn columnutility;
            
            private global::System.Data.DataColumn columnstart_date;
            
            private global::System.Data.DataColumn columnend_date;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_utilityDataTable() {
                this.TableName = "market_utility";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal market_utilityDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected market_utilityDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn record_idColumn {
                get {
                    return this.columnrecord_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn market_plan_idColumn {
                get {
                    return this.columnmarket_plan_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn channel_idColumn {
                get {
                    return this.columnchannel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn segment_idColumn {
                get {
                    return this.columnsegment_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn percent_distColumn {
                get {
                    return this.columnpercent_dist;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn awarenessColumn {
                get {
                    return this.columnawareness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn persuasionColumn {
                get {
                    return this.columnpersuasion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn utilityColumn {
                get {
                    return this.columnutility;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_dateColumn {
                get {
                    return this.columnstart_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn end_dateColumn {
                get {
                    return this.columnend_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_utilityRow this[int index] {
                get {
                    return ((market_utilityRow)(this.Rows[index]));
                }
            }
            
            public event market_utilityRowChangeEventHandler market_utilityRowChanging;
            
            public event market_utilityRowChangeEventHandler market_utilityRowChanged;
            
            public event market_utilityRowChangeEventHandler market_utilityRowDeleting;
            
            public event market_utilityRowChangeEventHandler market_utilityRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addmarket_utilityRow(market_utilityRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_utilityRow Addmarket_utilityRow(Model_infoRow parentModel_infoRowByModel_infomarket_utility, market_planRow parentmarket_planRowBymarket_planmarket_utility, productRow parentproductRowByproductmarket_utility, channelRow parentchannelRowBychannelmarket_utility, segmentRow parentsegmentRowBysegmentmarket_utility, double percent_dist, double awareness, double persuasion, double utility, System.DateTime start_date, System.DateTime end_date) {
                market_utilityRow rowmarket_utilityRow = ((market_utilityRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        null,
                        null,
                        null,
                        percent_dist,
                        awareness,
                        persuasion,
                        utility,
                        start_date,
                        end_date};
                if ((parentModel_infoRowByModel_infomarket_utility != null)) {
                    columnValuesArray[1] = parentModel_infoRowByModel_infomarket_utility[0];
                }
                if ((parentmarket_planRowBymarket_planmarket_utility != null)) {
                    columnValuesArray[2] = parentmarket_planRowBymarket_planmarket_utility[1];
                }
                if ((parentproductRowByproductmarket_utility != null)) {
                    columnValuesArray[3] = parentproductRowByproductmarket_utility[1];
                }
                if ((parentchannelRowBychannelmarket_utility != null)) {
                    columnValuesArray[4] = parentchannelRowBychannelmarket_utility[1];
                }
                if ((parentsegmentRowBysegmentmarket_utility != null)) {
                    columnValuesArray[5] = parentsegmentRowBysegmentmarket_utility[1];
                }
                rowmarket_utilityRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmarket_utilityRow);
                return rowmarket_utilityRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_utilityRow FindByrecord_id(int record_id) {
                return ((market_utilityRow)(this.Rows.Find(new object[] {
                            record_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                market_utilityDataTable cln = ((market_utilityDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new market_utilityDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrecord_id = base.Columns["record_id"];
                this.columnmodel_id = base.Columns["model_id"];
                this.columnmarket_plan_id = base.Columns["market_plan_id"];
                this.columnproduct_id = base.Columns["product_id"];
                this.columnchannel_id = base.Columns["channel_id"];
                this.columnsegment_id = base.Columns["segment_id"];
                this.columnpercent_dist = base.Columns["percent_dist"];
                this.columnawareness = base.Columns["awareness"];
                this.columnpersuasion = base.Columns["persuasion"];
                this.columnutility = base.Columns["utility"];
                this.columnstart_date = base.Columns["start_date"];
                this.columnend_date = base.Columns["end_date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrecord_id = new global::System.Data.DataColumn("record_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecord_id);
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnmarket_plan_id = new global::System.Data.DataColumn("market_plan_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmarket_plan_id);
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columnchannel_id = new global::System.Data.DataColumn("channel_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchannel_id);
                this.columnsegment_id = new global::System.Data.DataColumn("segment_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsegment_id);
                this.columnpercent_dist = new global::System.Data.DataColumn("percent_dist", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpercent_dist);
                this.columnawareness = new global::System.Data.DataColumn("awareness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnawareness);
                this.columnpersuasion = new global::System.Data.DataColumn("persuasion", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpersuasion);
                this.columnutility = new global::System.Data.DataColumn("utility", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnutility);
                this.columnstart_date = new global::System.Data.DataColumn("start_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_date);
                this.columnend_date = new global::System.Data.DataColumn("end_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_date);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("MrktSimDBSchemaKey32", new global::System.Data.DataColumn[] {
                                this.columnrecord_id}, true));
                this.columnrecord_id.AutoIncrement = true;
                this.columnrecord_id.AutoIncrementSeed = -100;
                this.columnrecord_id.AutoIncrementStep = -1;
                this.columnrecord_id.AllowDBNull = false;
                this.columnrecord_id.ReadOnly = true;
                this.columnrecord_id.Unique = true;
                this.columnmodel_id.AllowDBNull = false;
                this.columnmarket_plan_id.AllowDBNull = false;
                this.columnproduct_id.AllowDBNull = false;
                this.columnchannel_id.AllowDBNull = false;
                this.columnsegment_id.AllowDBNull = false;
                this.columnpercent_dist.AllowDBNull = false;
                this.columnawareness.AllowDBNull = false;
                this.columnpersuasion.AllowDBNull = false;
                this.columnutility.AllowDBNull = false;
                this.columnstart_date.AllowDBNull = false;
                this.columnend_date.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_utilityRow Newmarket_utilityRow() {
                return ((market_utilityRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new market_utilityRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(market_utilityRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.market_utilityRowChanged != null)) {
                    this.market_utilityRowChanged(this, new market_utilityRowChangeEvent(((market_utilityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.market_utilityRowChanging != null)) {
                    this.market_utilityRowChanging(this, new market_utilityRowChangeEvent(((market_utilityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.market_utilityRowDeleted != null)) {
                    this.market_utilityRowDeleted(this, new market_utilityRowChangeEvent(((market_utilityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.market_utilityRowDeleting != null)) {
                    this.market_utilityRowDeleting(this, new market_utilityRowChangeEvent(((market_utilityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removemarket_utilityRow(market_utilityRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "market_utilityDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class product_treeDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnparent_id;
            
            private global::System.Data.DataColumn columnchild_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_treeDataTable() {
                this.TableName = "product_tree";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal product_treeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected product_treeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn parent_idColumn {
                get {
                    return this.columnparent_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn child_idColumn {
                get {
                    return this.columnchild_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_treeRow this[int index] {
                get {
                    return ((product_treeRow)(this.Rows[index]));
                }
            }
            
            public event product_treeRowChangeEventHandler product_treeRowChanging;
            
            public event product_treeRowChangeEventHandler product_treeRowChanged;
            
            public event product_treeRowChangeEventHandler product_treeRowDeleting;
            
            public event product_treeRowChangeEventHandler product_treeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addproduct_treeRow(product_treeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_treeRow Addproduct_treeRow(Model_infoRow parentModel_infoRowByModel_infoproduct_tree, productRow parentproductRowByproductproduct_tree, productRow parentproductRowByproductproduct_tree1) {
                product_treeRow rowproduct_treeRow = ((product_treeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null};
                if ((parentModel_infoRowByModel_infoproduct_tree != null)) {
                    columnValuesArray[0] = parentModel_infoRowByModel_infoproduct_tree[0];
                }
                if ((parentproductRowByproductproduct_tree != null)) {
                    columnValuesArray[1] = parentproductRowByproductproduct_tree[1];
                }
                if ((parentproductRowByproductproduct_tree1 != null)) {
                    columnValuesArray[2] = parentproductRowByproductproduct_tree1[1];
                }
                rowproduct_treeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowproduct_treeRow);
                return rowproduct_treeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                product_treeDataTable cln = ((product_treeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new product_treeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmodel_id = base.Columns["model_id"];
                this.columnparent_id = base.Columns["parent_id"];
                this.columnchild_id = base.Columns["child_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnparent_id = new global::System.Data.DataColumn("parent_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparent_id);
                this.columnchild_id = new global::System.Data.DataColumn("child_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchild_id);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_treeRow Newproduct_treeRow() {
                return ((product_treeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new product_treeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(product_treeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.product_treeRowChanged != null)) {
                    this.product_treeRowChanged(this, new product_treeRowChangeEvent(((product_treeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.product_treeRowChanging != null)) {
                    this.product_treeRowChanging(this, new product_treeRowChangeEvent(((product_treeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.product_treeRowDeleted != null)) {
                    this.product_treeRowDeleted(this, new product_treeRowChangeEvent(((product_treeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.product_treeRowDeleting != null)) {
                    this.product_treeRowDeleting(this, new product_treeRowChangeEvent(((product_treeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeproduct_treeRow(product_treeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "product_treeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class product_typeDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columntype_name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_typeDataTable() {
                this.TableName = "product_type";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal product_typeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected product_typeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn type_nameColumn {
                get {
                    return this.columntype_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_typeRow this[int index] {
                get {
                    return ((product_typeRow)(this.Rows[index]));
                }
            }
            
            public event product_typeRowChangeEventHandler product_typeRowChanging;
            
            public event product_typeRowChangeEventHandler product_typeRowChanged;
            
            public event product_typeRowChangeEventHandler product_typeRowDeleting;
            
            public event product_typeRowChangeEventHandler product_typeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addproduct_typeRow(product_typeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_typeRow Addproduct_typeRow(Model_infoRow parentModel_infoRowByModel_infoproduct_type, string type_name) {
                product_typeRow rowproduct_typeRow = ((product_typeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        type_name};
                if ((parentModel_infoRowByModel_infoproduct_type != null)) {
                    columnValuesArray[0] = parentModel_infoRowByModel_infoproduct_type[0];
                }
                rowproduct_typeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowproduct_typeRow);
                return rowproduct_typeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_typeRow FindByid(int id) {
                return ((product_typeRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                product_typeDataTable cln = ((product_typeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new product_typeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmodel_id = base.Columns["model_id"];
                this.columnid = base.Columns["id"];
                this.columntype_name = base.Columns["type_name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columntype_name = new global::System.Data.DataColumn("type_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("MrktSimDBSchemaKey1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnmodel_id.AllowDBNull = false;
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -100;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columntype_name.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_typeRow Newproduct_typeRow() {
                return ((product_typeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new product_typeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(product_typeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.product_typeRowChanged != null)) {
                    this.product_typeRowChanged(this, new product_typeRowChangeEvent(((product_typeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.product_typeRowChanging != null)) {
                    this.product_typeRowChanging(this, new product_typeRowChangeEvent(((product_typeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.product_typeRowDeleted != null)) {
                    this.product_typeRowDeleted(this, new product_typeRowChangeEvent(((product_typeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.product_typeRowDeleting != null)) {
                    this.product_typeRowDeleting(this, new product_typeRowChangeEvent(((product_typeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeproduct_typeRow(product_typeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "product_typeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class projectDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columndescr;
            
            private global::System.Data.DataColumn columnread_only;
            
            private global::System.Data.DataColumn columnlocked;
            
            private global::System.Data.DataColumn columncreated;
            
            private global::System.Data.DataColumn columnmodified;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public projectDataTable() {
                this.TableName = "project";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal projectDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected projectDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descrColumn {
                get {
                    return this.columndescr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn read_onlyColumn {
                get {
                    return this.columnread_only;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lockedColumn {
                get {
                    return this.columnlocked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createdColumn {
                get {
                    return this.columncreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modifiedColumn {
                get {
                    return this.columnmodified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public projectRow this[int index] {
                get {
                    return ((projectRow)(this.Rows[index]));
                }
            }
            
            public event projectRowChangeEventHandler projectRowChanging;
            
            public event projectRowChangeEventHandler projectRowChanged;
            
            public event projectRowChangeEventHandler projectRowDeleting;
            
            public event projectRowChangeEventHandler projectRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddprojectRow(projectRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public projectRow AddprojectRow(string name, string descr, bool read_only, bool locked, System.DateTime created, System.DateTime modified) {
                projectRow rowprojectRow = ((projectRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        name,
                        descr,
                        read_only,
                        locked,
                        created,
                        modified};
                rowprojectRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowprojectRow);
                return rowprojectRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public projectRow FindByid(int id) {
                return ((projectRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                projectDataTable cln = ((projectDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new projectDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnname = base.Columns["name"];
                this.columndescr = base.Columns["descr"];
                this.columnread_only = base.Columns["read_only"];
                this.columnlocked = base.Columns["locked"];
                this.columncreated = base.Columns["created"];
                this.columnmodified = base.Columns["modified"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columndescr = new global::System.Data.DataColumn("descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescr);
                this.columnread_only = new global::System.Data.DataColumn("read_only", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnread_only);
                this.columnlocked = new global::System.Data.DataColumn("locked", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlocked);
                this.columncreated = new global::System.Data.DataColumn("created", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated);
                this.columnmodified = new global::System.Data.DataColumn("modified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodified);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -100;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnname.MaxLength = 100;
                this.columndescr.MaxLength = 200;
                this.columnread_only.AllowDBNull = false;
                this.columnlocked.AllowDBNull = false;
                this.columncreated.AllowDBNull = false;
                this.columnmodified.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public projectRow NewprojectRow() {
                return ((projectRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new projectRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(projectRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.projectRowChanged != null)) {
                    this.projectRowChanged(this, new projectRowChangeEvent(((projectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.projectRowChanging != null)) {
                    this.projectRowChanging(this, new projectRowChangeEvent(((projectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.projectRowDeleted != null)) {
                    this.projectRowDeleted(this, new projectRowChangeEvent(((projectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.projectRowDeleting != null)) {
                    this.projectRowDeleting(this, new projectRowChangeEvent(((projectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveprojectRow(projectRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "projectDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class simulationDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnscenario_id;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columndescr;
            
            private global::System.Data.DataColumn columntype;
            
            private global::System.Data.DataColumn columnlocked;
            
            private global::System.Data.DataColumn columnqueued;
            
            private global::System.Data.DataColumn columnstart_date;
            
            private global::System.Data.DataColumn columnend_date;
            
            private global::System.Data.DataColumn columnsim_num;
            
            private global::System.Data.DataColumn columnmetric_start_date;
            
            private global::System.Data.DataColumn columnmetric_end_date;
            
            private global::System.Data.DataColumn columndelete_std_results;
            
            private global::System.Data.DataColumn columncontrol_string;
            
            private global::System.Data.DataColumn columnaccess_time;
            
            private global::System.Data.DataColumn columnscale_factor;
            
            private global::System.Data.DataColumn columnreset_panel_state;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public simulationDataTable() {
                this.TableName = "simulation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal simulationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected simulationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn scenario_idColumn {
                get {
                    return this.columnscenario_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descrColumn {
                get {
                    return this.columndescr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn typeColumn {
                get {
                    return this.columntype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lockedColumn {
                get {
                    return this.columnlocked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn queuedColumn {
                get {
                    return this.columnqueued;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_dateColumn {
                get {
                    return this.columnstart_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn end_dateColumn {
                get {
                    return this.columnend_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sim_numColumn {
                get {
                    return this.columnsim_num;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn metric_start_dateColumn {
                get {
                    return this.columnmetric_start_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn metric_end_dateColumn {
                get {
                    return this.columnmetric_end_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn delete_std_resultsColumn {
                get {
                    return this.columndelete_std_results;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn control_stringColumn {
                get {
                    return this.columncontrol_string;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn access_timeColumn {
                get {
                    return this.columnaccess_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn scale_factorColumn {
                get {
                    return this.columnscale_factor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn reset_panel_stateColumn {
                get {
                    return this.columnreset_panel_state;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public simulationRow this[int index] {
                get {
                    return ((simulationRow)(this.Rows[index]));
                }
            }
            
            public event simulationRowChangeEventHandler simulationRowChanging;
            
            public event simulationRowChangeEventHandler simulationRowChanged;
            
            public event simulationRowChangeEventHandler simulationRowDeleting;
            
            public event simulationRowChangeEventHandler simulationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddsimulationRow(simulationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public simulationRow AddsimulationRow(
                        scenarioRow parentscenarioRowByFK_scenario_simulation, 
                        string name, 
                        string descr, 
                        byte type, 
                        bool locked, 
                        bool queued, 
                        System.DateTime start_date, 
                        System.DateTime end_date, 
                        int sim_num, 
                        System.DateTime metric_start_date, 
                        System.DateTime metric_end_date, 
                        bool delete_std_results, 
                        string control_string, 
                        int access_time, 
                        double scale_factor, 
                        bool reset_panel_state) {
                simulationRow rowsimulationRow = ((simulationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        name,
                        descr,
                        type,
                        locked,
                        queued,
                        start_date,
                        end_date,
                        sim_num,
                        metric_start_date,
                        metric_end_date,
                        delete_std_results,
                        control_string,
                        access_time,
                        scale_factor,
                        reset_panel_state};
                if ((parentscenarioRowByFK_scenario_simulation != null)) {
                    columnValuesArray[1] = parentscenarioRowByFK_scenario_simulation[0];
                }
                rowsimulationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsimulationRow);
                return rowsimulationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public simulationRow FindByid(int id) {
                return ((simulationRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                simulationDataTable cln = ((simulationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new simulationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnscenario_id = base.Columns["scenario_id"];
                this.columnname = base.Columns["name"];
                this.columndescr = base.Columns["descr"];
                this.columntype = base.Columns["type"];
                this.columnlocked = base.Columns["locked"];
                this.columnqueued = base.Columns["queued"];
                this.columnstart_date = base.Columns["start_date"];
                this.columnend_date = base.Columns["end_date"];
                this.columnsim_num = base.Columns["sim_num"];
                this.columnmetric_start_date = base.Columns["metric_start_date"];
                this.columnmetric_end_date = base.Columns["metric_end_date"];
                this.columndelete_std_results = base.Columns["delete_std_results"];
                this.columncontrol_string = base.Columns["control_string"];
                this.columnaccess_time = base.Columns["access_time"];
                this.columnscale_factor = base.Columns["scale_factor"];
                this.columnreset_panel_state = base.Columns["reset_panel_state"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnscenario_id = new global::System.Data.DataColumn("scenario_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnscenario_id);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columndescr = new global::System.Data.DataColumn("descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescr);
                this.columntype = new global::System.Data.DataColumn("type", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype);
                this.columnlocked = new global::System.Data.DataColumn("locked", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlocked);
                this.columnqueued = new global::System.Data.DataColumn("queued", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnqueued);
                this.columnstart_date = new global::System.Data.DataColumn("start_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_date);
                this.columnend_date = new global::System.Data.DataColumn("end_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_date);
                this.columnsim_num = new global::System.Data.DataColumn("sim_num", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsim_num);
                this.columnmetric_start_date = new global::System.Data.DataColumn("metric_start_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmetric_start_date);
                this.columnmetric_end_date = new global::System.Data.DataColumn("metric_end_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmetric_end_date);
                this.columndelete_std_results = new global::System.Data.DataColumn("delete_std_results", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndelete_std_results);
                this.columncontrol_string = new global::System.Data.DataColumn("control_string", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontrol_string);
                this.columnaccess_time = new global::System.Data.DataColumn("access_time", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccess_time);
                this.columnscale_factor = new global::System.Data.DataColumn("scale_factor", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnscale_factor);
                this.columnreset_panel_state = new global::System.Data.DataColumn("reset_panel_state", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreset_panel_state);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -100;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnscenario_id.AllowDBNull = false;
                this.columnname.AllowDBNull = false;
                this.columnname.MaxLength = 100;
                this.columndescr.AllowDBNull = false;
                this.columndescr.MaxLength = 100;
                this.columntype.AllowDBNull = false;
                this.columnlocked.AllowDBNull = false;
                this.columnqueued.AllowDBNull = false;
                this.columnsim_num.AllowDBNull = false;
                this.columnmetric_start_date.AllowDBNull = false;
                this.columnmetric_end_date.AllowDBNull = false;
                this.columndelete_std_results.AllowDBNull = false;
                this.columncontrol_string.AllowDBNull = false;
                this.columncontrol_string.MaxLength = 100;
                this.columnaccess_time.AllowDBNull = false;
                this.columnscale_factor.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public simulationRow NewsimulationRow() {
                return ((simulationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new simulationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(simulationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.simulationRowChanged != null)) {
                    this.simulationRowChanged(this, new simulationRowChangeEvent(((simulationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.simulationRowChanging != null)) {
                    this.simulationRowChanging(this, new simulationRowChangeEvent(((simulationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.simulationRowDeleted != null)) {
                    this.simulationRowDeleted(this, new simulationRowChangeEvent(((simulationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.simulationRowDeleting != null)) {
                    this.simulationRowDeleting(this, new simulationRowChangeEvent(((simulationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovesimulationRow(simulationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "simulationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sim_queueDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnrun_id;
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columnnum;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columncurrent_date;
            
            private global::System.Data.DataColumn columnelapsed_time;
            
            private global::System.Data.DataColumn columncurrent_status;
            
            private global::System.Data.DataColumn columnrun_time;
            
            private global::System.Data.DataColumn columnseed;
            
            private global::System.Data.DataColumn columnparam_id;
            
            private global::System.Data.DataColumn columnsim_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sim_queueDataTable() {
                this.TableName = "sim_queue";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sim_queueDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected sim_queueDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn run_idColumn {
                get {
                    return this.columnrun_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numColumn {
                get {
                    return this.columnnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn current_dateColumn {
                get {
                    return this.columncurrent_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn elapsed_timeColumn {
                get {
                    return this.columnelapsed_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn current_statusColumn {
                get {
                    return this.columncurrent_status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn run_timeColumn {
                get {
                    return this.columnrun_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn seedColumn {
                get {
                    return this.columnseed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn param_idColumn {
                get {
                    return this.columnparam_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sim_idColumn {
                get {
                    return this.columnsim_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sim_queueRow this[int index] {
                get {
                    return ((sim_queueRow)(this.Rows[index]));
                }
            }
            
            public event sim_queueRowChangeEventHandler sim_queueRowChanging;
            
            public event sim_queueRowChangeEventHandler sim_queueRowChanged;
            
            public event sim_queueRowChangeEventHandler sim_queueRowDeleting;
            
            public event sim_queueRowChangeEventHandler sim_queueRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addsim_queueRow(sim_queueRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sim_queueRow Addsim_queueRow(int model_id, byte status, int num, string name, System.DateTime current_date, int elapsed_time, string current_status, System.DateTime run_time, int seed, int param_id, simulationRow parentsimulationRowBySimulationSimQueue) {
                sim_queueRow rowsim_queueRow = ((sim_queueRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        model_id,
                        status,
                        num,
                        name,
                        current_date,
                        elapsed_time,
                        current_status,
                        run_time,
                        seed,
                        param_id,
                        null};
                if ((parentsimulationRowBySimulationSimQueue != null)) {
                    columnValuesArray[11] = parentsimulationRowBySimulationSimQueue[0];
                }
                rowsim_queueRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsim_queueRow);
                return rowsim_queueRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sim_queueRow FindByrun_id(int run_id) {
                return ((sim_queueRow)(this.Rows.Find(new object[] {
                            run_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                sim_queueDataTable cln = ((sim_queueDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new sim_queueDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrun_id = base.Columns["run_id"];
                this.columnmodel_id = base.Columns["model_id"];
                this.columnstatus = base.Columns["status"];
                this.columnnum = base.Columns["num"];
                this.columnname = base.Columns["name"];
                this.columncurrent_date = base.Columns["current_date"];
                this.columnelapsed_time = base.Columns["elapsed_time"];
                this.columncurrent_status = base.Columns["current_status"];
                this.columnrun_time = base.Columns["run_time"];
                this.columnseed = base.Columns["seed"];
                this.columnparam_id = base.Columns["param_id"];
                this.columnsim_id = base.Columns["sim_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrun_id = new global::System.Data.DataColumn("run_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrun_id);
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columnnum = new global::System.Data.DataColumn("num", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnum);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columncurrent_date = new global::System.Data.DataColumn("current_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncurrent_date);
                this.columnelapsed_time = new global::System.Data.DataColumn("elapsed_time", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnelapsed_time);
                this.columncurrent_status = new global::System.Data.DataColumn("current_status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncurrent_status);
                this.columnrun_time = new global::System.Data.DataColumn("run_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrun_time);
                this.columnseed = new global::System.Data.DataColumn("seed", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseed);
                this.columnparam_id = new global::System.Data.DataColumn("param_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparam_id);
                this.columnsim_id = new global::System.Data.DataColumn("sim_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsim_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnrun_id}, true));
                this.columnrun_id.AutoIncrement = true;
                this.columnrun_id.AutoIncrementSeed = -100;
                this.columnrun_id.AutoIncrementStep = -1;
                this.columnrun_id.AllowDBNull = false;
                this.columnrun_id.ReadOnly = true;
                this.columnrun_id.Unique = true;
                this.columnstatus.AllowDBNull = false;
                this.columnnum.AllowDBNull = false;
                this.columnname.AllowDBNull = false;
                this.columnname.MaxLength = 25;
                this.columnelapsed_time.AllowDBNull = false;
                this.columncurrent_status.AllowDBNull = false;
                this.columncurrent_status.MaxLength = 100;
                this.columnseed.AllowDBNull = false;
                this.columnparam_id.AllowDBNull = false;
                this.columnsim_id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sim_queueRow Newsim_queueRow() {
                return ((sim_queueRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new sim_queueRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(sim_queueRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sim_queueRowChanged != null)) {
                    this.sim_queueRowChanged(this, new sim_queueRowChangeEvent(((sim_queueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sim_queueRowChanging != null)) {
                    this.sim_queueRowChanging(this, new sim_queueRowChangeEvent(((sim_queueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sim_queueRowDeleted != null)) {
                    this.sim_queueRowDeleted(this, new sim_queueRowChangeEvent(((sim_queueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sim_queueRowDeleting != null)) {
                    this.sim_queueRowDeleting(this, new sim_queueRowChangeEvent(((sim_queueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removesim_queueRow(sim_queueRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sim_queueDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class scenario_variableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columntoken;
            
            private global::System.Data.DataColumn columndescr;
            
            private global::System.Data.DataColumn columnmin;
            
            private global::System.Data.DataColumn columnmax;
            
            private global::System.Data.DataColumn columnnum_steps;
            
            private global::System.Data.DataColumn columntype;
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columnsim_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_variableDataTable() {
                this.TableName = "scenario_variable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal scenario_variableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected scenario_variableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tokenColumn {
                get {
                    return this.columntoken;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descrColumn {
                get {
                    return this.columndescr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn minColumn {
                get {
                    return this.columnmin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn maxColumn {
                get {
                    return this.columnmax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn num_stepsColumn {
                get {
                    return this.columnnum_steps;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn typeColumn {
                get {
                    return this.columntype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sim_idColumn {
                get {
                    return this.columnsim_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_variableRow this[int index] {
                get {
                    return ((scenario_variableRow)(this.Rows[index]));
                }
            }
            
            public event scenario_variableRowChangeEventHandler scenario_variableRowChanging;
            
            public event scenario_variableRowChangeEventHandler scenario_variableRowChanged;
            
            public event scenario_variableRowChangeEventHandler scenario_variableRowDeleting;
            
            public event scenario_variableRowChangeEventHandler scenario_variableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addscenario_variableRow(scenario_variableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_variableRow Addscenario_variableRow(string token, string descr, double min, double max, int num_steps, byte type, int product_id, simulationRow parentsimulationRowBySimulationVariable) {
                scenario_variableRow rowscenario_variableRow = ((scenario_variableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        token,
                        descr,
                        min,
                        max,
                        num_steps,
                        type,
                        product_id,
                        null};
                if ((parentsimulationRowBySimulationVariable != null)) {
                    columnValuesArray[8] = parentsimulationRowBySimulationVariable[0];
                }
                rowscenario_variableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowscenario_variableRow);
                return rowscenario_variableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_variableRow FindByid(int id) {
                return ((scenario_variableRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                scenario_variableDataTable cln = ((scenario_variableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new scenario_variableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columntoken = base.Columns["token"];
                this.columndescr = base.Columns["descr"];
                this.columnmin = base.Columns["min"];
                this.columnmax = base.Columns["max"];
                this.columnnum_steps = base.Columns["num_steps"];
                this.columntype = base.Columns["type"];
                this.columnproduct_id = base.Columns["product_id"];
                this.columnsim_id = base.Columns["sim_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columntoken = new global::System.Data.DataColumn("token", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntoken);
                this.columndescr = new global::System.Data.DataColumn("descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescr);
                this.columnmin = new global::System.Data.DataColumn("min", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmin);
                this.columnmax = new global::System.Data.DataColumn("max", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmax);
                this.columnnum_steps = new global::System.Data.DataColumn("num_steps", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnum_steps);
                this.columntype = new global::System.Data.DataColumn("type", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype);
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columnsim_id = new global::System.Data.DataColumn("sim_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsim_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -100;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columntoken.MaxLength = 10;
                this.columndescr.MaxLength = 100;
                this.columnmin.AllowDBNull = false;
                this.columnmax.AllowDBNull = false;
                this.columnnum_steps.AllowDBNull = false;
                this.columntype.AllowDBNull = false;
                this.columnproduct_id.AllowDBNull = false;
                this.columnproduct_id.DefaultValue = ((int)(-1));
                this.columnsim_id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_variableRow Newscenario_variableRow() {
                return ((scenario_variableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new scenario_variableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(scenario_variableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.scenario_variableRowChanged != null)) {
                    this.scenario_variableRowChanged(this, new scenario_variableRowChangeEvent(((scenario_variableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.scenario_variableRowChanging != null)) {
                    this.scenario_variableRowChanging(this, new scenario_variableRowChangeEvent(((scenario_variableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.scenario_variableRowDeleted != null)) {
                    this.scenario_variableRowDeleted(this, new scenario_variableRowChangeEvent(((scenario_variableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.scenario_variableRowDeleting != null)) {
                    this.scenario_variableRowDeleting(this, new scenario_variableRowChangeEvent(((scenario_variableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removescenario_variableRow(scenario_variableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "scenario_variableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sim_variable_valueDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnrun_id;
            
            private global::System.Data.DataColumn columnvar_id;
            
            private global::System.Data.DataColumn columnval;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sim_variable_valueDataTable() {
                this.TableName = "sim_variable_value";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sim_variable_valueDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected sim_variable_valueDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn run_idColumn {
                get {
                    return this.columnrun_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn var_idColumn {
                get {
                    return this.columnvar_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valColumn {
                get {
                    return this.columnval;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sim_variable_valueRow this[int index] {
                get {
                    return ((sim_variable_valueRow)(this.Rows[index]));
                }
            }
            
            public event sim_variable_valueRowChangeEventHandler sim_variable_valueRowChanging;
            
            public event sim_variable_valueRowChangeEventHandler sim_variable_valueRowChanged;
            
            public event sim_variable_valueRowChangeEventHandler sim_variable_valueRowDeleting;
            
            public event sim_variable_valueRowChangeEventHandler sim_variable_valueRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addsim_variable_valueRow(sim_variable_valueRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sim_variable_valueRow Addsim_variable_valueRow(sim_queueRow parentsim_queueRowBySimVariableValue, scenario_variableRow parentscenario_variableRowByscenario_variable_sim_variable_value, double val) {
                sim_variable_valueRow rowsim_variable_valueRow = ((sim_variable_valueRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        val};
                if ((parentsim_queueRowBySimVariableValue != null)) {
                    columnValuesArray[0] = parentsim_queueRowBySimVariableValue[0];
                }
                if ((parentscenario_variableRowByscenario_variable_sim_variable_value != null)) {
                    columnValuesArray[1] = parentscenario_variableRowByscenario_variable_sim_variable_value[0];
                }
                rowsim_variable_valueRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsim_variable_valueRow);
                return rowsim_variable_valueRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                sim_variable_valueDataTable cln = ((sim_variable_valueDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new sim_variable_valueDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrun_id = base.Columns["run_id"];
                this.columnvar_id = base.Columns["var_id"];
                this.columnval = base.Columns["val"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrun_id = new global::System.Data.DataColumn("run_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrun_id);
                this.columnvar_id = new global::System.Data.DataColumn("var_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvar_id);
                this.columnval = new global::System.Data.DataColumn("val", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnval);
                this.columnrun_id.AllowDBNull = false;
                this.columnvar_id.AllowDBNull = false;
                this.columnval.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sim_variable_valueRow Newsim_variable_valueRow() {
                return ((sim_variable_valueRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new sim_variable_valueRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(sim_variable_valueRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sim_variable_valueRowChanged != null)) {
                    this.sim_variable_valueRowChanged(this, new sim_variable_valueRowChangeEvent(((sim_variable_valueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sim_variable_valueRowChanging != null)) {
                    this.sim_variable_valueRowChanging(this, new sim_variable_valueRowChangeEvent(((sim_variable_valueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sim_variable_valueRowDeleted != null)) {
                    this.sim_variable_valueRowDeleted(this, new sim_variable_valueRowChangeEvent(((sim_variable_valueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sim_variable_valueRowDeleting != null)) {
                    this.sim_variable_valueRowDeleting(this, new sim_variable_valueRowChangeEvent(((sim_variable_valueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removesim_variable_valueRow(sim_variable_valueRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sim_variable_valueDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class scenario_parameterDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnparam_id;
            
            private global::System.Data.DataColumn columnaValue;
            
            private global::System.Data.DataColumn columnexpression;
            
            private global::System.Data.DataColumn columnsim_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_parameterDataTable() {
                this.TableName = "scenario_parameter";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal scenario_parameterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected scenario_parameterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn param_idColumn {
                get {
                    return this.columnparam_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn aValueColumn {
                get {
                    return this.columnaValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn expressionColumn {
                get {
                    return this.columnexpression;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sim_idColumn {
                get {
                    return this.columnsim_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_parameterRow this[int index] {
                get {
                    return ((scenario_parameterRow)(this.Rows[index]));
                }
            }
            
            public event scenario_parameterRowChangeEventHandler scenario_parameterRowChanging;
            
            public event scenario_parameterRowChangeEventHandler scenario_parameterRowChanged;
            
            public event scenario_parameterRowChangeEventHandler scenario_parameterRowDeleting;
            
            public event scenario_parameterRowChangeEventHandler scenario_parameterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addscenario_parameterRow(scenario_parameterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_parameterRow Addscenario_parameterRow(Model_infoRow parentModel_infoRowByModel_info_scenario_parameter, model_parameterRow parentmodel_parameterRowBymodel_parameter_scenario_parameter, double aValue, string expression, simulationRow parentsimulationRowBySimulationParameter) {
                scenario_parameterRow rowscenario_parameterRow = ((scenario_parameterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        aValue,
                        expression,
                        null};
                if ((parentModel_infoRowByModel_info_scenario_parameter != null)) {
                    columnValuesArray[0] = parentModel_infoRowByModel_info_scenario_parameter[0];
                }
                if ((parentmodel_parameterRowBymodel_parameter_scenario_parameter != null)) {
                    columnValuesArray[1] = parentmodel_parameterRowBymodel_parameter_scenario_parameter[1];
                }
                if ((parentsimulationRowBySimulationParameter != null)) {
                    columnValuesArray[4] = parentsimulationRowBySimulationParameter[0];
                }
                rowscenario_parameterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowscenario_parameterRow);
                return rowscenario_parameterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                scenario_parameterDataTable cln = ((scenario_parameterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new scenario_parameterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmodel_id = base.Columns["model_id"];
                this.columnparam_id = base.Columns["param_id"];
                this.columnaValue = base.Columns["aValue"];
                this.columnexpression = base.Columns["expression"];
                this.columnsim_id = base.Columns["sim_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnparam_id = new global::System.Data.DataColumn("param_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparam_id);
                this.columnaValue = new global::System.Data.DataColumn("aValue", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaValue);
                this.columnexpression = new global::System.Data.DataColumn("expression", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexpression);
                this.columnsim_id = new global::System.Data.DataColumn("sim_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsim_id);
                this.columnmodel_id.AllowDBNull = false;
                this.columnparam_id.AllowDBNull = false;
                this.columnaValue.AllowDBNull = false;
                this.columnexpression.MaxLength = 200;
                this.columnsim_id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_parameterRow Newscenario_parameterRow() {
                return ((scenario_parameterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new scenario_parameterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(scenario_parameterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.scenario_parameterRowChanged != null)) {
                    this.scenario_parameterRowChanged(this, new scenario_parameterRowChangeEvent(((scenario_parameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.scenario_parameterRowChanging != null)) {
                    this.scenario_parameterRowChanging(this, new scenario_parameterRowChangeEvent(((scenario_parameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.scenario_parameterRowDeleted != null)) {
                    this.scenario_parameterRowDeleted(this, new scenario_parameterRowChangeEvent(((scenario_parameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.scenario_parameterRowDeleting != null)) {
                    this.scenario_parameterRowDeleting(this, new scenario_parameterRowChangeEvent(((scenario_parameterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removescenario_parameterRow(scenario_parameterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "scenario_parameterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class scenario_metricDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columntoken;
            
            private global::System.Data.DataColumn columnsim_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_metricDataTable() {
                this.TableName = "scenario_metric";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal scenario_metricDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected scenario_metricDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tokenColumn {
                get {
                    return this.columntoken;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sim_idColumn {
                get {
                    return this.columnsim_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_metricRow this[int index] {
                get {
                    return ((scenario_metricRow)(this.Rows[index]));
                }
            }
            
            public event scenario_metricRowChangeEventHandler scenario_metricRowChanging;
            
            public event scenario_metricRowChangeEventHandler scenario_metricRowChanged;
            
            public event scenario_metricRowChangeEventHandler scenario_metricRowDeleting;
            
            public event scenario_metricRowChangeEventHandler scenario_metricRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addscenario_metricRow(scenario_metricRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_metricRow Addscenario_metricRow(string token, simulationRow parentsimulationRowBySimulationMetric) {
                scenario_metricRow rowscenario_metricRow = ((scenario_metricRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        token,
                        null};
                if ((parentsimulationRowBySimulationMetric != null)) {
                    columnValuesArray[1] = parentsimulationRowBySimulationMetric[0];
                }
                rowscenario_metricRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowscenario_metricRow);
                return rowscenario_metricRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                scenario_metricDataTable cln = ((scenario_metricDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new scenario_metricDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntoken = base.Columns["token"];
                this.columnsim_id = base.Columns["sim_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntoken = new global::System.Data.DataColumn("token", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntoken);
                this.columnsim_id = new global::System.Data.DataColumn("sim_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsim_id);
                this.columntoken.AllowDBNull = false;
                this.columntoken.MaxLength = 100;
                this.columnsim_id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_metricRow Newscenario_metricRow() {
                return ((scenario_metricRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new scenario_metricRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(scenario_metricRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.scenario_metricRowChanged != null)) {
                    this.scenario_metricRowChanged(this, new scenario_metricRowChangeEvent(((scenario_metricRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.scenario_metricRowChanging != null)) {
                    this.scenario_metricRowChanging(this, new scenario_metricRowChangeEvent(((scenario_metricRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.scenario_metricRowDeleted != null)) {
                    this.scenario_metricRowDeleted(this, new scenario_metricRowChangeEvent(((scenario_metricRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.scenario_metricRowDeleting != null)) {
                    this.scenario_metricRowDeleting(this, new scenario_metricRowChangeEvent(((scenario_metricRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removescenario_metricRow(scenario_metricRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "scenario_metricDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class scenario_simseedDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnseed;
            
            private global::System.Data.DataColumn columnsim_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_simseedDataTable() {
                this.TableName = "scenario_simseed";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal scenario_simseedDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected scenario_simseedDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn seedColumn {
                get {
                    return this.columnseed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sim_idColumn {
                get {
                    return this.columnsim_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_simseedRow this[int index] {
                get {
                    return ((scenario_simseedRow)(this.Rows[index]));
                }
            }
            
            public event scenario_simseedRowChangeEventHandler scenario_simseedRowChanging;
            
            public event scenario_simseedRowChangeEventHandler scenario_simseedRowChanged;
            
            public event scenario_simseedRowChangeEventHandler scenario_simseedRowDeleting;
            
            public event scenario_simseedRowChangeEventHandler scenario_simseedRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addscenario_simseedRow(scenario_simseedRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_simseedRow Addscenario_simseedRow(int seed, simulationRow parentsimulationRowBySimulationSeed) {
                scenario_simseedRow rowscenario_simseedRow = ((scenario_simseedRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        seed,
                        null};
                if ((parentsimulationRowBySimulationSeed != null)) {
                    columnValuesArray[2] = parentsimulationRowBySimulationSeed[0];
                }
                rowscenario_simseedRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowscenario_simseedRow);
                return rowscenario_simseedRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_simseedRow FindByid(int id) {
                return ((scenario_simseedRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                scenario_simseedDataTable cln = ((scenario_simseedDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new scenario_simseedDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnseed = base.Columns["seed"];
                this.columnsim_id = base.Columns["sim_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnseed = new global::System.Data.DataColumn("seed", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseed);
                this.columnsim_id = new global::System.Data.DataColumn("sim_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsim_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -100;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnseed.AllowDBNull = false;
                this.columnsim_id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_simseedRow Newscenario_simseedRow() {
                return ((scenario_simseedRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new scenario_simseedRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(scenario_simseedRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.scenario_simseedRowChanged != null)) {
                    this.scenario_simseedRowChanged(this, new scenario_simseedRowChangeEvent(((scenario_simseedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.scenario_simseedRowChanging != null)) {
                    this.scenario_simseedRowChanging(this, new scenario_simseedRowChangeEvent(((scenario_simseedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.scenario_simseedRowDeleted != null)) {
                    this.scenario_simseedRowDeleted(this, new scenario_simseedRowChangeEvent(((scenario_simseedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.scenario_simseedRowDeleting != null)) {
                    this.scenario_simseedRowDeleting(this, new scenario_simseedRowChangeEvent(((scenario_simseedRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removescenario_simseedRow(scenario_simseedRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "scenario_simseedDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class run_logDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnrun_id;
            
            private global::System.Data.DataColumn columncalendar_date;
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columnsegment_id;
            
            private global::System.Data.DataColumn columnchannel_id;
            
            private global::System.Data.DataColumn columncomp_id;
            
            private global::System.Data.DataColumn columnmessage_id;
            
            private global::System.Data.DataColumn columnmessage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public run_logDataTable() {
                this.TableName = "run_log";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal run_logDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected run_logDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn run_idColumn {
                get {
                    return this.columnrun_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn calendar_dateColumn {
                get {
                    return this.columncalendar_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn segment_idColumn {
                get {
                    return this.columnsegment_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn channel_idColumn {
                get {
                    return this.columnchannel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn comp_idColumn {
                get {
                    return this.columncomp_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn message_idColumn {
                get {
                    return this.columnmessage_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn messageColumn {
                get {
                    return this.columnmessage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public run_logRow this[int index] {
                get {
                    return ((run_logRow)(this.Rows[index]));
                }
            }
            
            public event run_logRowChangeEventHandler run_logRowChanging;
            
            public event run_logRowChangeEventHandler run_logRowChanged;
            
            public event run_logRowChangeEventHandler run_logRowDeleting;
            
            public event run_logRowChangeEventHandler run_logRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addrun_logRow(run_logRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public run_logRow Addrun_logRow(sim_queueRow parentsim_queueRowBySimQueueLog, System.DateTime calendar_date, int product_id, int segment_id, int channel_id, int comp_id, int message_id, string message) {
                run_logRow rowrun_logRow = ((run_logRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        calendar_date,
                        product_id,
                        segment_id,
                        channel_id,
                        comp_id,
                        message_id,
                        message};
                if ((parentsim_queueRowBySimQueueLog != null)) {
                    columnValuesArray[0] = parentsim_queueRowBySimQueueLog[0];
                }
                rowrun_logRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowrun_logRow);
                return rowrun_logRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                run_logDataTable cln = ((run_logDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new run_logDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnrun_id = base.Columns["run_id"];
                this.columncalendar_date = base.Columns["calendar_date"];
                this.columnproduct_id = base.Columns["product_id"];
                this.columnsegment_id = base.Columns["segment_id"];
                this.columnchannel_id = base.Columns["channel_id"];
                this.columncomp_id = base.Columns["comp_id"];
                this.columnmessage_id = base.Columns["message_id"];
                this.columnmessage = base.Columns["message"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnrun_id = new global::System.Data.DataColumn("run_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrun_id);
                this.columncalendar_date = new global::System.Data.DataColumn("calendar_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncalendar_date);
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columnsegment_id = new global::System.Data.DataColumn("segment_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsegment_id);
                this.columnchannel_id = new global::System.Data.DataColumn("channel_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchannel_id);
                this.columncomp_id = new global::System.Data.DataColumn("comp_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncomp_id);
                this.columnmessage_id = new global::System.Data.DataColumn("message_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmessage_id);
                this.columnmessage = new global::System.Data.DataColumn("message", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmessage);
                this.columnrun_id.AllowDBNull = false;
                this.columncalendar_date.AllowDBNull = false;
                this.columncomp_id.AllowDBNull = false;
                this.columnmessage_id.AllowDBNull = false;
                this.columnmessage.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public run_logRow Newrun_logRow() {
                return ((run_logRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new run_logRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(run_logRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.run_logRowChanged != null)) {
                    this.run_logRowChanged(this, new run_logRowChangeEvent(((run_logRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.run_logRowChanging != null)) {
                    this.run_logRowChanging(this, new run_logRowChangeEvent(((run_logRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.run_logRowDeleted != null)) {
                    this.run_logRowDeleted(this, new run_logRowChangeEvent(((run_logRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.run_logRowDeleting != null)) {
                    this.run_logRowDeleting(this, new run_logRowChangeEvent(((run_logRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removerun_logRow(run_logRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "run_logDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class product_channel_sizeDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnproduct_id;
            
            private global::System.Data.DataColumn columnchannel_id;
            
            private global::System.Data.DataColumn columnprod_size;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_channel_sizeDataTable() {
                this.TableName = "product_channel_size";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal product_channel_sizeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected product_channel_sizeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_idColumn {
                get {
                    return this.columnproduct_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn channel_idColumn {
                get {
                    return this.columnchannel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn prod_sizeColumn {
                get {
                    return this.columnprod_size;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_channel_sizeRow this[int index] {
                get {
                    return ((product_channel_sizeRow)(this.Rows[index]));
                }
            }
            
            public event product_channel_sizeRowChangeEventHandler product_channel_sizeRowChanging;
            
            public event product_channel_sizeRowChangeEventHandler product_channel_sizeRowChanged;
            
            public event product_channel_sizeRowChangeEventHandler product_channel_sizeRowDeleting;
            
            public event product_channel_sizeRowChangeEventHandler product_channel_sizeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addproduct_channel_sizeRow(product_channel_sizeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_channel_sizeRow Addproduct_channel_sizeRow(Model_infoRow parentModel_infoRowByFK_Model_info_product_channel_size, productRow parentproductRowByFK_product_product_channel_size, channelRow parentchannelRowByFK_channel_product_channel_size, double prod_size) {
                product_channel_sizeRow rowproduct_channel_sizeRow = ((product_channel_sizeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        prod_size};
                if ((parentModel_infoRowByFK_Model_info_product_channel_size != null)) {
                    columnValuesArray[0] = parentModel_infoRowByFK_Model_info_product_channel_size[0];
                }
                if ((parentproductRowByFK_product_product_channel_size != null)) {
                    columnValuesArray[1] = parentproductRowByFK_product_product_channel_size[1];
                }
                if ((parentchannelRowByFK_channel_product_channel_size != null)) {
                    columnValuesArray[2] = parentchannelRowByFK_channel_product_channel_size[1];
                }
                rowproduct_channel_sizeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowproduct_channel_sizeRow);
                return rowproduct_channel_sizeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                product_channel_sizeDataTable cln = ((product_channel_sizeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new product_channel_sizeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmodel_id = base.Columns["model_id"];
                this.columnproduct_id = base.Columns["product_id"];
                this.columnchannel_id = base.Columns["channel_id"];
                this.columnprod_size = base.Columns["prod_size"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnproduct_id = new global::System.Data.DataColumn("product_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_id);
                this.columnchannel_id = new global::System.Data.DataColumn("channel_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnchannel_id);
                this.columnprod_size = new global::System.Data.DataColumn("prod_size", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprod_size);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_channel_sizeRow Newproduct_channel_sizeRow() {
                return ((product_channel_sizeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new product_channel_sizeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(product_channel_sizeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.product_channel_sizeRowChanged != null)) {
                    this.product_channel_sizeRowChanged(this, new product_channel_sizeRowChangeEvent(((product_channel_sizeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.product_channel_sizeRowChanging != null)) {
                    this.product_channel_sizeRowChanging(this, new product_channel_sizeRowChangeEvent(((product_channel_sizeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.product_channel_sizeRowDeleted != null)) {
                    this.product_channel_sizeRowDeleted(this, new product_channel_sizeRowChangeEvent(((product_channel_sizeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.product_channel_sizeRowDeleting != null)) {
                    this.product_channel_sizeRowDeleting(this, new product_channel_sizeRowChangeEvent(((product_channel_sizeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeproduct_channel_sizeRow(product_channel_sizeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "product_channel_sizeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class db_schema_infoDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnmajor_no;
            
            private global::System.Data.DataColumn columnminor_no;
            
            private global::System.Data.DataColumn columnrelease_no;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public db_schema_infoDataTable() {
                this.TableName = "db_schema_info";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal db_schema_infoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected db_schema_infoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn major_noColumn {
                get {
                    return this.columnmajor_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn minor_noColumn {
                get {
                    return this.columnminor_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn release_noColumn {
                get {
                    return this.columnrelease_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public db_schema_infoRow this[int index] {
                get {
                    return ((db_schema_infoRow)(this.Rows[index]));
                }
            }
            
            public event db_schema_infoRowChangeEventHandler db_schema_infoRowChanging;
            
            public event db_schema_infoRowChangeEventHandler db_schema_infoRowChanged;
            
            public event db_schema_infoRowChangeEventHandler db_schema_infoRowDeleting;
            
            public event db_schema_infoRowChangeEventHandler db_schema_infoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Adddb_schema_infoRow(db_schema_infoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public db_schema_infoRow Adddb_schema_infoRow(int major_no, int minor_no, int release_no) {
                db_schema_infoRow rowdb_schema_infoRow = ((db_schema_infoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        major_no,
                        minor_no,
                        release_no};
                rowdb_schema_infoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdb_schema_infoRow);
                return rowdb_schema_infoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                db_schema_infoDataTable cln = ((db_schema_infoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new db_schema_infoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmajor_no = base.Columns["major_no"];
                this.columnminor_no = base.Columns["minor_no"];
                this.columnrelease_no = base.Columns["release_no"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmajor_no = new global::System.Data.DataColumn("major_no", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmajor_no);
                this.columnminor_no = new global::System.Data.DataColumn("minor_no", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnminor_no);
                this.columnrelease_no = new global::System.Data.DataColumn("release_no", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrelease_no);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public db_schema_infoRow Newdb_schema_infoRow() {
                return ((db_schema_infoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new db_schema_infoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(db_schema_infoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.db_schema_infoRowChanged != null)) {
                    this.db_schema_infoRowChanged(this, new db_schema_infoRowChangeEvent(((db_schema_infoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.db_schema_infoRowChanging != null)) {
                    this.db_schema_infoRowChanging(this, new db_schema_infoRowChangeEvent(((db_schema_infoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.db_schema_infoRowDeleted != null)) {
                    this.db_schema_infoRowDeleted(this, new db_schema_infoRowChangeEvent(((db_schema_infoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.db_schema_infoRowDeleting != null)) {
                    this.db_schema_infoRowDeleting(this, new db_schema_infoRowChangeEvent(((db_schema_infoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removedb_schema_infoRow(db_schema_infoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "db_schema_infoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class simulation_statusDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columntype;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columnstart_date;
            
            private global::System.Data.DataColumn columnend_date;
            
            private global::System.Data.DataColumn columnreset_panel_state;
            
            private global::System.Data.DataColumn columnscenario_id;
            
            private global::System.Data.DataColumn columnsimulation_id;
            
            private global::System.Data.DataColumn columnsim_num;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public simulation_statusDataTable() {
                this.TableName = "simulation_status";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal simulation_statusDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected simulation_statusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn typeColumn {
                get {
                    return this.columntype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_dateColumn {
                get {
                    return this.columnstart_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn end_dateColumn {
                get {
                    return this.columnend_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn reset_panel_stateColumn {
                get {
                    return this.columnreset_panel_state;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn scenario_idColumn {
                get {
                    return this.columnscenario_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn simulation_idColumn {
                get {
                    return this.columnsimulation_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sim_numColumn {
                get {
                    return this.columnsim_num;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public simulation_statusRow this[int index] {
                get {
                    return ((simulation_statusRow)(this.Rows[index]));
                }
            }
            
            public event simulation_statusRowChangeEventHandler simulation_statusRowChanging;
            
            public event simulation_statusRowChangeEventHandler simulation_statusRowChanged;
            
            public event simulation_statusRowChangeEventHandler simulation_statusRowDeleting;
            
            public event simulation_statusRowChangeEventHandler simulation_statusRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addsimulation_statusRow(simulation_statusRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public simulation_statusRow Addsimulation_statusRow(string name, string type, string status, System.DateTime start_date, System.DateTime end_date, bool reset_panel_state, int scenario_id, int simulation_id, int sim_num) {
                simulation_statusRow rowsimulation_statusRow = ((simulation_statusRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        name,
                        type,
                        status,
                        start_date,
                        end_date,
                        reset_panel_state,
                        scenario_id,
                        simulation_id,
                        sim_num};
                rowsimulation_statusRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsimulation_statusRow);
                return rowsimulation_statusRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public simulation_statusRow FindBysimulation_id(int simulation_id) {
                return ((simulation_statusRow)(this.Rows.Find(new object[] {
                            simulation_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                simulation_statusDataTable cln = ((simulation_statusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new simulation_statusDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnname = base.Columns["name"];
                this.columntype = base.Columns["type"];
                this.columnstatus = base.Columns["status"];
                this.columnstart_date = base.Columns["start_date"];
                this.columnend_date = base.Columns["end_date"];
                this.columnreset_panel_state = base.Columns["reset_panel_state"];
                this.columnscenario_id = base.Columns["scenario_id"];
                this.columnsimulation_id = base.Columns["simulation_id"];
                this.columnsim_num = base.Columns["sim_num"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columntype = new global::System.Data.DataColumn("type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columnstart_date = new global::System.Data.DataColumn("start_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_date);
                this.columnend_date = new global::System.Data.DataColumn("end_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_date);
                this.columnreset_panel_state = new global::System.Data.DataColumn("reset_panel_state", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreset_panel_state);
                this.columnscenario_id = new global::System.Data.DataColumn("scenario_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnscenario_id);
                this.columnsimulation_id = new global::System.Data.DataColumn("simulation_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsimulation_id);
                this.columnsim_num = new global::System.Data.DataColumn("sim_num", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsim_num);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnsimulation_id}, true));
                this.columnsimulation_id.AutoIncrementSeed = -100;
                this.columnsimulation_id.AutoIncrementStep = -1;
                this.columnsimulation_id.AllowDBNull = false;
                this.columnsimulation_id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public simulation_statusRow Newsimulation_statusRow() {
                return ((simulation_statusRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new simulation_statusRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(simulation_statusRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.simulation_statusRowChanged != null)) {
                    this.simulation_statusRowChanged(this, new simulation_statusRowChangeEvent(((simulation_statusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.simulation_statusRowChanging != null)) {
                    this.simulation_statusRowChanging(this, new simulation_statusRowChangeEvent(((simulation_statusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.simulation_statusRowDeleted != null)) {
                    this.simulation_statusRowDeleted(this, new simulation_statusRowChangeEvent(((simulation_statusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.simulation_statusRowDeleting != null)) {
                    this.simulation_statusRowDeleting(this, new simulation_statusRowChangeEvent(((simulation_statusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removesimulation_statusRow(simulation_statusRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "simulation_statusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class results_statusDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnrun_name;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columncurrent_status;
            
            private global::System.Data.DataColumn columnrun_time;
            
            private global::System.Data.DataColumn columncurrent_date;
            
            private global::System.Data.DataColumn columnscenario_id;
            
            private global::System.Data.DataColumn columnsimulation_id;
            
            private global::System.Data.DataColumn columnrun_id;
            
            private global::System.Data.DataColumn columnelapsed_time;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public results_statusDataTable() {
                this.TableName = "results_status";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal results_statusDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected results_statusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn run_nameColumn {
                get {
                    return this.columnrun_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn current_statusColumn {
                get {
                    return this.columncurrent_status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn run_timeColumn {
                get {
                    return this.columnrun_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn current_dateColumn {
                get {
                    return this.columncurrent_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn scenario_idColumn {
                get {
                    return this.columnscenario_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn simulation_idColumn {
                get {
                    return this.columnsimulation_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn run_idColumn {
                get {
                    return this.columnrun_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn elapsed_timeColumn {
                get {
                    return this.columnelapsed_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public results_statusRow this[int index] {
                get {
                    return ((results_statusRow)(this.Rows[index]));
                }
            }
            
            public event results_statusRowChangeEventHandler results_statusRowChanging;
            
            public event results_statusRowChangeEventHandler results_statusRowChanged;
            
            public event results_statusRowChangeEventHandler results_statusRowDeleting;
            
            public event results_statusRowChangeEventHandler results_statusRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addresults_statusRow(results_statusRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public results_statusRow Addresults_statusRow(string name, string run_name, string status, string current_status, System.DateTime run_time, System.DateTime current_date, int scenario_id, int simulation_id, int run_id, int elapsed_time) {
                results_statusRow rowresults_statusRow = ((results_statusRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        name,
                        run_name,
                        status,
                        current_status,
                        run_time,
                        current_date,
                        scenario_id,
                        simulation_id,
                        run_id,
                        elapsed_time};
                rowresults_statusRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowresults_statusRow);
                return rowresults_statusRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public results_statusRow FindByrun_id(int run_id) {
                return ((results_statusRow)(this.Rows.Find(new object[] {
                            run_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                results_statusDataTable cln = ((results_statusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new results_statusDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnname = base.Columns["name"];
                this.columnrun_name = base.Columns["run_name"];
                this.columnstatus = base.Columns["status"];
                this.columncurrent_status = base.Columns["current_status"];
                this.columnrun_time = base.Columns["run_time"];
                this.columncurrent_date = base.Columns["current_date"];
                this.columnscenario_id = base.Columns["scenario_id"];
                this.columnsimulation_id = base.Columns["simulation_id"];
                this.columnrun_id = base.Columns["run_id"];
                this.columnelapsed_time = base.Columns["elapsed_time"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnrun_name = new global::System.Data.DataColumn("run_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrun_name);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columncurrent_status = new global::System.Data.DataColumn("current_status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncurrent_status);
                this.columnrun_time = new global::System.Data.DataColumn("run_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrun_time);
                this.columncurrent_date = new global::System.Data.DataColumn("current_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncurrent_date);
                this.columnscenario_id = new global::System.Data.DataColumn("scenario_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnscenario_id);
                this.columnsimulation_id = new global::System.Data.DataColumn("simulation_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsimulation_id);
                this.columnrun_id = new global::System.Data.DataColumn("run_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrun_id);
                this.columnelapsed_time = new global::System.Data.DataColumn("elapsed_time", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnelapsed_time);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnrun_id}, true));
                this.columnrun_id.AutoIncrementSeed = -100;
                this.columnrun_id.AutoIncrementStep = -1;
                this.columnrun_id.AllowDBNull = false;
                this.columnrun_id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public results_statusRow Newresults_statusRow() {
                return ((results_statusRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new results_statusRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(results_statusRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.results_statusRowChanged != null)) {
                    this.results_statusRowChanged(this, new results_statusRowChangeEvent(((results_statusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.results_statusRowChanging != null)) {
                    this.results_statusRowChanging(this, new results_statusRowChangeEvent(((results_statusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.results_statusRowDeleted != null)) {
                    this.results_statusRowDeleted(this, new results_statusRowChangeEvent(((results_statusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.results_statusRowDeleting != null)) {
                    this.results_statusRowDeleting(this, new results_statusRowChangeEvent(((results_statusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeresults_statusRow(results_statusRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "results_statusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class pack_sizeDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnname;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pack_sizeDataTable() {
                this.TableName = "pack_size";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal pack_sizeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected pack_sizeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pack_sizeRow this[int index] {
                get {
                    return ((pack_sizeRow)(this.Rows[index]));
                }
            }
            
            public event pack_sizeRowChangeEventHandler pack_sizeRowChanging;
            
            public event pack_sizeRowChangeEventHandler pack_sizeRowChanged;
            
            public event pack_sizeRowChangeEventHandler pack_sizeRowDeleting;
            
            public event pack_sizeRowChangeEventHandler pack_sizeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addpack_sizeRow(pack_sizeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pack_sizeRow Addpack_sizeRow(Model_infoRow parentModel_infoRowByFK_Model_info_pack_size, string name) {
                pack_sizeRow rowpack_sizeRow = ((pack_sizeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        name};
                if ((parentModel_infoRowByFK_Model_info_pack_size != null)) {
                    columnValuesArray[1] = parentModel_infoRowByFK_Model_info_pack_size[0];
                }
                rowpack_sizeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowpack_sizeRow);
                return rowpack_sizeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pack_sizeRow FindByid(int id) {
                return ((pack_sizeRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                pack_sizeDataTable cln = ((pack_sizeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new pack_sizeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnmodel_id = base.Columns["model_id"];
                this.columnname = base.Columns["name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -100;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnmodel_id.AllowDBNull = false;
                this.columnname.AllowDBNull = false;
                this.columnname.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pack_sizeRow Newpack_sizeRow() {
                return ((pack_sizeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new pack_sizeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(pack_sizeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.pack_sizeRowChanged != null)) {
                    this.pack_sizeRowChanged(this, new pack_sizeRowChangeEvent(((pack_sizeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.pack_sizeRowChanging != null)) {
                    this.pack_sizeRowChanging(this, new pack_sizeRowChangeEvent(((pack_sizeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.pack_sizeRowDeleted != null)) {
                    this.pack_sizeRowDeleted(this, new pack_sizeRowChangeEvent(((pack_sizeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.pack_sizeRowDeleting != null)) {
                    this.pack_sizeRowDeleting(this, new pack_sizeRowChangeEvent(((pack_sizeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removepack_sizeRow(pack_sizeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "pack_sizeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class price_typeDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnmodel_id;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnrelative;
            
            private global::System.Data.DataColumn columnawareness;
            
            private global::System.Data.DataColumn columnpersuasion;
            
            private global::System.Data.DataColumn columnBOGN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public price_typeDataTable() {
                this.TableName = "price_type";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal price_typeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected price_typeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn relativeColumn {
                get {
                    return this.columnrelative;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn awarenessColumn {
                get {
                    return this.columnawareness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn persuasionColumn {
                get {
                    return this.columnpersuasion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOGNColumn {
                get {
                    return this.columnBOGN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public price_typeRow this[int index] {
                get {
                    return ((price_typeRow)(this.Rows[index]));
                }
            }
            
            public event price_typeRowChangeEventHandler price_typeRowChanging;
            
            public event price_typeRowChangeEventHandler price_typeRowChanged;
            
            public event price_typeRowChangeEventHandler price_typeRowDeleting;
            
            public event price_typeRowChangeEventHandler price_typeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addprice_typeRow(price_typeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public price_typeRow Addprice_typeRow(Model_infoRow parentModel_infoRowByFK_Model_info_price_type, string name, bool relative, double awareness, double persuasion, int BOGN) {
                price_typeRow rowprice_typeRow = ((price_typeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        name,
                        relative,
                        awareness,
                        persuasion,
                        BOGN};
                if ((parentModel_infoRowByFK_Model_info_price_type != null)) {
                    columnValuesArray[1] = parentModel_infoRowByFK_Model_info_price_type[0];
                }
                rowprice_typeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowprice_typeRow);
                return rowprice_typeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public price_typeRow FindByid(int id) {
                return ((price_typeRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                price_typeDataTable cln = ((price_typeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new price_typeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnmodel_id = base.Columns["model_id"];
                this.columnname = base.Columns["name"];
                this.columnrelative = base.Columns["relative"];
                this.columnawareness = base.Columns["awareness"];
                this.columnpersuasion = base.Columns["persuasion"];
                this.columnBOGN = base.Columns["BOGN"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnmodel_id = new global::System.Data.DataColumn("model_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnrelative = new global::System.Data.DataColumn("relative", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrelative);
                this.columnawareness = new global::System.Data.DataColumn("awareness", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnawareness);
                this.columnpersuasion = new global::System.Data.DataColumn("persuasion", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpersuasion);
                this.columnBOGN = new global::System.Data.DataColumn("BOGN", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOGN);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnBOGN.AllowDBNull = false;
                this.columnBOGN.DefaultValue = ((int)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public price_typeRow Newprice_typeRow() {
                return ((price_typeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new price_typeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(price_typeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.price_typeRowChanged != null)) {
                    this.price_typeRowChanged(this, new price_typeRowChangeEvent(((price_typeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.price_typeRowChanging != null)) {
                    this.price_typeRowChanging(this, new price_typeRowChangeEvent(((price_typeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.price_typeRowDeleted != null)) {
                    this.price_typeRowDeleted(this, new price_typeRowChangeEvent(((price_typeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.price_typeRowDeleting != null)) {
                    this.price_typeRowDeleting(this, new price_typeRowChangeEvent(((price_typeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeprice_typeRow(price_typeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "price_typeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class segment_price_utilityDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnsegment_id;
            
            private global::System.Data.DataColumn columnprice_type_id;
            
            private global::System.Data.DataColumn columnutil;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segment_price_utilityDataTable() {
                this.TableName = "segment_price_utility";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal segment_price_utilityDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected segment_price_utilityDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn segment_idColumn {
                get {
                    return this.columnsegment_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn price_type_idColumn {
                get {
                    return this.columnprice_type_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn utilColumn {
                get {
                    return this.columnutil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segment_price_utilityRow this[int index] {
                get {
                    return ((segment_price_utilityRow)(this.Rows[index]));
                }
            }
            
            public event segment_price_utilityRowChangeEventHandler segment_price_utilityRowChanging;
            
            public event segment_price_utilityRowChangeEventHandler segment_price_utilityRowChanged;
            
            public event segment_price_utilityRowChangeEventHandler segment_price_utilityRowDeleting;
            
            public event segment_price_utilityRowChangeEventHandler segment_price_utilityRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addsegment_price_utilityRow(segment_price_utilityRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segment_price_utilityRow Addsegment_price_utilityRow(segmentRow parentsegmentRowByFK_segment_segment_price_utility, price_typeRow parentprice_typeRowByFK_price_type_segment_price_utility, double util) {
                segment_price_utilityRow rowsegment_price_utilityRow = ((segment_price_utilityRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        util};
                if ((parentsegmentRowByFK_segment_segment_price_utility != null)) {
                    columnValuesArray[0] = parentsegmentRowByFK_segment_segment_price_utility[1];
                }
                if ((parentprice_typeRowByFK_price_type_segment_price_utility != null)) {
                    columnValuesArray[1] = parentprice_typeRowByFK_price_type_segment_price_utility[0];
                }
                rowsegment_price_utilityRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsegment_price_utilityRow);
                return rowsegment_price_utilityRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                segment_price_utilityDataTable cln = ((segment_price_utilityDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new segment_price_utilityDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnsegment_id = base.Columns["segment_id"];
                this.columnprice_type_id = base.Columns["price_type_id"];
                this.columnutil = base.Columns["util"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnsegment_id = new global::System.Data.DataColumn("segment_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsegment_id);
                this.columnprice_type_id = new global::System.Data.DataColumn("price_type_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice_type_id);
                this.columnutil = new global::System.Data.DataColumn("util", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnutil);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segment_price_utilityRow Newsegment_price_utilityRow() {
                return ((segment_price_utilityRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new segment_price_utilityRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(segment_price_utilityRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.segment_price_utilityRowChanged != null)) {
                    this.segment_price_utilityRowChanged(this, new segment_price_utilityRowChangeEvent(((segment_price_utilityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.segment_price_utilityRowChanging != null)) {
                    this.segment_price_utilityRowChanging(this, new segment_price_utilityRowChangeEvent(((segment_price_utilityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.segment_price_utilityRowDeleted != null)) {
                    this.segment_price_utilityRowDeleted(this, new segment_price_utilityRowChangeEvent(((segment_price_utilityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.segment_price_utilityRowDeleting != null)) {
                    this.segment_price_utilityRowDeleting(this, new segment_price_utilityRowChangeEvent(((segment_price_utilityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removesegment_price_utilityRow(segment_price_utilityRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MrktSimDBSchema ds = new MrktSimDBSchema();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "segment_price_utilityDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class pack_size_distRow : global::System.Data.DataRow {
            
            private pack_size_distDataTable tablepack_size_dist;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal pack_size_distRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablepack_size_dist = ((pack_size_distDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int pack_size_id {
                get {
                    return ((int)(this[this.tablepack_size_dist.pack_size_idColumn]));
                }
                set {
                    this[this.tablepack_size_dist.pack_size_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int size {
                get {
                    return ((int)(this[this.tablepack_size_dist.sizeColumn]));
                }
                set {
                    this[this.tablepack_size_dist.sizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double dist {
                get {
                    return ((double)(this[this.tablepack_size_dist.distColumn]));
                }
                set {
                    this[this.tablepack_size_dist.distColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pack_sizeRow pack_sizeRow {
                get {
                    return ((pack_sizeRow)(this.GetParentRow(this.Table.ParentRelations["FK_pack_size_dist_pack_size"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_pack_size_dist_pack_size"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class channelRow : global::System.Data.DataRow {
            
            private channelDataTable tablechannel;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal channelRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablechannel = ((channelDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    return ((int)(this[this.tablechannel.model_idColumn]));
                }
                set {
                    this[this.tablechannel.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int channel_id {
                get {
                    return ((int)(this[this.tablechannel.channel_idColumn]));
                }
                set {
                    this[this.tablechannel.channel_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string channel_name {
                get {
                    try {
                        return ((string)(this[this.tablechannel.channel_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'channel_name\' in table \'channel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablechannel.channel_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["Model_infochannel"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Model_infochannel"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ischannel_nameNull() {
                return this.IsNull(this.tablechannel.channel_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setchannel_nameNull() {
                this[this.tablechannel.channel_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_channel_sizeRow[] Getproduct_channel_sizeRows() {
                if ((this.Table.ChildRelations["FK_channel_product_channel_size"] == null)) {
                    return new product_channel_sizeRow[0];
                }
                else {
                    return ((product_channel_sizeRow[])(base.GetChildRows(this.Table.ChildRelations["FK_channel_product_channel_size"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_utilityRow[] Getmarket_utilityRows() {
                if ((this.Table.ChildRelations["channelmarket_utility"] == null)) {
                    return new market_utilityRow[0];
                }
                else {
                    return ((market_utilityRow[])(base.GetChildRows(this.Table.ChildRelations["channelmarket_utility"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public external_dataRow[] Getexternal_dataRows() {
                if ((this.Table.ChildRelations["channelexternal_data"] == null)) {
                    return new external_dataRow[0];
                }
                else {
                    return ((external_dataRow[])(base.GetChildRows(this.Table.ChildRelations["channelexternal_data"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_planRow[] Getmarket_planRows() {
                if ((this.Table.ChildRelations["channelmarket_plan"] == null)) {
                    return new market_planRow[0];
                }
                else {
                    return ((market_planRow[])(base.GetChildRows(this.Table.ChildRelations["channelmarket_plan"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_eventRow[] Getproduct_eventRows() {
                if ((this.Table.ChildRelations["channelproduct_event"] == null)) {
                    return new product_eventRow[0];
                }
                else {
                    return ((product_eventRow[])(base.GetChildRows(this.Table.ChildRelations["channelproduct_event"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mass_mediaRow[] Getmass_mediaRows() {
                if ((this.Table.ChildRelations["channelmass_media"] == null)) {
                    return new mass_mediaRow[0];
                }
                else {
                    return ((mass_mediaRow[])(base.GetChildRows(this.Table.ChildRelations["channelmass_media"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public displayRow[] GetdisplayRows() {
                if ((this.Table.ChildRelations["channeldisplay"] == null)) {
                    return new displayRow[0];
                }
                else {
                    return ((displayRow[])(base.GetChildRows(this.Table.ChildRelations["channeldisplay"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public distributionRow[] GetdistributionRows() {
                if ((this.Table.ChildRelations["channeldistribution"] == null)) {
                    return new distributionRow[0];
                }
                else {
                    return ((distributionRow[])(base.GetChildRows(this.Table.ChildRelations["channeldistribution"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_channelRow[] Getproduct_channelRows() {
                if ((this.Table.ChildRelations["channelproduct_channel"] == null)) {
                    return new product_channelRow[0];
                }
                else {
                    return ((product_channelRow[])(base.GetChildRows(this.Table.ChildRelations["channelproduct_channel"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segment_channelRow[] Getsegment_channelRows() {
                if ((this.Table.ChildRelations["channelsegment_channel"] == null)) {
                    return new segment_channelRow[0];
                }
                else {
                    return ((segment_channelRow[])(base.GetChildRows(this.Table.ChildRelations["channelsegment_channel"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class product_matrixRow : global::System.Data.DataRow {
            
            private product_matrixDataTable tableproduct_matrix;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal product_matrixRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableproduct_matrix = ((product_matrixDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    return ((int)(this[this.tableproduct_matrix.model_idColumn]));
                }
                set {
                    this[this.tableproduct_matrix.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int have_product_id {
                get {
                    return ((int)(this[this.tableproduct_matrix.have_product_idColumn]));
                }
                set {
                    this[this.tableproduct_matrix.have_product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int want_product_id {
                get {
                    return ((int)(this[this.tableproduct_matrix.want_product_idColumn]));
                }
                set {
                    this[this.tableproduct_matrix.want_product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string value {
                get {
                    return ((string)(this[this.tableproduct_matrix.valueColumn]));
                }
                set {
                    this[this.tableproduct_matrix.valueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public productRow productRowByproductproduct_matrix_have {
                get {
                    return ((productRow)(this.GetParentRow(this.Table.ParentRelations["productproduct_matrix_have"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["productproduct_matrix_have"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public productRow productRowByproductproduct_matrix_want {
                get {
                    return ((productRow)(this.GetParentRow(this.Table.ParentRelations["productproduct_matrix_want"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["productproduct_matrix_want"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["Model_infoproduct_matrix"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Model_infoproduct_matrix"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class segmentRow : global::System.Data.DataRow {
            
            private segmentDataTable tablesegment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal segmentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesegment = ((segmentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    return ((int)(this[this.tablesegment.model_idColumn]));
                }
                set {
                    this[this.tablesegment.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int segment_id {
                get {
                    return ((int)(this[this.tablesegment.segment_idColumn]));
                }
                set {
                    this[this.tablesegment.segment_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string segment_model {
                get {
                    try {
                        return ((string)(this[this.tablesegment.segment_modelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'segment_model\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.segment_modelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string segment_name {
                get {
                    try {
                        return ((string)(this[this.tablesegment.segment_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'segment_name\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.segment_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string color {
                get {
                    try {
                        return ((string)(this[this.tablesegment.colorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'color\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.colorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string show_current_share_pie_chart {
                get {
                    try {
                        return ((string)(this[this.tablesegment.show_current_share_pie_chartColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'show_current_share_pie_chart\' in table \'segment\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablesegment.show_current_share_pie_chartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string show_cmulative_share_chart {
                get {
                    try {
                        return ((string)(this[this.tablesegment.show_cmulative_share_chartColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'show_cmulative_share_chart\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.show_cmulative_share_chartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double segment_size {
                get {
                    return ((double)(this[this.tablesegment.segment_sizeColumn]));
                }
                set {
                    this[this.tablesegment.segment_sizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double growth_rate {
                get {
                    try {
                        return ((double)(this[this.tablesegment.growth_rateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'growth_rate\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.growth_rateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string growth_rate_people_percent {
                get {
                    try {
                        return ((string)(this[this.tablesegment.growth_rate_people_percentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'growth_rate_people_percent\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.growth_rate_people_percentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string growth_rate_month_year {
                get {
                    try {
                        return ((string)(this[this.tablesegment.growth_rate_month_yearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'growth_rate_month_year\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.growth_rate_month_yearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string compress_population {
                get {
                    try {
                        return ((string)(this[this.tablesegment.compress_populationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'compress_population\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.compress_populationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int variability {
                get {
                    try {
                        return ((int)(this[this.tablesegment.variabilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'variability\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.variabilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double price_disutility {
                get {
                    try {
                        return ((double)(this[this.tablesegment.price_disutilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'price_disutility\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.price_disutilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double attribute_sensitivity {
                get {
                    try {
                        return ((double)(this[this.tablesegment.attribute_sensitivityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attribute_sensitivity\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.attribute_sensitivityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double persuasion_scaling {
                get {
                    try {
                        return ((double)(this[this.tablesegment.persuasion_scalingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'persuasion_scaling\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.persuasion_scalingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double display_utility {
                get {
                    try {
                        return ((double)(this[this.tablesegment.display_utilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'display_utility\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.display_utilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double display_utility_scaling_factor {
                get {
                    try {
                        return ((double)(this[this.tablesegment.display_utility_scaling_factorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'display_utility_scaling_factor\' in table \'segment\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablesegment.display_utility_scaling_factorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double max_display_hits_per_trip {
                get {
                    try {
                        return ((double)(this[this.tablesegment.max_display_hits_per_tripColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'max_display_hits_per_trip\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.max_display_hits_per_tripColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double inertia {
                get {
                    try {
                        return ((double)(this[this.tablesegment.inertiaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'inertia\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.inertiaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string repurchase {
                get {
                    try {
                        return ((string)(this[this.tablesegment.repurchaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'repurchase\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.repurchaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string repurchase_model {
                get {
                    try {
                        return ((string)(this[this.tablesegment.repurchase_modelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'repurchase_model\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.repurchase_modelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double gamma_location_parameter_a {
                get {
                    try {
                        return ((double)(this[this.tablesegment.gamma_location_parameter_aColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gamma_location_parameter_a\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.gamma_location_parameter_aColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double gamma_shape_parameter_k {
                get {
                    try {
                        return ((double)(this[this.tablesegment.gamma_shape_parameter_kColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gamma_shape_parameter_k\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.gamma_shape_parameter_kColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double repurchase_period_frequency {
                get {
                    try {
                        return ((double)(this[this.tablesegment.repurchase_period_frequencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'repurchase_period_frequency\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.repurchase_period_frequencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double repurchase_frequency_variation {
                get {
                    try {
                        return ((double)(this[this.tablesegment.repurchase_frequency_variationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'repurchase_frequency_variation\' in table \'segment\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablesegment.repurchase_frequency_variationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string repurchase_timescale {
                get {
                    try {
                        return ((string)(this[this.tablesegment.repurchase_timescaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'repurchase_timescale\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.repurchase_timescaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double avg_max_units_purch {
                get {
                    try {
                        return ((double)(this[this.tablesegment.avg_max_units_purchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'avg_max_units_purch\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.avg_max_units_purchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double shopping_trip_interval {
                get {
                    try {
                        return ((double)(this[this.tablesegment.shopping_trip_intervalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'shopping_trip_interval\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.shopping_trip_intervalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int category_penetration {
                get {
                    try {
                        return ((int)(this[this.tablesegment.category_penetrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'category_penetration\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.category_penetrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int category_rejection {
                get {
                    try {
                        return ((int)(this[this.tablesegment.category_rejectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'category_rejection\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.category_rejectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long num_initial_buyers {
                get {
                    try {
                        return ((long)(this[this.tablesegment.num_initial_buyersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'num_initial_buyers\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.num_initial_buyersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double initial_buying_period {
                get {
                    try {
                        return ((double)(this[this.tablesegment.initial_buying_periodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'initial_buying_period\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.initial_buying_periodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string seed_with_repurchasers {
                get {
                    try {
                        return ((string)(this[this.tablesegment.seed_with_repurchasersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'seed_with_repurchasers\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.seed_with_repurchasersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string use_budget {
                get {
                    try {
                        return ((string)(this[this.tablesegment.use_budgetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'use_budget\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.use_budgetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double budget {
                get {
                    try {
                        return ((double)(this[this.tablesegment.budgetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'budget\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.budgetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string budget_period {
                get {
                    try {
                        return ((string)(this[this.tablesegment.budget_periodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'budget_period\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.budget_periodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string save_unspent {
                get {
                    try {
                        return ((string)(this[this.tablesegment.save_unspentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'save_unspent\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.save_unspentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double initial_savings {
                get {
                    try {
                        return ((double)(this[this.tablesegment.initial_savingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'initial_savings\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.initial_savingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string social_network_model {
                get {
                    try {
                        return ((string)(this[this.tablesegment.social_network_modelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'social_network_model\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.social_network_modelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double num_close_contacts {
                get {
                    try {
                        return ((double)(this[this.tablesegment.num_close_contactsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'num_close_contacts\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.num_close_contactsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double prob_talking_close_contact_pre {
                get {
                    try {
                        return ((double)(this[this.tablesegment.prob_talking_close_contact_preColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'prob_talking_close_contact_pre\' in table \'segment\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablesegment.prob_talking_close_contact_preColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double prob_talking_close_contact_post {
                get {
                    try {
                        return ((double)(this[this.tablesegment.prob_talking_close_contact_postColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'prob_talking_close_contact_post\' in table \'segment\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablesegment.prob_talking_close_contact_postColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string use_local {
                get {
                    try {
                        return ((string)(this[this.tablesegment.use_localColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'use_local\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.use_localColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double num_distant_contacts {
                get {
                    try {
                        return ((double)(this[this.tablesegment.num_distant_contactsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'num_distant_contacts\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.num_distant_contactsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double prob_talk_distant_contact_pre {
                get {
                    try {
                        return ((double)(this[this.tablesegment.prob_talk_distant_contact_preColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'prob_talk_distant_contact_pre\' in table \'segment\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablesegment.prob_talk_distant_contact_preColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double prob_talk_distant_contact_post {
                get {
                    try {
                        return ((double)(this[this.tablesegment.prob_talk_distant_contact_postColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'prob_talk_distant_contact_post\' in table \'segment\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablesegment.prob_talk_distant_contact_postColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double awareness_weight_personal_message {
                get {
                    try {
                        return ((double)(this[this.tablesegment.awareness_weight_personal_messageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'awareness_weight_personal_message\' in table \'segment\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablesegment.awareness_weight_personal_messageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double pre_persuasion_prob {
                get {
                    try {
                        return ((double)(this[this.tablesegment.pre_persuasion_probColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pre_persuasion_prob\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.pre_persuasion_probColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double post_persuasion_prob {
                get {
                    try {
                        return ((double)(this[this.tablesegment.post_persuasion_probColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'post_persuasion_prob\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.post_persuasion_probColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double units_desired_trigger {
                get {
                    try {
                        return ((double)(this[this.tablesegment.units_desired_triggerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'units_desired_trigger\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.units_desired_triggerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string awareness_model {
                get {
                    try {
                        return ((string)(this[this.tablesegment.awareness_modelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'awareness_model\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.awareness_modelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double awareness_threshold {
                get {
                    try {
                        return ((double)(this[this.tablesegment.awareness_thresholdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'awareness_threshold\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.awareness_thresholdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double awareness_decay_rate_pre {
                get {
                    try {
                        return ((double)(this[this.tablesegment.awareness_decay_rate_preColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'awareness_decay_rate_pre\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.awareness_decay_rate_preColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double awareness_decay_rate_post {
                get {
                    try {
                        return ((double)(this[this.tablesegment.awareness_decay_rate_postColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'awareness_decay_rate_post\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.awareness_decay_rate_postColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double persuasion_decay_rate_pre {
                get {
                    try {
                        return ((double)(this[this.tablesegment.persuasion_decay_rate_preColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'persuasion_decay_rate_pre\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.persuasion_decay_rate_preColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double persuasion_decay_rate_post {
                get {
                    try {
                        return ((double)(this[this.tablesegment.persuasion_decay_rate_postColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'persuasion_decay_rate_post\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.persuasion_decay_rate_postColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string persuasion_decay_method {
                get {
                    try {
                        return ((string)(this[this.tablesegment.persuasion_decay_methodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'persuasion_decay_method\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.persuasion_decay_methodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_choice_model {
                get {
                    try {
                        return ((string)(this[this.tablesegment.product_choice_modelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_choice_model\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.product_choice_modelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string persuasion_score {
                get {
                    try {
                        return ((string)(this[this.tablesegment.persuasion_scoreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'persuasion_score\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.persuasion_scoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string persuasion_value_computation {
                get {
                    try {
                        return ((string)(this[this.tablesegment.persuasion_value_computationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'persuasion_value_computation\' in table \'segment\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablesegment.persuasion_value_computationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string persuasion_contribution_overall_score {
                get {
                    try {
                        return ((string)(this[this.tablesegment.persuasion_contribution_overall_scoreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'persuasion_contribution_overall_score\' in table \'segment\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.persuasion_contribution_overall_scoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string utility_score {
                get {
                    try {
                        return ((string)(this[this.tablesegment.utility_scoreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'utility_score\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.utility_scoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string combination_part_utilities {
                get {
                    try {
                        return ((string)(this[this.tablesegment.combination_part_utilitiesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'combination_part_utilities\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.combination_part_utilitiesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string price_contribution_overall_score {
                get {
                    try {
                        return ((string)(this[this.tablesegment.price_contribution_overall_scoreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'price_contribution_overall_score\' in table \'segment\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablesegment.price_contribution_overall_scoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string price_score {
                get {
                    try {
                        return ((string)(this[this.tablesegment.price_scoreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'price_score\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.price_scoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string price_value {
                get {
                    try {
                        return ((string)(this[this.tablesegment.price_valueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'price_value\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.price_valueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double reference_price {
                get {
                    try {
                        return ((double)(this[this.tablesegment.reference_priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'reference_price\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.reference_priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string choice_prob {
                get {
                    try {
                        return ((string)(this[this.tablesegment.choice_probColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'choice_prob\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.choice_probColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string inertia_model {
                get {
                    try {
                        return ((string)(this[this.tablesegment.inertia_modelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'inertia_model\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.inertia_modelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string error_term {
                get {
                    try {
                        return ((string)(this[this.tablesegment.error_termColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'error_term\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.error_termColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int error_term_user_value {
                get {
                    try {
                        return ((int)(this[this.tablesegment.error_term_user_valueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'error_term_user_value\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.error_term_user_valueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double loyalty {
                get {
                    try {
                        return ((double)(this[this.tablesegment.loyaltyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'loyalty\' in table \'segment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment.loyaltyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double min_freq {
                get {
                    return ((double)(this[this.tablesegment.min_freqColumn]));
                }
                set {
                    this[this.tablesegment.min_freqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double max_freq {
                get {
                    return ((double)(this[this.tablesegment.max_freqColumn]));
                }
                set {
                    this[this.tablesegment.max_freqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["Model_infosegment"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Model_infosegment"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issegment_modelNull() {
                return this.IsNull(this.tablesegment.segment_modelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsegment_modelNull() {
                this[this.tablesegment.segment_modelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issegment_nameNull() {
                return this.IsNull(this.tablesegment.segment_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsegment_nameNull() {
                this[this.tablesegment.segment_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscolorNull() {
                return this.IsNull(this.tablesegment.colorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcolorNull() {
                this[this.tablesegment.colorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isshow_current_share_pie_chartNull() {
                return this.IsNull(this.tablesegment.show_current_share_pie_chartColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setshow_current_share_pie_chartNull() {
                this[this.tablesegment.show_current_share_pie_chartColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isshow_cmulative_share_chartNull() {
                return this.IsNull(this.tablesegment.show_cmulative_share_chartColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setshow_cmulative_share_chartNull() {
                this[this.tablesegment.show_cmulative_share_chartColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isgrowth_rateNull() {
                return this.IsNull(this.tablesegment.growth_rateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setgrowth_rateNull() {
                this[this.tablesegment.growth_rateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isgrowth_rate_people_percentNull() {
                return this.IsNull(this.tablesegment.growth_rate_people_percentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setgrowth_rate_people_percentNull() {
                this[this.tablesegment.growth_rate_people_percentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isgrowth_rate_month_yearNull() {
                return this.IsNull(this.tablesegment.growth_rate_month_yearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setgrowth_rate_month_yearNull() {
                this[this.tablesegment.growth_rate_month_yearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscompress_populationNull() {
                return this.IsNull(this.tablesegment.compress_populationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcompress_populationNull() {
                this[this.tablesegment.compress_populationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvariabilityNull() {
                return this.IsNull(this.tablesegment.variabilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvariabilityNull() {
                this[this.tablesegment.variabilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isprice_disutilityNull() {
                return this.IsNull(this.tablesegment.price_disutilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setprice_disutilityNull() {
                this[this.tablesegment.price_disutilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isattribute_sensitivityNull() {
                return this.IsNull(this.tablesegment.attribute_sensitivityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setattribute_sensitivityNull() {
                this[this.tablesegment.attribute_sensitivityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispersuasion_scalingNull() {
                return this.IsNull(this.tablesegment.persuasion_scalingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpersuasion_scalingNull() {
                this[this.tablesegment.persuasion_scalingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdisplay_utilityNull() {
                return this.IsNull(this.tablesegment.display_utilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdisplay_utilityNull() {
                this[this.tablesegment.display_utilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdisplay_utility_scaling_factorNull() {
                return this.IsNull(this.tablesegment.display_utility_scaling_factorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdisplay_utility_scaling_factorNull() {
                this[this.tablesegment.display_utility_scaling_factorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismax_display_hits_per_tripNull() {
                return this.IsNull(this.tablesegment.max_display_hits_per_tripColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmax_display_hits_per_tripNull() {
                this[this.tablesegment.max_display_hits_per_tripColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinertiaNull() {
                return this.IsNull(this.tablesegment.inertiaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinertiaNull() {
                this[this.tablesegment.inertiaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrepurchaseNull() {
                return this.IsNull(this.tablesegment.repurchaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrepurchaseNull() {
                this[this.tablesegment.repurchaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrepurchase_modelNull() {
                return this.IsNull(this.tablesegment.repurchase_modelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrepurchase_modelNull() {
                this[this.tablesegment.repurchase_modelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isgamma_location_parameter_aNull() {
                return this.IsNull(this.tablesegment.gamma_location_parameter_aColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setgamma_location_parameter_aNull() {
                this[this.tablesegment.gamma_location_parameter_aColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isgamma_shape_parameter_kNull() {
                return this.IsNull(this.tablesegment.gamma_shape_parameter_kColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setgamma_shape_parameter_kNull() {
                this[this.tablesegment.gamma_shape_parameter_kColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrepurchase_period_frequencyNull() {
                return this.IsNull(this.tablesegment.repurchase_period_frequencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrepurchase_period_frequencyNull() {
                this[this.tablesegment.repurchase_period_frequencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrepurchase_frequency_variationNull() {
                return this.IsNull(this.tablesegment.repurchase_frequency_variationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrepurchase_frequency_variationNull() {
                this[this.tablesegment.repurchase_frequency_variationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrepurchase_timescaleNull() {
                return this.IsNull(this.tablesegment.repurchase_timescaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrepurchase_timescaleNull() {
                this[this.tablesegment.repurchase_timescaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isavg_max_units_purchNull() {
                return this.IsNull(this.tablesegment.avg_max_units_purchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setavg_max_units_purchNull() {
                this[this.tablesegment.avg_max_units_purchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isshopping_trip_intervalNull() {
                return this.IsNull(this.tablesegment.shopping_trip_intervalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setshopping_trip_intervalNull() {
                this[this.tablesegment.shopping_trip_intervalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscategory_penetrationNull() {
                return this.IsNull(this.tablesegment.category_penetrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcategory_penetrationNull() {
                this[this.tablesegment.category_penetrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscategory_rejectionNull() {
                return this.IsNull(this.tablesegment.category_rejectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcategory_rejectionNull() {
                this[this.tablesegment.category_rejectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isnum_initial_buyersNull() {
                return this.IsNull(this.tablesegment.num_initial_buyersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setnum_initial_buyersNull() {
                this[this.tablesegment.num_initial_buyersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isinitial_buying_periodNull() {
                return this.IsNull(this.tablesegment.initial_buying_periodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setinitial_buying_periodNull() {
                this[this.tablesegment.initial_buying_periodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isseed_with_repurchasersNull() {
                return this.IsNull(this.tablesegment.seed_with_repurchasersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setseed_with_repurchasersNull() {
                this[this.tablesegment.seed_with_repurchasersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuse_budgetNull() {
                return this.IsNull(this.tablesegment.use_budgetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuse_budgetNull() {
                this[this.tablesegment.use_budgetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbudgetNull() {
                return this.IsNull(this.tablesegment.budgetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbudgetNull() {
                this[this.tablesegment.budgetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbudget_periodNull() {
                return this.IsNull(this.tablesegment.budget_periodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbudget_periodNull() {
                this[this.tablesegment.budget_periodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issave_unspentNull() {
                return this.IsNull(this.tablesegment.save_unspentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsave_unspentNull() {
                this[this.tablesegment.save_unspentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isinitial_savingsNull() {
                return this.IsNull(this.tablesegment.initial_savingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setinitial_savingsNull() {
                this[this.tablesegment.initial_savingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issocial_network_modelNull() {
                return this.IsNull(this.tablesegment.social_network_modelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsocial_network_modelNull() {
                this[this.tablesegment.social_network_modelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isnum_close_contactsNull() {
                return this.IsNull(this.tablesegment.num_close_contactsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setnum_close_contactsNull() {
                this[this.tablesegment.num_close_contactsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isprob_talking_close_contact_preNull() {
                return this.IsNull(this.tablesegment.prob_talking_close_contact_preColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setprob_talking_close_contact_preNull() {
                this[this.tablesegment.prob_talking_close_contact_preColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isprob_talking_close_contact_postNull() {
                return this.IsNull(this.tablesegment.prob_talking_close_contact_postColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setprob_talking_close_contact_postNull() {
                this[this.tablesegment.prob_talking_close_contact_postColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuse_localNull() {
                return this.IsNull(this.tablesegment.use_localColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuse_localNull() {
                this[this.tablesegment.use_localColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isnum_distant_contactsNull() {
                return this.IsNull(this.tablesegment.num_distant_contactsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setnum_distant_contactsNull() {
                this[this.tablesegment.num_distant_contactsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isprob_talk_distant_contact_preNull() {
                return this.IsNull(this.tablesegment.prob_talk_distant_contact_preColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setprob_talk_distant_contact_preNull() {
                this[this.tablesegment.prob_talk_distant_contact_preColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isprob_talk_distant_contact_postNull() {
                return this.IsNull(this.tablesegment.prob_talk_distant_contact_postColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setprob_talk_distant_contact_postNull() {
                this[this.tablesegment.prob_talk_distant_contact_postColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isawareness_weight_personal_messageNull() {
                return this.IsNull(this.tablesegment.awareness_weight_personal_messageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setawareness_weight_personal_messageNull() {
                this[this.tablesegment.awareness_weight_personal_messageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispre_persuasion_probNull() {
                return this.IsNull(this.tablesegment.pre_persuasion_probColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpre_persuasion_probNull() {
                this[this.tablesegment.pre_persuasion_probColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispost_persuasion_probNull() {
                return this.IsNull(this.tablesegment.post_persuasion_probColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpost_persuasion_probNull() {
                this[this.tablesegment.post_persuasion_probColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isunits_desired_triggerNull() {
                return this.IsNull(this.tablesegment.units_desired_triggerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setunits_desired_triggerNull() {
                this[this.tablesegment.units_desired_triggerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isawareness_modelNull() {
                return this.IsNull(this.tablesegment.awareness_modelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setawareness_modelNull() {
                this[this.tablesegment.awareness_modelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isawareness_thresholdNull() {
                return this.IsNull(this.tablesegment.awareness_thresholdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setawareness_thresholdNull() {
                this[this.tablesegment.awareness_thresholdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isawareness_decay_rate_preNull() {
                return this.IsNull(this.tablesegment.awareness_decay_rate_preColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setawareness_decay_rate_preNull() {
                this[this.tablesegment.awareness_decay_rate_preColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isawareness_decay_rate_postNull() {
                return this.IsNull(this.tablesegment.awareness_decay_rate_postColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setawareness_decay_rate_postNull() {
                this[this.tablesegment.awareness_decay_rate_postColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispersuasion_decay_rate_preNull() {
                return this.IsNull(this.tablesegment.persuasion_decay_rate_preColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpersuasion_decay_rate_preNull() {
                this[this.tablesegment.persuasion_decay_rate_preColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispersuasion_decay_rate_postNull() {
                return this.IsNull(this.tablesegment.persuasion_decay_rate_postColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpersuasion_decay_rate_postNull() {
                this[this.tablesegment.persuasion_decay_rate_postColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispersuasion_decay_methodNull() {
                return this.IsNull(this.tablesegment.persuasion_decay_methodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpersuasion_decay_methodNull() {
                this[this.tablesegment.persuasion_decay_methodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_choice_modelNull() {
                return this.IsNull(this.tablesegment.product_choice_modelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_choice_modelNull() {
                this[this.tablesegment.product_choice_modelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispersuasion_scoreNull() {
                return this.IsNull(this.tablesegment.persuasion_scoreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpersuasion_scoreNull() {
                this[this.tablesegment.persuasion_scoreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispersuasion_value_computationNull() {
                return this.IsNull(this.tablesegment.persuasion_value_computationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpersuasion_value_computationNull() {
                this[this.tablesegment.persuasion_value_computationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispersuasion_contribution_overall_scoreNull() {
                return this.IsNull(this.tablesegment.persuasion_contribution_overall_scoreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpersuasion_contribution_overall_scoreNull() {
                this[this.tablesegment.persuasion_contribution_overall_scoreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isutility_scoreNull() {
                return this.IsNull(this.tablesegment.utility_scoreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setutility_scoreNull() {
                this[this.tablesegment.utility_scoreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscombination_part_utilitiesNull() {
                return this.IsNull(this.tablesegment.combination_part_utilitiesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcombination_part_utilitiesNull() {
                this[this.tablesegment.combination_part_utilitiesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isprice_contribution_overall_scoreNull() {
                return this.IsNull(this.tablesegment.price_contribution_overall_scoreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setprice_contribution_overall_scoreNull() {
                this[this.tablesegment.price_contribution_overall_scoreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isprice_scoreNull() {
                return this.IsNull(this.tablesegment.price_scoreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setprice_scoreNull() {
                this[this.tablesegment.price_scoreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isprice_valueNull() {
                return this.IsNull(this.tablesegment.price_valueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setprice_valueNull() {
                this[this.tablesegment.price_valueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isreference_priceNull() {
                return this.IsNull(this.tablesegment.reference_priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setreference_priceNull() {
                this[this.tablesegment.reference_priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ischoice_probNull() {
                return this.IsNull(this.tablesegment.choice_probColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setchoice_probNull() {
                this[this.tablesegment.choice_probColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isinertia_modelNull() {
                return this.IsNull(this.tablesegment.inertia_modelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setinertia_modelNull() {
                this[this.tablesegment.inertia_modelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iserror_termNull() {
                return this.IsNull(this.tablesegment.error_termColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Seterror_termNull() {
                this[this.tablesegment.error_termColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iserror_term_user_valueNull() {
                return this.IsNull(this.tablesegment.error_term_user_valueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Seterror_term_user_valueNull() {
                this[this.tablesegment.error_term_user_valueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsloyaltyNull() {
                return this.IsNull(this.tablesegment.loyaltyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetloyaltyNull() {
                this[this.tablesegment.loyaltyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segment_price_utilityRow[] Getsegment_price_utilityRows() {
                if ((this.Table.ChildRelations["FK_segment_segment_price_utility"] == null)) {
                    return new segment_price_utilityRow[0];
                }
                else {
                    return ((segment_price_utilityRow[])(base.GetChildRows(this.Table.ChildRelations["FK_segment_segment_price_utility"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_utilityRow[] Getmarket_utilityRows() {
                if ((this.Table.ChildRelations["segmentmarket_utility"] == null)) {
                    return new market_utilityRow[0];
                }
                else {
                    return ((market_utilityRow[])(base.GetChildRows(this.Table.ChildRelations["segmentmarket_utility"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public external_dataRow[] Getexternal_dataRows() {
                if ((this.Table.ChildRelations["segmentexternal_data"] == null)) {
                    return new external_dataRow[0];
                }
                else {
                    return ((external_dataRow[])(base.GetChildRows(this.Table.ChildRelations["segmentexternal_data"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segment_networkRow[] Getsegment_networkRowsByfromsegmentsegment_network() {
                if ((this.Table.ChildRelations["fromsegmentsegment_network"] == null)) {
                    return new segment_networkRow[0];
                }
                else {
                    return ((segment_networkRow[])(base.GetChildRows(this.Table.ChildRelations["fromsegmentsegment_network"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segment_networkRow[] Getsegment_networkRowsBytosegmentsegment_network() {
                if ((this.Table.ChildRelations["tosegmentsegment_network"] == null)) {
                    return new segment_networkRow[0];
                }
                else {
                    return ((segment_networkRow[])(base.GetChildRows(this.Table.ChildRelations["tosegmentsegment_network"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_planRow[] Getmarket_planRows() {
                if ((this.Table.ChildRelations["segmentmarket_plan"] == null)) {
                    return new market_planRow[0];
                }
                else {
                    return ((market_planRow[])(base.GetChildRows(this.Table.ChildRelations["segmentmarket_plan"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public task_eventRow[] Gettask_eventRows() {
                if ((this.Table.ChildRelations["segmenttask_event"] == null)) {
                    return new task_eventRow[0];
                }
                else {
                    return ((task_eventRow[])(base.GetChildRows(this.Table.ChildRelations["segmenttask_event"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_eventRow[] Getproduct_eventRows() {
                if ((this.Table.ChildRelations["segmentproduct_event"] == null)) {
                    return new product_eventRow[0];
                }
                else {
                    return ((product_eventRow[])(base.GetChildRows(this.Table.ChildRelations["segmentproduct_event"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mass_mediaRow[] Getmass_mediaRows() {
                if ((this.Table.ChildRelations["segmentmass_media"] == null)) {
                    return new mass_mediaRow[0];
                }
                else {
                    return ((mass_mediaRow[])(base.GetChildRows(this.Table.ChildRelations["segmentmass_media"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public consumer_preferenceRow[] Getconsumer_preferenceRows() {
                if ((this.Table.ChildRelations["segmentconsumer_preference"] == null)) {
                    return new consumer_preferenceRow[0];
                }
                else {
                    return ((consumer_preferenceRow[])(base.GetChildRows(this.Table.ChildRelations["segmentconsumer_preference"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public task_rate_factRow[] Gettask_rate_factRows() {
                if ((this.Table.ChildRelations["segmenttask_rate_fact"] == null)) {
                    return new task_rate_factRow[0];
                }
                else {
                    return ((task_rate_factRow[])(base.GetChildRows(this.Table.ChildRelations["segmenttask_rate_fact"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public share_pen_brand_awareRow[] Getshare_pen_brand_awareRows() {
                if ((this.Table.ChildRelations["segmentshare_pen_brand_aware"] == null)) {
                    return new share_pen_brand_awareRow[0];
                }
                else {
                    return ((share_pen_brand_awareRow[])(base.GetChildRows(this.Table.ChildRelations["segmentshare_pen_brand_aware"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segment_channelRow[] Getsegment_channelRows() {
                if ((this.Table.ChildRelations["segmentsegment_channel"] == null)) {
                    return new segment_channelRow[0];
                }
                else {
                    return ((segment_channelRow[])(base.GetChildRows(this.Table.ChildRelations["segmentsegment_channel"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class segment_channelRow : global::System.Data.DataRow {
            
            private segment_channelDataTable tablesegment_channel;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal segment_channelRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesegment_channel = ((segment_channelDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    return ((int)(this[this.tablesegment_channel.model_idColumn]));
                }
                set {
                    this[this.tablesegment_channel.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int segment_id {
                get {
                    return ((int)(this[this.tablesegment_channel.segment_idColumn]));
                }
                set {
                    this[this.tablesegment_channel.segment_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int channel_id {
                get {
                    return ((int)(this[this.tablesegment_channel.channel_idColumn]));
                }
                set {
                    this[this.tablesegment_channel.channel_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string probability_of_choice {
                get {
                    return ((string)(this[this.tablesegment_channel.probability_of_choiceColumn]));
                }
                set {
                    this[this.tablesegment_channel.probability_of_choiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public channelRow channelRow {
                get {
                    return ((channelRow)(this.GetParentRow(this.Table.ParentRelations["channelsegment_channel"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["channelsegment_channel"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segmentRow segmentRow {
                get {
                    return ((segmentRow)(this.GetParentRow(this.Table.ParentRelations["segmentsegment_channel"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["segmentsegment_channel"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["Model_infosegment_channel"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Model_infosegment_channel"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class share_pen_brand_awareRow : global::System.Data.DataRow {
            
            private share_pen_brand_awareDataTable tableshare_pen_brand_aware;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal share_pen_brand_awareRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableshare_pen_brand_aware = ((share_pen_brand_awareDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    return ((int)(this[this.tableshare_pen_brand_aware.model_idColumn]));
                }
                set {
                    this[this.tableshare_pen_brand_aware.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int product_id {
                get {
                    return ((int)(this[this.tableshare_pen_brand_aware.product_idColumn]));
                }
                set {
                    this[this.tableshare_pen_brand_aware.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int segment_id {
                get {
                    return ((int)(this[this.tableshare_pen_brand_aware.segment_idColumn]));
                }
                set {
                    this[this.tableshare_pen_brand_aware.segment_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double initial_share {
                get {
                    try {
                        return ((double)(this[this.tableshare_pen_brand_aware.initial_shareColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'initial_share\' in table \'share_pen_brand_aware\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableshare_pen_brand_aware.initial_shareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double penetration {
                get {
                    try {
                        return ((double)(this[this.tableshare_pen_brand_aware.penetrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'penetration\' in table \'share_pen_brand_aware\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableshare_pen_brand_aware.penetrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double brand_awareness {
                get {
                    try {
                        return ((double)(this[this.tableshare_pen_brand_aware.brand_awarenessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'brand_awareness\' in table \'share_pen_brand_aware\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableshare_pen_brand_aware.brand_awarenessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double persuasion {
                get {
                    try {
                        return ((double)(this[this.tableshare_pen_brand_aware.persuasionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'persuasion\' in table \'share_pen_brand_aware\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableshare_pen_brand_aware.persuasionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segmentRow segmentRow {
                get {
                    return ((segmentRow)(this.GetParentRow(this.Table.ParentRelations["segmentshare_pen_brand_aware"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["segmentshare_pen_brand_aware"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public productRow productRow {
                get {
                    return ((productRow)(this.GetParentRow(this.Table.ParentRelations["productshare_pen_brand_aware"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["productshare_pen_brand_aware"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["Model_infoshare_pen_brand_aware"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Model_infoshare_pen_brand_aware"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isinitial_shareNull() {
                return this.IsNull(this.tableshare_pen_brand_aware.initial_shareColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setinitial_shareNull() {
                this[this.tableshare_pen_brand_aware.initial_shareColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspenetrationNull() {
                return this.IsNull(this.tableshare_pen_brand_aware.penetrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpenetrationNull() {
                this[this.tableshare_pen_brand_aware.penetrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbrand_awarenessNull() {
                return this.IsNull(this.tableshare_pen_brand_aware.brand_awarenessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbrand_awarenessNull() {
                this[this.tableshare_pen_brand_aware.brand_awarenessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspersuasionNull() {
                return this.IsNull(this.tableshare_pen_brand_aware.persuasionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpersuasionNull() {
                this[this.tableshare_pen_brand_aware.persuasionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class task_rate_factRow : global::System.Data.DataRow {
            
            private task_rate_factDataTable tabletask_rate_fact;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal task_rate_factRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletask_rate_fact = ((task_rate_factDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    return ((int)(this[this.tabletask_rate_fact.model_idColumn]));
                }
                set {
                    this[this.tabletask_rate_fact.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int segment_id {
                get {
                    return ((int)(this[this.tabletask_rate_fact.segment_idColumn]));
                }
                set {
                    this[this.tabletask_rate_fact.segment_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int task_id {
                get {
                    return ((int)(this[this.tabletask_rate_fact.task_idColumn]));
                }
                set {
                    this[this.tabletask_rate_fact.task_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime start_date {
                get {
                    return ((global::System.DateTime)(this[this.tabletask_rate_fact.start_dateColumn]));
                }
                set {
                    this[this.tabletask_rate_fact.start_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime end_date {
                get {
                    return ((global::System.DateTime)(this[this.tabletask_rate_fact.end_dateColumn]));
                }
                set {
                    this[this.tabletask_rate_fact.end_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string time_period {
                get {
                    try {
                        return ((string)(this[this.tabletask_rate_fact.time_periodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'time_period\' in table \'task_rate_fact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletask_rate_fact.time_periodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double task_rate {
                get {
                    try {
                        return ((double)(this[this.tabletask_rate_fact.task_rateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'task_rate\' in table \'task_rate_fact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletask_rate_fact.task_rateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taskRow taskRow {
                get {
                    return ((taskRow)(this.GetParentRow(this.Table.ParentRelations["tasktask_rate_fact"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["tasktask_rate_fact"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segmentRow segmentRow {
                get {
                    return ((segmentRow)(this.GetParentRow(this.Table.ParentRelations["segmenttask_rate_fact"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["segmenttask_rate_fact"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["Model_infotask_rate_fact"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Model_infotask_rate_fact"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istime_periodNull() {
                return this.IsNull(this.tabletask_rate_fact.time_periodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settime_periodNull() {
                this[this.tabletask_rate_fact.time_periodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istask_rateNull() {
                return this.IsNull(this.tabletask_rate_fact.task_rateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settask_rateNull() {
                this[this.tabletask_rate_fact.task_rateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class productRow : global::System.Data.DataRow {
            
            private productDataTable tableproduct;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal productRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableproduct = ((productDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    return ((int)(this[this.tableproduct.model_idColumn]));
                }
                set {
                    this[this.tableproduct.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int product_id {
                get {
                    return ((int)(this[this.tableproduct.product_idColumn]));
                }
                set {
                    this[this.tableproduct.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_name {
                get {
                    try {
                        return ((string)(this[this.tableproduct.product_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_name\' in table \'product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct.product_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int brand_id {
                get {
                    return ((int)(this[this.tableproduct.brand_idColumn]));
                }
                set {
                    this[this.tableproduct.brand_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type {
                get {
                    return ((string)(this[this.tableproduct.typeColumn]));
                }
                set {
                    this[this.tableproduct.typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_group {
                get {
                    return ((string)(this[this.tableproduct.product_groupColumn]));
                }
                set {
                    this[this.tableproduct.product_groupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string related_group {
                get {
                    return ((string)(this[this.tableproduct.related_groupColumn]));
                }
                set {
                    this[this.tableproduct.related_groupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string percent_relation {
                get {
                    return ((string)(this[this.tableproduct.percent_relationColumn]));
                }
                set {
                    this[this.tableproduct.percent_relationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double cost {
                get {
                    try {
                        return ((double)(this[this.tableproduct.costColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cost\' in table \'product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct.costColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double initial_dislike_probability {
                get {
                    try {
                        return ((double)(this[this.tableproduct.initial_dislike_probabilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'initial_dislike_probability\' in table \'product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct.initial_dislike_probabilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double repeat_like_probability {
                get {
                    try {
                        return ((double)(this[this.tableproduct.repeat_like_probabilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'repeat_like_probability\' in table \'product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct.repeat_like_probabilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string color {
                get {
                    try {
                        return ((string)(this[this.tableproduct.colorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'color\' in table \'product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct.colorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_name {
                get {
                    try {
                        return ((string)(this[this.tableproduct.company_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'company_name\' in table \'product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct.company_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SKU {
                get {
                    try {
                        return ((string)(this[this.tableproduct.SKUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SKU\' in table \'product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct.SKUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_base_name {
                get {
                    try {
                        return ((string)(this[this.tableproduct.product_base_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_base_name\' in table \'product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct.product_base_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int product_type {
                get {
                    try {
                        return ((int)(this[this.tableproduct.product_typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_type\' in table \'product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct.product_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double base_price {
                get {
                    try {
                        return ((double)(this[this.tableproduct.base_priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'base_price\' in table \'product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct.base_priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double eq_units {
                get {
                    try {
                        return ((double)(this[this.tableproduct.eq_unitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'eq_units\' in table \'product\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct.eq_unitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int pack_size_id {
                get {
                    return ((int)(this[this.tableproduct.pack_size_idColumn]));
                }
                set {
                    this[this.tableproduct.pack_size_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pack_sizeRow pack_sizeRow {
                get {
                    return ((pack_sizeRow)(this.GetParentRow(this.Table.ParentRelations["FK_pack_size_product"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_pack_size_product"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["Model_infoproduct"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Model_infoproduct"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_typeRow product_typeRow {
                get {
                    return ((product_typeRow)(this.GetParentRow(this.Table.ParentRelations["productproduct_type"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["productproduct_type"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_nameNull() {
                return this.IsNull(this.tableproduct.product_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_nameNull() {
                this[this.tableproduct.product_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscostNull() {
                return this.IsNull(this.tableproduct.costColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcostNull() {
                this[this.tableproduct.costColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isinitial_dislike_probabilityNull() {
                return this.IsNull(this.tableproduct.initial_dislike_probabilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setinitial_dislike_probabilityNull() {
                this[this.tableproduct.initial_dislike_probabilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrepeat_like_probabilityNull() {
                return this.IsNull(this.tableproduct.repeat_like_probabilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrepeat_like_probabilityNull() {
                this[this.tableproduct.repeat_like_probabilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscolorNull() {
                return this.IsNull(this.tableproduct.colorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcolorNull() {
                this[this.tableproduct.colorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscompany_nameNull() {
                return this.IsNull(this.tableproduct.company_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcompany_nameNull() {
                this[this.tableproduct.company_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSKUNull() {
                return this.IsNull(this.tableproduct.SKUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSKUNull() {
                this[this.tableproduct.SKUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_base_nameNull() {
                return this.IsNull(this.tableproduct.product_base_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_base_nameNull() {
                this[this.tableproduct.product_base_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_typeNull() {
                return this.IsNull(this.tableproduct.product_typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_typeNull() {
                this[this.tableproduct.product_typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbase_priceNull() {
                return this.IsNull(this.tableproduct.base_priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbase_priceNull() {
                this[this.tableproduct.base_priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iseq_unitsNull() {
                return this.IsNull(this.tableproduct.eq_unitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Seteq_unitsNull() {
                this[this.tableproduct.eq_unitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_channel_sizeRow[] Getproduct_channel_sizeRows() {
                if ((this.Table.ChildRelations["FK_product_product_channel_size"] == null)) {
                    return new product_channel_sizeRow[0];
                }
                else {
                    return ((product_channel_sizeRow[])(base.GetChildRows(this.Table.ChildRelations["FK_product_product_channel_size"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_treeRow[] Getproduct_treeRowsByproductproduct_tree() {
                if ((this.Table.ChildRelations["productproduct_tree"] == null)) {
                    return new product_treeRow[0];
                }
                else {
                    return ((product_treeRow[])(base.GetChildRows(this.Table.ChildRelations["productproduct_tree"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_treeRow[] Getproduct_treeRowsByproductproduct_tree1() {
                if ((this.Table.ChildRelations["productproduct_tree1"] == null)) {
                    return new product_treeRow[0];
                }
                else {
                    return ((product_treeRow[])(base.GetChildRows(this.Table.ChildRelations["productproduct_tree1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_utilityRow[] Getmarket_utilityRows() {
                if ((this.Table.ChildRelations["productmarket_utility"] == null)) {
                    return new market_utilityRow[0];
                }
                else {
                    return ((market_utilityRow[])(base.GetChildRows(this.Table.ChildRelations["productmarket_utility"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public external_dataRow[] Getexternal_dataRows() {
                if ((this.Table.ChildRelations["productexternal_data"] == null)) {
                    return new external_dataRow[0];
                }
                else {
                    return ((external_dataRow[])(base.GetChildRows(this.Table.ChildRelations["productexternal_data"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_planRow[] Getmarket_planRows() {
                if ((this.Table.ChildRelations["productmarket_plan"] == null)) {
                    return new market_planRow[0];
                }
                else {
                    return ((market_planRow[])(base.GetChildRows(this.Table.ChildRelations["productmarket_plan"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_eventRow[] Getproduct_eventRows() {
                if ((this.Table.ChildRelations["productproduct_event"] == null)) {
                    return new product_eventRow[0];
                }
                else {
                    return ((product_eventRow[])(base.GetChildRows(this.Table.ChildRelations["productproduct_event"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mass_mediaRow[] Getmass_mediaRows() {
                if ((this.Table.ChildRelations["productmass_media"] == null)) {
                    return new mass_mediaRow[0];
                }
                else {
                    return ((mass_mediaRow[])(base.GetChildRows(this.Table.ChildRelations["productmass_media"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public displayRow[] GetdisplayRows() {
                if ((this.Table.ChildRelations["productdisplay"] == null)) {
                    return new displayRow[0];
                }
                else {
                    return ((displayRow[])(base.GetChildRows(this.Table.ChildRelations["productdisplay"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public distributionRow[] GetdistributionRows() {
                if ((this.Table.ChildRelations["productdistribution"] == null)) {
                    return new distributionRow[0];
                }
                else {
                    return ((distributionRow[])(base.GetChildRows(this.Table.ChildRelations["productdistribution"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_attribute_valueRow[] Getproduct_attribute_valueRows() {
                if ((this.Table.ChildRelations["productproduct_attribute_value"] == null)) {
                    return new product_attribute_valueRow[0];
                }
                else {
                    return ((product_attribute_valueRow[])(base.GetChildRows(this.Table.ChildRelations["productproduct_attribute_value"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public task_product_factRow[] Gettask_product_factRows() {
                if ((this.Table.ChildRelations["producttask_product_fact"] == null)) {
                    return new task_product_factRow[0];
                }
                else {
                    return ((task_product_factRow[])(base.GetChildRows(this.Table.ChildRelations["producttask_product_fact"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_channelRow[] Getproduct_channelRows() {
                if ((this.Table.ChildRelations["productproduct_channel"] == null)) {
                    return new product_channelRow[0];
                }
                else {
                    return ((product_channelRow[])(base.GetChildRows(this.Table.ChildRelations["productproduct_channel"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public share_pen_brand_awareRow[] Getshare_pen_brand_awareRows() {
                if ((this.Table.ChildRelations["productshare_pen_brand_aware"] == null)) {
                    return new share_pen_brand_awareRow[0];
                }
                else {
                    return ((share_pen_brand_awareRow[])(base.GetChildRows(this.Table.ChildRelations["productshare_pen_brand_aware"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_matrixRow[] Getproduct_matrixRowsByproductproduct_matrix_have() {
                if ((this.Table.ChildRelations["productproduct_matrix_have"] == null)) {
                    return new product_matrixRow[0];
                }
                else {
                    return ((product_matrixRow[])(base.GetChildRows(this.Table.ChildRelations["productproduct_matrix_have"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_matrixRow[] Getproduct_matrixRowsByproductproduct_matrix_want() {
                if ((this.Table.ChildRelations["productproduct_matrix_want"] == null)) {
                    return new product_matrixRow[0];
                }
                else {
                    return ((product_matrixRow[])(base.GetChildRows(this.Table.ChildRelations["productproduct_matrix_want"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class product_channelRow : global::System.Data.DataRow {
            
            private product_channelDataTable tableproduct_channel;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal product_channelRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableproduct_channel = ((product_channelDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    return ((int)(this[this.tableproduct_channel.model_idColumn]));
                }
                set {
                    this[this.tableproduct_channel.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int product_id {
                get {
                    return ((int)(this[this.tableproduct_channel.product_idColumn]));
                }
                set {
                    this[this.tableproduct_channel.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int channel_id {
                get {
                    return ((int)(this[this.tableproduct_channel.channel_idColumn]));
                }
                set {
                    this[this.tableproduct_channel.channel_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double markup {
                get {
                    try {
                        return ((double)(this[this.tableproduct_channel.markupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'markup\' in table \'product_channel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_channel.markupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double price {
                get {
                    try {
                        return ((double)(this[this.tableproduct_channel.priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'price\' in table \'product_channel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_channel.priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double periodic_price {
                get {
                    try {
                        return ((double)(this[this.tableproduct_channel.periodic_priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'periodic_price\' in table \'product_channel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_channel.periodic_priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string how_often {
                get {
                    try {
                        return ((string)(this[this.tableproduct_channel.how_oftenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'how_often\' in table \'product_channel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_channel.how_oftenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double percent_SKU_in_dist {
                get {
                    try {
                        return ((double)(this[this.tableproduct_channel.percent_SKU_in_distColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'percent_SKU_in_dist\' in table \'product_channel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_channel.percent_SKU_in_distColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ptype {
                get {
                    try {
                        return ((string)(this[this.tableproduct_channel.ptypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ptype\' in table \'product_channel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_channel.ptypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime start_date {
                get {
                    return ((global::System.DateTime)(this[this.tableproduct_channel.start_dateColumn]));
                }
                set {
                    this[this.tableproduct_channel.start_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime end_date {
                get {
                    return ((global::System.DateTime)(this[this.tableproduct_channel.end_dateColumn]));
                }
                set {
                    this[this.tableproduct_channel.end_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int record_id {
                get {
                    return ((int)(this[this.tableproduct_channel.record_idColumn]));
                }
                set {
                    this[this.tableproduct_channel.record_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int duration {
                get {
                    try {
                        return ((int)(this[this.tableproduct_channel.durationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'duration\' in table \'product_channel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_channel.durationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int market_plan_id {
                get {
                    try {
                        return ((int)(this[this.tableproduct_channel.market_plan_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'market_plan_id\' in table \'product_channel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_channel.market_plan_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int price_type {
                get {
                    return ((int)(this[this.tableproduct_channel.price_typeColumn]));
                }
                set {
                    this[this.tableproduct_channel.price_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public productRow productRow {
                get {
                    return ((productRow)(this.GetParentRow(this.Table.ParentRelations["productproduct_channel"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["productproduct_channel"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public channelRow channelRow {
                get {
                    return ((channelRow)(this.GetParentRow(this.Table.ParentRelations["channelproduct_channel"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["channelproduct_channel"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["Model_infoproduct_channel"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Model_infoproduct_channel"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_planRow market_planRow {
                get {
                    return ((market_planRow)(this.GetParentRow(this.Table.ParentRelations["market_planproduct_channel"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["market_planproduct_channel"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public price_typeRow price_typeRow {
                get {
                    return ((price_typeRow)(this.GetParentRow(this.Table.ParentRelations["FK_price_type_product_channel"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_price_type_product_channel"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmarkupNull() {
                return this.IsNull(this.tableproduct_channel.markupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmarkupNull() {
                this[this.tableproduct_channel.markupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspriceNull() {
                return this.IsNull(this.tableproduct_channel.priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpriceNull() {
                this[this.tableproduct_channel.priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isperiodic_priceNull() {
                return this.IsNull(this.tableproduct_channel.periodic_priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setperiodic_priceNull() {
                this[this.tableproduct_channel.periodic_priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ishow_oftenNull() {
                return this.IsNull(this.tableproduct_channel.how_oftenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sethow_oftenNull() {
                this[this.tableproduct_channel.how_oftenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispercent_SKU_in_distNull() {
                return this.IsNull(this.tableproduct_channel.percent_SKU_in_distColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpercent_SKU_in_distNull() {
                this[this.tableproduct_channel.percent_SKU_in_distColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsptypeNull() {
                return this.IsNull(this.tableproduct_channel.ptypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetptypeNull() {
                this[this.tableproduct_channel.ptypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdurationNull() {
                return this.IsNull(this.tableproduct_channel.durationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdurationNull() {
                this[this.tableproduct_channel.durationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismarket_plan_idNull() {
                return this.IsNull(this.tableproduct_channel.market_plan_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmarket_plan_idNull() {
                this[this.tableproduct_channel.market_plan_idColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class taskRow : global::System.Data.DataRow {
            
            private taskDataTable tabletask;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal taskRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletask = ((taskDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    return ((int)(this[this.tabletask.model_idColumn]));
                }
                set {
                    this[this.tabletask.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int task_id {
                get {
                    return ((int)(this[this.tabletask.task_idColumn]));
                }
                set {
                    this[this.tabletask.task_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string task_name {
                get {
                    try {
                        return ((string)(this[this.tabletask.task_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'task_name\' in table \'task\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletask.task_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime start_date {
                get {
                    return ((global::System.DateTime)(this[this.tabletask.start_dateColumn]));
                }
                set {
                    this[this.tabletask.start_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime end_date {
                get {
                    return ((global::System.DateTime)(this[this.tabletask.end_dateColumn]));
                }
                set {
                    this[this.tabletask.end_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte suitability_min {
                get {
                    try {
                        return ((byte)(this[this.tabletask.suitability_minColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'suitability_min\' in table \'task\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletask.suitability_minColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte suitability_max {
                get {
                    try {
                        return ((byte)(this[this.tabletask.suitability_maxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'suitability_max\' in table \'task\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletask.suitability_maxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["Model_infotask"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Model_infotask"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istask_nameNull() {
                return this.IsNull(this.tabletask.task_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settask_nameNull() {
                this[this.tabletask.task_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issuitability_minNull() {
                return this.IsNull(this.tabletask.suitability_minColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsuitability_minNull() {
                this[this.tabletask.suitability_minColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issuitability_maxNull() {
                return this.IsNull(this.tabletask.suitability_maxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsuitability_maxNull() {
                this[this.tabletask.suitability_maxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_planRow[] Getmarket_planRows() {
                if ((this.Table.ChildRelations["taskmarket_plan"] == null)) {
                    return new market_planRow[0];
                }
                else {
                    return ((market_planRow[])(base.GetChildRows(this.Table.ChildRelations["taskmarket_plan"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public task_eventRow[] Gettask_eventRows() {
                if ((this.Table.ChildRelations["tasktask_event"] == null)) {
                    return new task_eventRow[0];
                }
                else {
                    return ((task_eventRow[])(base.GetChildRows(this.Table.ChildRelations["tasktask_event"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public task_product_factRow[] Gettask_product_factRows() {
                if ((this.Table.ChildRelations["tasktask_product_fact"] == null)) {
                    return new task_product_factRow[0];
                }
                else {
                    return ((task_product_factRow[])(base.GetChildRows(this.Table.ChildRelations["tasktask_product_fact"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public task_rate_factRow[] Gettask_rate_factRows() {
                if ((this.Table.ChildRelations["tasktask_rate_fact"] == null)) {
                    return new task_rate_factRow[0];
                }
                else {
                    return ((task_rate_factRow[])(base.GetChildRows(this.Table.ChildRelations["tasktask_rate_fact"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class task_product_factRow : global::System.Data.DataRow {
            
            private task_product_factDataTable tabletask_product_fact;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal task_product_factRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletask_product_fact = ((task_product_factDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    return ((int)(this[this.tabletask_product_fact.model_idColumn]));
                }
                set {
                    this[this.tabletask_product_fact.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int product_id {
                get {
                    return ((int)(this[this.tabletask_product_fact.product_idColumn]));
                }
                set {
                    this[this.tabletask_product_fact.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int task_id {
                get {
                    return ((int)(this[this.tabletask_product_fact.task_idColumn]));
                }
                set {
                    this[this.tabletask_product_fact.task_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int pre_use_upsku {
                get {
                    try {
                        return ((int)(this[this.tabletask_product_fact.pre_use_upskuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pre_use_upsku\' in table \'task_product_fact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletask_product_fact.pre_use_upskuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int post_use_upsku {
                get {
                    try {
                        return ((int)(this[this.tabletask_product_fact.post_use_upskuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'post_use_upsku\' in table \'task_product_fact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletask_product_fact.post_use_upskuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte suitability {
                get {
                    try {
                        return ((byte)(this[this.tabletask_product_fact.suitabilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'suitability\' in table \'task_product_fact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletask_product_fact.suitabilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taskRow taskRow {
                get {
                    return ((taskRow)(this.GetParentRow(this.Table.ParentRelations["tasktask_product_fact"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["tasktask_product_fact"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public productRow productRow {
                get {
                    return ((productRow)(this.GetParentRow(this.Table.ParentRelations["producttask_product_fact"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["producttask_product_fact"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["Model_infotask_product_fact"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Model_infotask_product_fact"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispre_use_upskuNull() {
                return this.IsNull(this.tabletask_product_fact.pre_use_upskuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpre_use_upskuNull() {
                this[this.tabletask_product_fact.pre_use_upskuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispost_use_upskuNull() {
                return this.IsNull(this.tabletask_product_fact.post_use_upskuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpost_use_upskuNull() {
                this[this.tabletask_product_fact.post_use_upskuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssuitabilityNull() {
                return this.IsNull(this.tabletask_product_fact.suitabilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsuitabilityNull() {
                this[this.tabletask_product_fact.suitabilityColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class product_attributeRow : global::System.Data.DataRow {
            
            private product_attributeDataTable tableproduct_attribute;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal product_attributeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableproduct_attribute = ((product_attributeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    return ((int)(this[this.tableproduct_attribute.model_idColumn]));
                }
                set {
                    this[this.tableproduct_attribute.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int product_attribute_id {
                get {
                    return ((int)(this[this.tableproduct_attribute.product_attribute_idColumn]));
                }
                set {
                    this[this.tableproduct_attribute.product_attribute_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_attribute_name {
                get {
                    try {
                        return ((string)(this[this.tableproduct_attribute.product_attribute_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_attribute_name\' in table \'product_attribute\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableproduct_attribute.product_attribute_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double utility_max {
                get {
                    try {
                        return ((double)(this[this.tableproduct_attribute.utility_maxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'utility_max\' in table \'product_attribute\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_attribute.utility_maxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double utility_min {
                get {
                    try {
                        return ((double)(this[this.tableproduct_attribute.utility_minColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'utility_min\' in table \'product_attribute\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_attribute.utility_minColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double cust_pref_max {
                get {
                    try {
                        return ((double)(this[this.tableproduct_attribute.cust_pref_maxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cust_pref_max\' in table \'product_attribute\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_attribute.cust_pref_maxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double cust_pref_min {
                get {
                    try {
                        return ((double)(this[this.tableproduct_attribute.cust_pref_minColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cust_pref_min\' in table \'product_attribute\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_attribute.cust_pref_minColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double cust_tau {
                get {
                    try {
                        return ((double)(this[this.tableproduct_attribute.cust_tauColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cust_tau\' in table \'product_attribute\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_attribute.cust_tauColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int type {
                get {
                    return ((int)(this[this.tableproduct_attribute.typeColumn]));
                }
                set {
                    this[this.tableproduct_attribute.typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["Model_infoproduct_attribute"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Model_infoproduct_attribute"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_attribute_nameNull() {
                return this.IsNull(this.tableproduct_attribute.product_attribute_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_attribute_nameNull() {
                this[this.tableproduct_attribute.product_attribute_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isutility_maxNull() {
                return this.IsNull(this.tableproduct_attribute.utility_maxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setutility_maxNull() {
                this[this.tableproduct_attribute.utility_maxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isutility_minNull() {
                return this.IsNull(this.tableproduct_attribute.utility_minColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setutility_minNull() {
                this[this.tableproduct_attribute.utility_minColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscust_pref_maxNull() {
                return this.IsNull(this.tableproduct_attribute.cust_pref_maxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcust_pref_maxNull() {
                this[this.tableproduct_attribute.cust_pref_maxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscust_pref_minNull() {
                return this.IsNull(this.tableproduct_attribute.cust_pref_minColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcust_pref_minNull() {
                this[this.tableproduct_attribute.cust_pref_minColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscust_tauNull() {
                return this.IsNull(this.tableproduct_attribute.cust_tauColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcust_tauNull() {
                this[this.tableproduct_attribute.cust_tauColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public consumer_preferenceRow[] Getconsumer_preferenceRows() {
                if ((this.Table.ChildRelations["product_attributeconsumer_preference"] == null)) {
                    return new consumer_preferenceRow[0];
                }
                else {
                    return ((consumer_preferenceRow[])(base.GetChildRows(this.Table.ChildRelations["product_attributeconsumer_preference"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_attribute_valueRow[] Getproduct_attribute_valueRows() {
                if ((this.Table.ChildRelations["product_attributeproduct_attribute_value"] == null)) {
                    return new product_attribute_valueRow[0];
                }
                else {
                    return ((product_attribute_valueRow[])(base.GetChildRows(this.Table.ChildRelations["product_attributeproduct_attribute_value"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class product_attribute_valueRow : global::System.Data.DataRow {
            
            private product_attribute_valueDataTable tableproduct_attribute_value;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal product_attribute_valueRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableproduct_attribute_value = ((product_attribute_valueDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int record_id {
                get {
                    return ((int)(this[this.tableproduct_attribute_value.record_idColumn]));
                }
                set {
                    this[this.tableproduct_attribute_value.record_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    return ((int)(this[this.tableproduct_attribute_value.model_idColumn]));
                }
                set {
                    this[this.tableproduct_attribute_value.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int product_id {
                get {
                    return ((int)(this[this.tableproduct_attribute_value.product_idColumn]));
                }
                set {
                    this[this.tableproduct_attribute_value.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int product_attribute_id {
                get {
                    return ((int)(this[this.tableproduct_attribute_value.product_attribute_idColumn]));
                }
                set {
                    this[this.tableproduct_attribute_value.product_attribute_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime start_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableproduct_attribute_value.start_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'start_date\' in table \'product_attribute_value\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_attribute_value.start_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double pre_attribute_value {
                get {
                    return ((double)(this[this.tableproduct_attribute_value.pre_attribute_valueColumn]));
                }
                set {
                    this[this.tableproduct_attribute_value.pre_attribute_valueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double post_attribute_value {
                get {
                    return ((double)(this[this.tableproduct_attribute_value.post_attribute_valueColumn]));
                }
                set {
                    this[this.tableproduct_attribute_value.post_attribute_valueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool has_attribute {
                get {
                    try {
                        return ((bool)(this[this.tableproduct_attribute_value.has_attributeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'has_attribute\' in table \'product_attribute_value\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableproduct_attribute_value.has_attributeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_attributeRow product_attributeRow {
                get {
                    return ((product_attributeRow)(this.GetParentRow(this.Table.ParentRelations["product_attributeproduct_attribute_value"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["product_attributeproduct_attribute_value"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public productRow productRow {
                get {
                    return ((productRow)(this.GetParentRow(this.Table.ParentRelations["productproduct_attribute_value"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["productproduct_attribute_value"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["Model_infoproduct_attribute_value"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Model_infoproduct_attribute_value"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstart_dateNull() {
                return this.IsNull(this.tableproduct_attribute_value.start_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstart_dateNull() {
                this[this.tableproduct_attribute_value.start_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ishas_attributeNull() {
                return this.IsNull(this.tableproduct_attribute_value.has_attributeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sethas_attributeNull() {
                this[this.tableproduct_attribute_value.has_attributeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class consumer_preferenceRow : global::System.Data.DataRow {
            
            private consumer_preferenceDataTable tableconsumer_preference;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal consumer_preferenceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableconsumer_preference = ((consumer_preferenceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int record_id {
                get {
                    return ((int)(this[this.tableconsumer_preference.record_idColumn]));
                }
                set {
                    this[this.tableconsumer_preference.record_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    return ((int)(this[this.tableconsumer_preference.model_idColumn]));
                }
                set {
                    this[this.tableconsumer_preference.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int segment_id {
                get {
                    return ((int)(this[this.tableconsumer_preference.segment_idColumn]));
                }
                set {
                    this[this.tableconsumer_preference.segment_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int product_attribute_id {
                get {
                    return ((int)(this[this.tableconsumer_preference.product_attribute_idColumn]));
                }
                set {
                    this[this.tableconsumer_preference.product_attribute_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime start_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableconsumer_preference.start_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'start_date\' in table \'consumer_preference\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableconsumer_preference.start_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double pre_preference_value {
                get {
                    return ((double)(this[this.tableconsumer_preference.pre_preference_valueColumn]));
                }
                set {
                    this[this.tableconsumer_preference.pre_preference_valueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double post_preference_value {
                get {
                    return ((double)(this[this.tableconsumer_preference.post_preference_valueColumn]));
                }
                set {
                    this[this.tableconsumer_preference.post_preference_valueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double price_sensitivity {
                get {
                    try {
                        return ((double)(this[this.tableconsumer_preference.price_sensitivityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'price_sensitivity\' in table \'consumer_preference\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableconsumer_preference.price_sensitivityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_attributeRow product_attributeRow {
                get {
                    return ((product_attributeRow)(this.GetParentRow(this.Table.ParentRelations["product_attributeconsumer_preference"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["product_attributeconsumer_preference"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segmentRow segmentRow {
                get {
                    return ((segmentRow)(this.GetParentRow(this.Table.ParentRelations["segmentconsumer_preference"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["segmentconsumer_preference"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["Model_infoconsumer_preference"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Model_infoconsumer_preference"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstart_dateNull() {
                return this.IsNull(this.tableconsumer_preference.start_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstart_dateNull() {
                this[this.tableconsumer_preference.start_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isprice_sensitivityNull() {
                return this.IsNull(this.tableconsumer_preference.price_sensitivityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setprice_sensitivityNull() {
                this[this.tableconsumer_preference.price_sensitivityColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class distributionRow : global::System.Data.DataRow {
            
            private distributionDataTable tabledistribution;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal distributionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledistribution = ((distributionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int record_id {
                get {
                    return ((int)(this[this.tabledistribution.record_idColumn]));
                }
                set {
                    this[this.tabledistribution.record_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    return ((int)(this[this.tabledistribution.model_idColumn]));
                }
                set {
                    this[this.tabledistribution.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int product_id {
                get {
                    return ((int)(this[this.tabledistribution.product_idColumn]));
                }
                set {
                    this[this.tabledistribution.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int channel_id {
                get {
                    return ((int)(this[this.tabledistribution.channel_idColumn]));
                }
                set {
                    this[this.tabledistribution.channel_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double attr_value_F {
                get {
                    try {
                        return ((double)(this[this.tabledistribution.attr_value_FColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attr_value_F\' in table \'distribution\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledistribution.attr_value_FColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double attr_value_G {
                get {
                    try {
                        return ((double)(this[this.tabledistribution.attr_value_GColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attr_value_G\' in table \'distribution\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledistribution.attr_value_GColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double message_awareness_probability {
                get {
                    try {
                        return ((double)(this[this.tabledistribution.message_awareness_probabilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'message_awareness_probability\' in table \'distribution\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tabledistribution.message_awareness_probabilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double message_persuation_probability {
                get {
                    try {
                        return ((double)(this[this.tabledistribution.message_persuation_probabilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'message_persuation_probability\' in table \'distribution\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tabledistribution.message_persuation_probabilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime start_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledistribution.start_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'start_date\' in table \'distribution\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledistribution.start_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime end_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledistribution.end_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'end_date\' in table \'distribution\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledistribution.end_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int market_plan_id {
                get {
                    try {
                        return ((int)(this[this.tabledistribution.market_plan_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'market_plan_id\' in table \'distribution\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledistribution.market_plan_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["Model_infodistribution"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Model_infodistribution"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public productRow productRow {
                get {
                    return ((productRow)(this.GetParentRow(this.Table.ParentRelations["productdistribution"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["productdistribution"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public channelRow channelRow {
                get {
                    return ((channelRow)(this.GetParentRow(this.Table.ParentRelations["channeldistribution"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["channeldistribution"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_planRow market_planRow {
                get {
                    return ((market_planRow)(this.GetParentRow(this.Table.ParentRelations["market_plandistribution"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["market_plandistribution"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isattr_value_FNull() {
                return this.IsNull(this.tabledistribution.attr_value_FColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setattr_value_FNull() {
                this[this.tabledistribution.attr_value_FColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isattr_value_GNull() {
                return this.IsNull(this.tabledistribution.attr_value_GColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setattr_value_GNull() {
                this[this.tabledistribution.attr_value_GColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismessage_awareness_probabilityNull() {
                return this.IsNull(this.tabledistribution.message_awareness_probabilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmessage_awareness_probabilityNull() {
                this[this.tabledistribution.message_awareness_probabilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismessage_persuation_probabilityNull() {
                return this.IsNull(this.tabledistribution.message_persuation_probabilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmessage_persuation_probabilityNull() {
                this[this.tabledistribution.message_persuation_probabilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstart_dateNull() {
                return this.IsNull(this.tabledistribution.start_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstart_dateNull() {
                this[this.tabledistribution.start_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isend_dateNull() {
                return this.IsNull(this.tabledistribution.end_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setend_dateNull() {
                this[this.tabledistribution.end_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismarket_plan_idNull() {
                return this.IsNull(this.tabledistribution.market_plan_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmarket_plan_idNull() {
                this[this.tabledistribution.market_plan_idColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class displayRow : global::System.Data.DataRow {
            
            private displayDataTable tabledisplay;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal displayRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledisplay = ((displayDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int record_id {
                get {
                    return ((int)(this[this.tabledisplay.record_idColumn]));
                }
                set {
                    this[this.tabledisplay.record_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    return ((int)(this[this.tabledisplay.model_idColumn]));
                }
                set {
                    this[this.tabledisplay.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int product_id {
                get {
                    return ((int)(this[this.tabledisplay.product_idColumn]));
                }
                set {
                    this[this.tabledisplay.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int channel_id {
                get {
                    return ((int)(this[this.tabledisplay.channel_idColumn]));
                }
                set {
                    this[this.tabledisplay.channel_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string media_type {
                get {
                    try {
                        return ((string)(this[this.tabledisplay.media_typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'media_type\' in table \'display\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledisplay.media_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double attr_value_F {
                get {
                    try {
                        return ((double)(this[this.tabledisplay.attr_value_FColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attr_value_F\' in table \'display\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledisplay.attr_value_FColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double message_awareness_probability {
                get {
                    try {
                        return ((double)(this[this.tabledisplay.message_awareness_probabilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'message_awareness_probability\' in table \'display\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledisplay.message_awareness_probabilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double message_persuation_probability {
                get {
                    try {
                        return ((double)(this[this.tabledisplay.message_persuation_probabilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'message_persuation_probability\' in table \'display\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tabledisplay.message_persuation_probabilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime start_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledisplay.start_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'start_date\' in table \'display\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledisplay.start_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime end_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledisplay.end_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'end_date\' in table \'display\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledisplay.end_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int market_plan_id {
                get {
                    try {
                        return ((int)(this[this.tabledisplay.market_plan_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'market_plan_id\' in table \'display\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledisplay.market_plan_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["Model_infodisplay"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Model_infodisplay"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public productRow productRow {
                get {
                    return ((productRow)(this.GetParentRow(this.Table.ParentRelations["productdisplay"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["productdisplay"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public channelRow channelRow {
                get {
                    return ((channelRow)(this.GetParentRow(this.Table.ParentRelations["channeldisplay"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["channeldisplay"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_planRow market_planRow {
                get {
                    return ((market_planRow)(this.GetParentRow(this.Table.ParentRelations["market_plandisplay"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["market_plandisplay"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismedia_typeNull() {
                return this.IsNull(this.tabledisplay.media_typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmedia_typeNull() {
                this[this.tabledisplay.media_typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isattr_value_FNull() {
                return this.IsNull(this.tabledisplay.attr_value_FColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setattr_value_FNull() {
                this[this.tabledisplay.attr_value_FColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismessage_awareness_probabilityNull() {
                return this.IsNull(this.tabledisplay.message_awareness_probabilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmessage_awareness_probabilityNull() {
                this[this.tabledisplay.message_awareness_probabilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismessage_persuation_probabilityNull() {
                return this.IsNull(this.tabledisplay.message_persuation_probabilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmessage_persuation_probabilityNull() {
                this[this.tabledisplay.message_persuation_probabilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstart_dateNull() {
                return this.IsNull(this.tabledisplay.start_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstart_dateNull() {
                this[this.tabledisplay.start_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isend_dateNull() {
                return this.IsNull(this.tabledisplay.end_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setend_dateNull() {
                this[this.tabledisplay.end_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismarket_plan_idNull() {
                return this.IsNull(this.tabledisplay.market_plan_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmarket_plan_idNull() {
                this[this.tabledisplay.market_plan_idColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class mass_mediaRow : global::System.Data.DataRow {
            
            private mass_mediaDataTable tablemass_media;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal mass_mediaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemass_media = ((mass_mediaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int record_id {
                get {
                    return ((int)(this[this.tablemass_media.record_idColumn]));
                }
                set {
                    this[this.tablemass_media.record_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    return ((int)(this[this.tablemass_media.model_idColumn]));
                }
                set {
                    this[this.tablemass_media.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int product_id {
                get {
                    return ((int)(this[this.tablemass_media.product_idColumn]));
                }
                set {
                    this[this.tablemass_media.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int channel_id {
                get {
                    return ((int)(this[this.tablemass_media.channel_idColumn]));
                }
                set {
                    this[this.tablemass_media.channel_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int segment_id {
                get {
                    return ((int)(this[this.tablemass_media.segment_idColumn]));
                }
                set {
                    this[this.tablemass_media.segment_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string media_type {
                get {
                    return ((string)(this[this.tablemass_media.media_typeColumn]));
                }
                set {
                    this[this.tablemass_media.media_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double attr_value_G {
                get {
                    try {
                        return ((double)(this[this.tablemass_media.attr_value_GColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attr_value_G\' in table \'mass_media\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemass_media.attr_value_GColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double attr_value_H {
                get {
                    try {
                        return ((double)(this[this.tablemass_media.attr_value_HColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attr_value_H\' in table \'mass_media\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemass_media.attr_value_HColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double attr_value_I {
                get {
                    try {
                        return ((double)(this[this.tablemass_media.attr_value_IColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attr_value_I\' in table \'mass_media\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemass_media.attr_value_IColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double message_awareness_probability {
                get {
                    try {
                        return ((double)(this[this.tablemass_media.message_awareness_probabilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'message_awareness_probability\' in table \'mass_media\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablemass_media.message_awareness_probabilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double message_persuation_probability {
                get {
                    try {
                        return ((double)(this[this.tablemass_media.message_persuation_probabilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'message_persuation_probability\' in table \'mass_media\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablemass_media.message_persuation_probabilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime start_date {
                get {
                    return ((global::System.DateTime)(this[this.tablemass_media.start_dateColumn]));
                }
                set {
                    this[this.tablemass_media.start_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime end_date {
                get {
                    return ((global::System.DateTime)(this[this.tablemass_media.end_dateColumn]));
                }
                set {
                    this[this.tablemass_media.end_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int market_plan_id {
                get {
                    try {
                        return ((int)(this[this.tablemass_media.market_plan_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'market_plan_id\' in table \'mass_media\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemass_media.market_plan_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["Model_infomass_media"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Model_infomass_media"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public productRow productRow {
                get {
                    return ((productRow)(this.GetParentRow(this.Table.ParentRelations["productmass_media"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["productmass_media"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segmentRow segmentRow {
                get {
                    return ((segmentRow)(this.GetParentRow(this.Table.ParentRelations["segmentmass_media"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["segmentmass_media"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public channelRow channelRow {
                get {
                    return ((channelRow)(this.GetParentRow(this.Table.ParentRelations["channelmass_media"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["channelmass_media"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_planRow market_planRow {
                get {
                    return ((market_planRow)(this.GetParentRow(this.Table.ParentRelations["market_planmass_media"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["market_planmass_media"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isattr_value_GNull() {
                return this.IsNull(this.tablemass_media.attr_value_GColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setattr_value_GNull() {
                this[this.tablemass_media.attr_value_GColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isattr_value_HNull() {
                return this.IsNull(this.tablemass_media.attr_value_HColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setattr_value_HNull() {
                this[this.tablemass_media.attr_value_HColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isattr_value_INull() {
                return this.IsNull(this.tablemass_media.attr_value_IColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setattr_value_INull() {
                this[this.tablemass_media.attr_value_IColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismessage_awareness_probabilityNull() {
                return this.IsNull(this.tablemass_media.message_awareness_probabilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmessage_awareness_probabilityNull() {
                this[this.tablemass_media.message_awareness_probabilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismessage_persuation_probabilityNull() {
                return this.IsNull(this.tablemass_media.message_persuation_probabilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmessage_persuation_probabilityNull() {
                this[this.tablemass_media.message_persuation_probabilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismarket_plan_idNull() {
                return this.IsNull(this.tablemass_media.market_plan_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmarket_plan_idNull() {
                this[this.tablemass_media.market_plan_idColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class product_eventRow : global::System.Data.DataRow {
            
            private product_eventDataTable tableproduct_event;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal product_eventRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableproduct_event = ((product_eventDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int record_id {
                get {
                    return ((int)(this[this.tableproduct_event.record_idColumn]));
                }
                set {
                    this[this.tableproduct_event.record_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    return ((int)(this[this.tableproduct_event.model_idColumn]));
                }
                set {
                    this[this.tableproduct_event.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int segment_id {
                get {
                    return ((int)(this[this.tableproduct_event.segment_idColumn]));
                }
                set {
                    this[this.tableproduct_event.segment_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int channel_id {
                get {
                    return ((int)(this[this.tableproduct_event.channel_idColumn]));
                }
                set {
                    this[this.tableproduct_event.channel_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int product_id {
                get {
                    return ((int)(this[this.tableproduct_event.product_idColumn]));
                }
                set {
                    this[this.tableproduct_event.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double demand_modification {
                get {
                    try {
                        return ((double)(this[this.tableproduct_event.demand_modificationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'demand_modification\' in table \'product_event\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_event.demand_modificationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime start_date {
                get {
                    return ((global::System.DateTime)(this[this.tableproduct_event.start_dateColumn]));
                }
                set {
                    this[this.tableproduct_event.start_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime end_date {
                get {
                    return ((global::System.DateTime)(this[this.tableproduct_event.end_dateColumn]));
                }
                set {
                    this[this.tableproduct_event.end_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int market_plan_id {
                get {
                    try {
                        return ((int)(this[this.tableproduct_event.market_plan_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'market_plan_id\' in table \'product_event\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_event.market_plan_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte type {
                get {
                    try {
                        return ((byte)(this[this.tableproduct_event.typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type\' in table \'product_event\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_event.typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["Model_infoproduct_event"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Model_infoproduct_event"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public productRow productRow {
                get {
                    return ((productRow)(this.GetParentRow(this.Table.ParentRelations["productproduct_event"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["productproduct_event"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segmentRow segmentRow {
                get {
                    return ((segmentRow)(this.GetParentRow(this.Table.ParentRelations["segmentproduct_event"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["segmentproduct_event"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public channelRow channelRow {
                get {
                    return ((channelRow)(this.GetParentRow(this.Table.ParentRelations["channelproduct_event"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["channelproduct_event"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_planRow market_planRow {
                get {
                    return ((market_planRow)(this.GetParentRow(this.Table.ParentRelations["market_planproduct_event"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["market_planproduct_event"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdemand_modificationNull() {
                return this.IsNull(this.tableproduct_event.demand_modificationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdemand_modificationNull() {
                this[this.tableproduct_event.demand_modificationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismarket_plan_idNull() {
                return this.IsNull(this.tableproduct_event.market_plan_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmarket_plan_idNull() {
                this[this.tableproduct_event.market_plan_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstypeNull() {
                return this.IsNull(this.tableproduct_event.typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettypeNull() {
                this[this.tableproduct_event.typeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class task_eventRow : global::System.Data.DataRow {
            
            private task_eventDataTable tabletask_event;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal task_eventRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletask_event = ((task_eventDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int record_id {
                get {
                    return ((int)(this[this.tabletask_event.record_idColumn]));
                }
                set {
                    this[this.tabletask_event.record_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    return ((int)(this[this.tabletask_event.model_idColumn]));
                }
                set {
                    this[this.tabletask_event.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int segment_id {
                get {
                    return ((int)(this[this.tabletask_event.segment_idColumn]));
                }
                set {
                    this[this.tabletask_event.segment_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int task_id {
                get {
                    return ((int)(this[this.tabletask_event.task_idColumn]));
                }
                set {
                    this[this.tabletask_event.task_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double demand_modification {
                get {
                    try {
                        return ((double)(this[this.tabletask_event.demand_modificationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'demand_modification\' in table \'task_event\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletask_event.demand_modificationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime start_date {
                get {
                    return ((global::System.DateTime)(this[this.tabletask_event.start_dateColumn]));
                }
                set {
                    this[this.tabletask_event.start_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime end_date {
                get {
                    return ((global::System.DateTime)(this[this.tabletask_event.end_dateColumn]));
                }
                set {
                    this[this.tabletask_event.end_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int market_plan_id {
                get {
                    try {
                        return ((int)(this[this.tabletask_event.market_plan_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'market_plan_id\' in table \'task_event\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletask_event.market_plan_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["Model_infotask_event"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Model_infotask_event"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segmentRow segmentRow {
                get {
                    return ((segmentRow)(this.GetParentRow(this.Table.ParentRelations["segmenttask_event"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["segmenttask_event"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taskRow taskRow {
                get {
                    return ((taskRow)(this.GetParentRow(this.Table.ParentRelations["tasktask_event"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["tasktask_event"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdemand_modificationNull() {
                return this.IsNull(this.tabletask_event.demand_modificationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdemand_modificationNull() {
                this[this.tabletask_event.demand_modificationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismarket_plan_idNull() {
                return this.IsNull(this.tabletask_event.market_plan_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmarket_plan_idNull() {
                this[this.tabletask_event.market_plan_idColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Model_infoRow : global::System.Data.DataRow {
            
            private Model_infoDataTable tableModel_info;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Model_infoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableModel_info = ((Model_infoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    return ((int)(this[this.tableModel_info.model_idColumn]));
                }
                set {
                    this[this.tableModel_info.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int project_id {
                get {
                    return ((int)(this[this.tableModel_info.project_idColumn]));
                }
                set {
                    this[this.tableModel_info.project_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string model_name {
                get {
                    try {
                        return ((string)(this[this.tableModel_info.model_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'model_name\' in table \'Model_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableModel_info.model_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_type {
                get {
                    return ((int)(this[this.tableModel_info.model_typeColumn]));
                }
                set {
                    this[this.tableModel_info.model_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string descr {
                get {
                    try {
                        return ((string)(this[this.tableModel_info.descrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'descr\' in table \'Model_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableModel_info.descrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool read_only {
                get {
                    return ((bool)(this[this.tableModel_info.read_onlyColumn]));
                }
                set {
                    this[this.tableModel_info.read_onlyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool locked {
                get {
                    return ((bool)(this[this.tableModel_info.lockedColumn]));
                }
                set {
                    this[this.tableModel_info.lockedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableModel_info.createdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created\' in table \'Model_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableModel_info.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableModel_info.modifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'modified\' in table \'Model_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableModel_info.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime start_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableModel_info.start_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'start_date\' in table \'Model_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableModel_info.start_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime end_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableModel_info.end_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'end_date\' in table \'Model_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableModel_info.end_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool task_based {
                get {
                    return ((bool)(this[this.tableModel_info.task_basedColumn]));
                }
                set {
                    this[this.tableModel_info.task_basedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool profit_loss {
                get {
                    return ((bool)(this[this.tableModel_info.profit_lossColumn]));
                }
                set {
                    this[this.tableModel_info.profit_lossColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool product_extensions {
                get {
                    return ((bool)(this[this.tableModel_info.product_extensionsColumn]));
                }
                set {
                    this[this.tableModel_info.product_extensionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool product_dependency {
                get {
                    return ((bool)(this[this.tableModel_info.product_dependencyColumn]));
                }
                set {
                    this[this.tableModel_info.product_dependencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool segment_growth {
                get {
                    return ((bool)(this[this.tableModel_info.segment_growthColumn]));
                }
                set {
                    this[this.tableModel_info.segment_growthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool consumer_budget {
                get {
                    return ((bool)(this[this.tableModel_info.consumer_budgetColumn]));
                }
                set {
                    this[this.tableModel_info.consumer_budgetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool periodic_price {
                get {
                    return ((bool)(this[this.tableModel_info.periodic_priceColumn]));
                }
                set {
                    this[this.tableModel_info.periodic_priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool promoted_price {
                get {
                    return ((bool)(this[this.tableModel_info.promoted_priceColumn]));
                }
                set {
                    this[this.tableModel_info.promoted_priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool distribution {
                get {
                    return ((bool)(this[this.tableModel_info.distributionColumn]));
                }
                set {
                    this[this.tableModel_info.distributionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool display {
                get {
                    return ((bool)(this[this.tableModel_info.displayColumn]));
                }
                set {
                    this[this.tableModel_info.displayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool social_network {
                get {
                    return ((bool)(this[this.tableModel_info.social_networkColumn]));
                }
                set {
                    this[this.tableModel_info.social_networkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool attribute_pre_and_post {
                get {
                    try {
                        return ((bool)(this[this.tableModel_info.attribute_pre_and_postColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attribute_pre_and_post\' in table \'Model_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableModel_info.attribute_pre_and_postColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string app_code {
                get {
                    try {
                        return ((string)(this[this.tableModel_info.app_codeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'app_code\' in table \'Model_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableModel_info.app_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool market_utility {
                get {
                    try {
                        return ((bool)(this[this.tableModel_info.market_utilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'market_utility\' in table \'Model_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableModel_info.market_utilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string checkpoint_file {
                get {
                    try {
                        return ((string)(this[this.tableModel_info.checkpoint_fileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'checkpoint_file\' in table \'Model_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableModel_info.checkpoint_fileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime checkpoint_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableModel_info.checkpoint_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'checkpoint_date\' in table \'Model_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableModel_info.checkpoint_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool checkpoint_valid {
                get {
                    try {
                        return ((bool)(this[this.tableModel_info.checkpoint_validColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'checkpoint_valid\' in table \'Model_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableModel_info.checkpoint_validColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int pop_size {
                get {
                    return ((int)(this[this.tableModel_info.pop_sizeColumn]));
                }
                set {
                    this[this.tableModel_info.pop_sizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double checkpoint_scale_factor {
                get {
                    return ((double)(this[this.tableModel_info.checkpoint_scale_factorColumn]));
                }
                set {
                    this[this.tableModel_info.checkpoint_scale_factorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double season_freq_part {
                get {
                    return ((double)(this[this.tableModel_info.season_freq_partColumn]));
                }
                set {
                    this[this.tableModel_info.season_freq_partColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public projectRow projectRow {
                get {
                    return ((projectRow)(this.GetParentRow(this.Table.ParentRelations["project_Model_info"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["project_Model_info"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismodel_nameNull() {
                return this.IsNull(this.tableModel_info.model_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmodel_nameNull() {
                this[this.tableModel_info.model_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdescrNull() {
                return this.IsNull(this.tableModel_info.descrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdescrNull() {
                this[this.tableModel_info.descrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreatedNull() {
                return this.IsNull(this.tableModel_info.createdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreatedNull() {
                this[this.tableModel_info.createdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodifiedNull() {
                return this.IsNull(this.tableModel_info.modifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodifiedNull() {
                this[this.tableModel_info.modifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstart_dateNull() {
                return this.IsNull(this.tableModel_info.start_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstart_dateNull() {
                this[this.tableModel_info.start_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isend_dateNull() {
                return this.IsNull(this.tableModel_info.end_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setend_dateNull() {
                this[this.tableModel_info.end_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isattribute_pre_and_postNull() {
                return this.IsNull(this.tableModel_info.attribute_pre_and_postColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setattribute_pre_and_postNull() {
                this[this.tableModel_info.attribute_pre_and_postColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isapp_codeNull() {
                return this.IsNull(this.tableModel_info.app_codeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setapp_codeNull() {
                this[this.tableModel_info.app_codeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismarket_utilityNull() {
                return this.IsNull(this.tableModel_info.market_utilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmarket_utilityNull() {
                this[this.tableModel_info.market_utilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ischeckpoint_fileNull() {
                return this.IsNull(this.tableModel_info.checkpoint_fileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcheckpoint_fileNull() {
                this[this.tableModel_info.checkpoint_fileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ischeckpoint_dateNull() {
                return this.IsNull(this.tableModel_info.checkpoint_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcheckpoint_dateNull() {
                this[this.tableModel_info.checkpoint_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ischeckpoint_validNull() {
                return this.IsNull(this.tableModel_info.checkpoint_validColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcheckpoint_validNull() {
                this[this.tableModel_info.checkpoint_validColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public price_typeRow[] Getprice_typeRows() {
                if ((this.Table.ChildRelations["FK_Model_info_price_type"] == null)) {
                    return new price_typeRow[0];
                }
                else {
                    return ((price_typeRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Model_info_price_type"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pack_sizeRow[] Getpack_sizeRows() {
                if ((this.Table.ChildRelations["FK_Model_info_pack_size"] == null)) {
                    return new pack_sizeRow[0];
                }
                else {
                    return ((pack_sizeRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Model_info_pack_size"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_channel_sizeRow[] Getproduct_channel_sizeRows() {
                if ((this.Table.ChildRelations["FK_Model_info_product_channel_size"] == null)) {
                    return new product_channel_sizeRow[0];
                }
                else {
                    return ((product_channel_sizeRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Model_info_product_channel_size"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_parameterRow[] Getscenario_parameterRows() {
                if ((this.Table.ChildRelations["Model_info_scenario_parameter"] == null)) {
                    return new scenario_parameterRow[0];
                }
                else {
                    return ((scenario_parameterRow[])(base.GetChildRows(this.Table.ChildRelations["Model_info_scenario_parameter"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_typeRow[] Getproduct_typeRows() {
                if ((this.Table.ChildRelations["Model_infoproduct_type"] == null)) {
                    return new product_typeRow[0];
                }
                else {
                    return ((product_typeRow[])(base.GetChildRows(this.Table.ChildRelations["Model_infoproduct_type"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_treeRow[] Getproduct_treeRows() {
                if ((this.Table.ChildRelations["Model_infoproduct_tree"] == null)) {
                    return new product_treeRow[0];
                }
                else {
                    return ((product_treeRow[])(base.GetChildRows(this.Table.ChildRelations["Model_infoproduct_tree"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_utilityRow[] Getmarket_utilityRows() {
                if ((this.Table.ChildRelations["Model_infomarket_utility"] == null)) {
                    return new market_utilityRow[0];
                }
                else {
                    return ((market_utilityRow[])(base.GetChildRows(this.Table.ChildRelations["Model_infomarket_utility"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public model_parameterRow[] Getmodel_parameterRows() {
                if ((this.Table.ChildRelations["Model_infomodel_parameter"] == null)) {
                    return new model_parameterRow[0];
                }
                else {
                    return ((model_parameterRow[])(base.GetChildRows(this.Table.ChildRelations["Model_infomodel_parameter"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public external_dataRow[] Getexternal_dataRows() {
                if ((this.Table.ChildRelations["Model_infoexternal_data"] == null)) {
                    return new external_dataRow[0];
                }
                else {
                    return ((external_dataRow[])(base.GetChildRows(this.Table.ChildRelations["Model_infoexternal_data"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segment_networkRow[] Getsegment_networkRows() {
                if ((this.Table.ChildRelations["Model_infosegment_network"] == null)) {
                    return new segment_networkRow[0];
                }
                else {
                    return ((segment_networkRow[])(base.GetChildRows(this.Table.ChildRelations["Model_infosegment_network"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public network_parameterRow[] Getnetwork_parameterRows() {
                if ((this.Table.ChildRelations["Model_infonetwork_parameter"] == null)) {
                    return new network_parameterRow[0];
                }
                else {
                    return ((network_parameterRow[])(base.GetChildRows(this.Table.ChildRelations["Model_infonetwork_parameter"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_market_planRow[] Getscenario_market_planRows() {
                if ((this.Table.ChildRelations["Model_infoscenario_market_plan"] == null)) {
                    return new scenario_market_planRow[0];
                }
                else {
                    return ((scenario_market_planRow[])(base.GetChildRows(this.Table.ChildRelations["Model_infoscenario_market_plan"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenarioRow[] GetscenarioRows() {
                if ((this.Table.ChildRelations["Model_infoscenario"] == null)) {
                    return new scenarioRow[0];
                }
                else {
                    return ((scenarioRow[])(base.GetChildRows(this.Table.ChildRelations["Model_infoscenario"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_plan_treeRow[] Getmarket_plan_treeRows() {
                if ((this.Table.ChildRelations["Model_infomarket_plan_tree"] == null)) {
                    return new market_plan_treeRow[0];
                }
                else {
                    return ((market_plan_treeRow[])(base.GetChildRows(this.Table.ChildRelations["Model_infomarket_plan_tree"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_planRow[] Getmarket_planRows() {
                if ((this.Table.ChildRelations["Model_infomarket_plan"] == null)) {
                    return new market_planRow[0];
                }
                else {
                    return ((market_planRow[])(base.GetChildRows(this.Table.ChildRelations["Model_infomarket_plan"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public task_eventRow[] Gettask_eventRows() {
                if ((this.Table.ChildRelations["Model_infotask_event"] == null)) {
                    return new task_eventRow[0];
                }
                else {
                    return ((task_eventRow[])(base.GetChildRows(this.Table.ChildRelations["Model_infotask_event"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_eventRow[] Getproduct_eventRows() {
                if ((this.Table.ChildRelations["Model_infoproduct_event"] == null)) {
                    return new product_eventRow[0];
                }
                else {
                    return ((product_eventRow[])(base.GetChildRows(this.Table.ChildRelations["Model_infoproduct_event"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mass_mediaRow[] Getmass_mediaRows() {
                if ((this.Table.ChildRelations["Model_infomass_media"] == null)) {
                    return new mass_mediaRow[0];
                }
                else {
                    return ((mass_mediaRow[])(base.GetChildRows(this.Table.ChildRelations["Model_infomass_media"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public displayRow[] GetdisplayRows() {
                if ((this.Table.ChildRelations["Model_infodisplay"] == null)) {
                    return new displayRow[0];
                }
                else {
                    return ((displayRow[])(base.GetChildRows(this.Table.ChildRelations["Model_infodisplay"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public distributionRow[] GetdistributionRows() {
                if ((this.Table.ChildRelations["Model_infodistribution"] == null)) {
                    return new distributionRow[0];
                }
                else {
                    return ((distributionRow[])(base.GetChildRows(this.Table.ChildRelations["Model_infodistribution"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public consumer_preferenceRow[] Getconsumer_preferenceRows() {
                if ((this.Table.ChildRelations["Model_infoconsumer_preference"] == null)) {
                    return new consumer_preferenceRow[0];
                }
                else {
                    return ((consumer_preferenceRow[])(base.GetChildRows(this.Table.ChildRelations["Model_infoconsumer_preference"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_attribute_valueRow[] Getproduct_attribute_valueRows() {
                if ((this.Table.ChildRelations["Model_infoproduct_attribute_value"] == null)) {
                    return new product_attribute_valueRow[0];
                }
                else {
                    return ((product_attribute_valueRow[])(base.GetChildRows(this.Table.ChildRelations["Model_infoproduct_attribute_value"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_attributeRow[] Getproduct_attributeRows() {
                if ((this.Table.ChildRelations["Model_infoproduct_attribute"] == null)) {
                    return new product_attributeRow[0];
                }
                else {
                    return ((product_attributeRow[])(base.GetChildRows(this.Table.ChildRelations["Model_infoproduct_attribute"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public task_product_factRow[] Gettask_product_factRows() {
                if ((this.Table.ChildRelations["Model_infotask_product_fact"] == null)) {
                    return new task_product_factRow[0];
                }
                else {
                    return ((task_product_factRow[])(base.GetChildRows(this.Table.ChildRelations["Model_infotask_product_fact"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taskRow[] GettaskRows() {
                if ((this.Table.ChildRelations["Model_infotask"] == null)) {
                    return new taskRow[0];
                }
                else {
                    return ((taskRow[])(base.GetChildRows(this.Table.ChildRelations["Model_infotask"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_channelRow[] Getproduct_channelRows() {
                if ((this.Table.ChildRelations["Model_infoproduct_channel"] == null)) {
                    return new product_channelRow[0];
                }
                else {
                    return ((product_channelRow[])(base.GetChildRows(this.Table.ChildRelations["Model_infoproduct_channel"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public productRow[] GetproductRows() {
                if ((this.Table.ChildRelations["Model_infoproduct"] == null)) {
                    return new productRow[0];
                }
                else {
                    return ((productRow[])(base.GetChildRows(this.Table.ChildRelations["Model_infoproduct"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public task_rate_factRow[] Gettask_rate_factRows() {
                if ((this.Table.ChildRelations["Model_infotask_rate_fact"] == null)) {
                    return new task_rate_factRow[0];
                }
                else {
                    return ((task_rate_factRow[])(base.GetChildRows(this.Table.ChildRelations["Model_infotask_rate_fact"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public share_pen_brand_awareRow[] Getshare_pen_brand_awareRows() {
                if ((this.Table.ChildRelations["Model_infoshare_pen_brand_aware"] == null)) {
                    return new share_pen_brand_awareRow[0];
                }
                else {
                    return ((share_pen_brand_awareRow[])(base.GetChildRows(this.Table.ChildRelations["Model_infoshare_pen_brand_aware"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segment_channelRow[] Getsegment_channelRows() {
                if ((this.Table.ChildRelations["Model_infosegment_channel"] == null)) {
                    return new segment_channelRow[0];
                }
                else {
                    return ((segment_channelRow[])(base.GetChildRows(this.Table.ChildRelations["Model_infosegment_channel"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segmentRow[] GetsegmentRows() {
                if ((this.Table.ChildRelations["Model_infosegment"] == null)) {
                    return new segmentRow[0];
                }
                else {
                    return ((segmentRow[])(base.GetChildRows(this.Table.ChildRelations["Model_infosegment"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_matrixRow[] Getproduct_matrixRows() {
                if ((this.Table.ChildRelations["Model_infoproduct_matrix"] == null)) {
                    return new product_matrixRow[0];
                }
                else {
                    return ((product_matrixRow[])(base.GetChildRows(this.Table.ChildRelations["Model_infoproduct_matrix"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public channelRow[] GetchannelRows() {
                if ((this.Table.ChildRelations["Model_infochannel"] == null)) {
                    return new channelRow[0];
                }
                else {
                    return ((channelRow[])(base.GetChildRows(this.Table.ChildRelations["Model_infochannel"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class market_planRow : global::System.Data.DataRow {
            
            private market_planDataTable tablemarket_plan;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal market_planRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemarket_plan = ((market_planDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    return ((int)(this[this.tablemarket_plan.model_idColumn]));
                }
                set {
                    this[this.tablemarket_plan.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tablemarket_plan.idColumn]));
                }
                set {
                    this[this.tablemarket_plan.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tablemarket_plan.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'name\' in table \'market_plan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemarket_plan.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string descr {
                get {
                    try {
                        return ((string)(this[this.tablemarket_plan.descrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'descr\' in table \'market_plan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemarket_plan.descrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime start_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablemarket_plan.start_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'start_date\' in table \'market_plan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemarket_plan.start_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime end_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablemarket_plan.end_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'end_date\' in table \'market_plan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemarket_plan.end_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte interval {
                get {
                    return ((byte)(this[this.tablemarket_plan.intervalColumn]));
                }
                set {
                    this[this.tablemarket_plan.intervalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int product_id {
                get {
                    try {
                        return ((int)(this[this.tablemarket_plan.product_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_id\' in table \'market_plan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemarket_plan.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int segment_id {
                get {
                    try {
                        return ((int)(this[this.tablemarket_plan.segment_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'segment_id\' in table \'market_plan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemarket_plan.segment_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int channel_id {
                get {
                    try {
                        return ((int)(this[this.tablemarket_plan.channel_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'channel_id\' in table \'market_plan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemarket_plan.channel_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int task_id {
                get {
                    try {
                        return ((int)(this[this.tablemarket_plan.task_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'task_id\' in table \'market_plan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemarket_plan.task_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte type {
                get {
                    try {
                        return ((byte)(this[this.tablemarket_plan.typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type\' in table \'market_plan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemarket_plan.typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double parm1 {
                get {
                    try {
                        return ((double)(this[this.tablemarket_plan.parm1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'parm1\' in table \'market_plan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemarket_plan.parm1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double parm2 {
                get {
                    try {
                        return ((double)(this[this.tablemarket_plan.parm2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'parm2\' in table \'market_plan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemarket_plan.parm2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double parm3 {
                get {
                    try {
                        return ((double)(this[this.tablemarket_plan.parm3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'parm3\' in table \'market_plan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemarket_plan.parm3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double parm4 {
                get {
                    try {
                        return ((double)(this[this.tablemarket_plan.parm4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'parm4\' in table \'market_plan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemarket_plan.parm4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double parm5 {
                get {
                    try {
                        return ((double)(this[this.tablemarket_plan.parm5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'parm5\' in table \'market_plan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemarket_plan.parm5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double parm6 {
                get {
                    try {
                        return ((double)(this[this.tablemarket_plan.parm6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'parm6\' in table \'market_plan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemarket_plan.parm6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user_name {
                get {
                    try {
                        return ((string)(this[this.tablemarket_plan.user_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user_name\' in table \'market_plan\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemarket_plan.user_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["Model_infomarket_plan"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Model_infomarket_plan"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public productRow productRow {
                get {
                    return ((productRow)(this.GetParentRow(this.Table.ParentRelations["productmarket_plan"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["productmarket_plan"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segmentRow segmentRow {
                get {
                    return ((segmentRow)(this.GetParentRow(this.Table.ParentRelations["segmentmarket_plan"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["segmentmarket_plan"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public channelRow channelRow {
                get {
                    return ((channelRow)(this.GetParentRow(this.Table.ParentRelations["channelmarket_plan"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["channelmarket_plan"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taskRow taskRow {
                get {
                    return ((taskRow)(this.GetParentRow(this.Table.ParentRelations["taskmarket_plan"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["taskmarket_plan"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tablemarket_plan.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tablemarket_plan.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdescrNull() {
                return this.IsNull(this.tablemarket_plan.descrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdescrNull() {
                this[this.tablemarket_plan.descrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstart_dateNull() {
                return this.IsNull(this.tablemarket_plan.start_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstart_dateNull() {
                this[this.tablemarket_plan.start_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isend_dateNull() {
                return this.IsNull(this.tablemarket_plan.end_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setend_dateNull() {
                this[this.tablemarket_plan.end_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_idNull() {
                return this.IsNull(this.tablemarket_plan.product_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_idNull() {
                this[this.tablemarket_plan.product_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issegment_idNull() {
                return this.IsNull(this.tablemarket_plan.segment_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsegment_idNull() {
                this[this.tablemarket_plan.segment_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ischannel_idNull() {
                return this.IsNull(this.tablemarket_plan.channel_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setchannel_idNull() {
                this[this.tablemarket_plan.channel_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istask_idNull() {
                return this.IsNull(this.tablemarket_plan.task_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settask_idNull() {
                this[this.tablemarket_plan.task_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstypeNull() {
                return this.IsNull(this.tablemarket_plan.typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettypeNull() {
                this[this.tablemarket_plan.typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isparm1Null() {
                return this.IsNull(this.tablemarket_plan.parm1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setparm1Null() {
                this[this.tablemarket_plan.parm1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isparm2Null() {
                return this.IsNull(this.tablemarket_plan.parm2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setparm2Null() {
                this[this.tablemarket_plan.parm2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isparm3Null() {
                return this.IsNull(this.tablemarket_plan.parm3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setparm3Null() {
                this[this.tablemarket_plan.parm3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isparm4Null() {
                return this.IsNull(this.tablemarket_plan.parm4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setparm4Null() {
                this[this.tablemarket_plan.parm4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isparm5Null() {
                return this.IsNull(this.tablemarket_plan.parm5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setparm5Null() {
                this[this.tablemarket_plan.parm5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isparm6Null() {
                return this.IsNull(this.tablemarket_plan.parm6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setparm6Null() {
                this[this.tablemarket_plan.parm6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuser_nameNull() {
                return this.IsNull(this.tablemarket_plan.user_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuser_nameNull() {
                this[this.tablemarket_plan.user_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_utilityRow[] Getmarket_utilityRows() {
                if ((this.Table.ChildRelations["market_planmarket_utility"] == null)) {
                    return new market_utilityRow[0];
                }
                else {
                    return ((market_utilityRow[])(base.GetChildRows(this.Table.ChildRelations["market_planmarket_utility"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_market_planRow[] Getscenario_market_planRows() {
                if ((this.Table.ChildRelations["market_planscenario_market_plan"] == null)) {
                    return new scenario_market_planRow[0];
                }
                else {
                    return ((scenario_market_planRow[])(base.GetChildRows(this.Table.ChildRelations["market_planscenario_market_plan"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_plan_treeRow[] Getmarket_plan_treeRowsBymarket_planmarket_plan_tree_parent() {
                if ((this.Table.ChildRelations["market_planmarket_plan_tree_parent"] == null)) {
                    return new market_plan_treeRow[0];
                }
                else {
                    return ((market_plan_treeRow[])(base.GetChildRows(this.Table.ChildRelations["market_planmarket_plan_tree_parent"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_plan_treeRow[] Getmarket_plan_treeRowsBymarket_planmarket_plan_tree_child() {
                if ((this.Table.ChildRelations["market_planmarket_plan_tree_child"] == null)) {
                    return new market_plan_treeRow[0];
                }
                else {
                    return ((market_plan_treeRow[])(base.GetChildRows(this.Table.ChildRelations["market_planmarket_plan_tree_child"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_eventRow[] Getproduct_eventRows() {
                if ((this.Table.ChildRelations["market_planproduct_event"] == null)) {
                    return new product_eventRow[0];
                }
                else {
                    return ((product_eventRow[])(base.GetChildRows(this.Table.ChildRelations["market_planproduct_event"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mass_mediaRow[] Getmass_mediaRows() {
                if ((this.Table.ChildRelations["market_planmass_media"] == null)) {
                    return new mass_mediaRow[0];
                }
                else {
                    return ((mass_mediaRow[])(base.GetChildRows(this.Table.ChildRelations["market_planmass_media"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public displayRow[] GetdisplayRows() {
                if ((this.Table.ChildRelations["market_plandisplay"] == null)) {
                    return new displayRow[0];
                }
                else {
                    return ((displayRow[])(base.GetChildRows(this.Table.ChildRelations["market_plandisplay"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public distributionRow[] GetdistributionRows() {
                if ((this.Table.ChildRelations["market_plandistribution"] == null)) {
                    return new distributionRow[0];
                }
                else {
                    return ((distributionRow[])(base.GetChildRows(this.Table.ChildRelations["market_plandistribution"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_channelRow[] Getproduct_channelRows() {
                if ((this.Table.ChildRelations["market_planproduct_channel"] == null)) {
                    return new product_channelRow[0];
                }
                else {
                    return ((product_channelRow[])(base.GetChildRows(this.Table.ChildRelations["market_planproduct_channel"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class market_plan_treeRow : global::System.Data.DataRow {
            
            private market_plan_treeDataTable tablemarket_plan_tree;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal market_plan_treeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemarket_plan_tree = ((market_plan_treeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    return ((int)(this[this.tablemarket_plan_tree.model_idColumn]));
                }
                set {
                    this[this.tablemarket_plan_tree.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int parent_id {
                get {
                    return ((int)(this[this.tablemarket_plan_tree.parent_idColumn]));
                }
                set {
                    this[this.tablemarket_plan_tree.parent_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int child_id {
                get {
                    return ((int)(this[this.tablemarket_plan_tree.child_idColumn]));
                }
                set {
                    this[this.tablemarket_plan_tree.child_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["Model_infomarket_plan_tree"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Model_infomarket_plan_tree"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_planRow market_planRowBymarket_planmarket_plan_tree_parent {
                get {
                    return ((market_planRow)(this.GetParentRow(this.Table.ParentRelations["market_planmarket_plan_tree_parent"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["market_planmarket_plan_tree_parent"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_planRow market_planRowBymarket_planmarket_plan_tree_child {
                get {
                    return ((market_planRow)(this.GetParentRow(this.Table.ParentRelations["market_planmarket_plan_tree_child"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["market_planmarket_plan_tree_child"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class scenarioRow : global::System.Data.DataRow {
            
            private scenarioDataTable tablescenario;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal scenarioRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablescenario = ((scenarioDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int scenario_id {
                get {
                    return ((int)(this[this.tablescenario.scenario_idColumn]));
                }
                set {
                    this[this.tablescenario.scenario_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    return ((int)(this[this.tablescenario.model_idColumn]));
                }
                set {
                    this[this.tablescenario.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    return ((string)(this[this.tablescenario.nameColumn]));
                }
                set {
                    this[this.tablescenario.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string descr {
                get {
                    return ((string)(this[this.tablescenario.descrColumn]));
                }
                set {
                    this[this.tablescenario.descrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user_name {
                get {
                    try {
                        return ((string)(this[this.tablescenario.user_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user_name\' in table \'scenario\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablescenario.user_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["Model_infoscenario"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Model_infoscenario"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuser_nameNull() {
                return this.IsNull(this.tablescenario.user_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuser_nameNull() {
                this[this.tablescenario.user_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public simulationRow[] GetsimulationRows() {
                if ((this.Table.ChildRelations["FK_scenario_simulation"] == null)) {
                    return new simulationRow[0];
                }
                else {
                    return ((simulationRow[])(base.GetChildRows(this.Table.ChildRelations["FK_scenario_simulation"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_market_planRow[] Getscenario_market_planRows() {
                if ((this.Table.ChildRelations["scenarioscenario_market_plan"] == null)) {
                    return new scenario_market_planRow[0];
                }
                else {
                    return ((scenario_market_planRow[])(base.GetChildRows(this.Table.ChildRelations["scenarioscenario_market_plan"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class scenario_market_planRow : global::System.Data.DataRow {
            
            private scenario_market_planDataTable tablescenario_market_plan;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal scenario_market_planRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablescenario_market_plan = ((scenario_market_planDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int scenario_id {
                get {
                    return ((int)(this[this.tablescenario_market_plan.scenario_idColumn]));
                }
                set {
                    this[this.tablescenario_market_plan.scenario_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int market_plan_id {
                get {
                    return ((int)(this[this.tablescenario_market_plan.market_plan_idColumn]));
                }
                set {
                    this[this.tablescenario_market_plan.market_plan_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    return ((int)(this[this.tablescenario_market_plan.model_idColumn]));
                }
                set {
                    this[this.tablescenario_market_plan.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenarioRow scenarioRow {
                get {
                    return ((scenarioRow)(this.GetParentRow(this.Table.ParentRelations["scenarioscenario_market_plan"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["scenarioscenario_market_plan"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_planRow market_planRow {
                get {
                    return ((market_planRow)(this.GetParentRow(this.Table.ParentRelations["market_planscenario_market_plan"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["market_planscenario_market_plan"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["Model_infoscenario_market_plan"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Model_infoscenario_market_plan"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class network_parameterRow : global::System.Data.DataRow {
            
            private network_parameterDataTable tablenetwork_parameter;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal network_parameterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablenetwork_parameter = ((network_parameterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tablenetwork_parameter.idColumn]));
                }
                set {
                    this[this.tablenetwork_parameter.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tablenetwork_parameter.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'name\' in table \'network_parameter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenetwork_parameter.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int type {
                get {
                    return ((int)(this[this.tablenetwork_parameter.typeColumn]));
                }
                set {
                    this[this.tablenetwork_parameter.typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double persuasion_pre_use {
                get {
                    return ((double)(this[this.tablenetwork_parameter.persuasion_pre_useColumn]));
                }
                set {
                    this[this.tablenetwork_parameter.persuasion_pre_useColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double persuasion_post_use {
                get {
                    return ((double)(this[this.tablenetwork_parameter.persuasion_post_useColumn]));
                }
                set {
                    this[this.tablenetwork_parameter.persuasion_post_useColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double awareness_weight {
                get {
                    return ((double)(this[this.tablenetwork_parameter.awareness_weightColumn]));
                }
                set {
                    this[this.tablenetwork_parameter.awareness_weightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double num_contacts {
                get {
                    return ((double)(this[this.tablenetwork_parameter.num_contactsColumn]));
                }
                set {
                    this[this.tablenetwork_parameter.num_contactsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double prob_of_talking_pre_use {
                get {
                    return ((double)(this[this.tablenetwork_parameter.prob_of_talking_pre_useColumn]));
                }
                set {
                    this[this.tablenetwork_parameter.prob_of_talking_pre_useColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double prob_of_talking_post_use {
                get {
                    return ((double)(this[this.tablenetwork_parameter.prob_of_talking_post_useColumn]));
                }
                set {
                    this[this.tablenetwork_parameter.prob_of_talking_post_useColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool use_local {
                get {
                    return ((bool)(this[this.tablenetwork_parameter.use_localColumn]));
                }
                set {
                    this[this.tablenetwork_parameter.use_localColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double percent_talking {
                get {
                    return ((double)(this[this.tablenetwork_parameter.percent_talkingColumn]));
                }
                set {
                    this[this.tablenetwork_parameter.percent_talkingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double neg_persuasion_pre_use {
                get {
                    return ((double)(this[this.tablenetwork_parameter.neg_persuasion_pre_useColumn]));
                }
                set {
                    this[this.tablenetwork_parameter.neg_persuasion_pre_useColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double neg_persuasion_post_use {
                get {
                    return ((double)(this[this.tablenetwork_parameter.neg_persuasion_post_useColumn]));
                }
                set {
                    this[this.tablenetwork_parameter.neg_persuasion_post_useColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    try {
                        return ((int)(this[this.tablenetwork_parameter.model_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'model_id\' in table \'network_parameter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablenetwork_parameter.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double neg_persuasion_reject {
                get {
                    try {
                        return ((double)(this[this.tablenetwork_parameter.neg_persuasion_rejectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'neg_persuasion_reject\' in table \'network_parameter\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablenetwork_parameter.neg_persuasion_rejectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["Model_infonetwork_parameter"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Model_infonetwork_parameter"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tablenetwork_parameter.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tablenetwork_parameter.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismodel_idNull() {
                return this.IsNull(this.tablenetwork_parameter.model_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmodel_idNull() {
                this[this.tablenetwork_parameter.model_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isneg_persuasion_rejectNull() {
                return this.IsNull(this.tablenetwork_parameter.neg_persuasion_rejectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setneg_persuasion_rejectNull() {
                this[this.tablenetwork_parameter.neg_persuasion_rejectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segment_networkRow[] Getsegment_networkRows() {
                if ((this.Table.ChildRelations["network_parametersegment_network"] == null)) {
                    return new segment_networkRow[0];
                }
                else {
                    return ((segment_networkRow[])(base.GetChildRows(this.Table.ChildRelations["network_parametersegment_network"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class segment_networkRow : global::System.Data.DataRow {
            
            private segment_networkDataTable tablesegment_network;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal segment_networkRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesegment_network = ((segment_networkDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int from_id {
                get {
                    return ((int)(this[this.tablesegment_network.from_idColumn]));
                }
                set {
                    this[this.tablesegment_network.from_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int to_id {
                get {
                    return ((int)(this[this.tablesegment_network.to_idColumn]));
                }
                set {
                    this[this.tablesegment_network.to_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int network_param {
                get {
                    return ((int)(this[this.tablesegment_network.network_paramColumn]));
                }
                set {
                    this[this.tablesegment_network.network_paramColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    try {
                        return ((int)(this[this.tablesegment_network.model_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'model_id\' in table \'segment_network\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment_network.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public network_parameterRow network_parameterRow {
                get {
                    return ((network_parameterRow)(this.GetParentRow(this.Table.ParentRelations["network_parametersegment_network"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["network_parametersegment_network"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segmentRow segmentRowByfromsegmentsegment_network {
                get {
                    return ((segmentRow)(this.GetParentRow(this.Table.ParentRelations["fromsegmentsegment_network"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fromsegmentsegment_network"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segmentRow segmentRowBytosegmentsegment_network {
                get {
                    return ((segmentRow)(this.GetParentRow(this.Table.ParentRelations["tosegmentsegment_network"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["tosegmentsegment_network"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["Model_infosegment_network"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Model_infosegment_network"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismodel_idNull() {
                return this.IsNull(this.tablesegment_network.model_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmodel_idNull() {
                this[this.tablesegment_network.model_idColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class external_dataRow : global::System.Data.DataRow {
            
            private external_dataDataTable tableexternal_data;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal external_dataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableexternal_data = ((external_dataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    return ((int)(this[this.tableexternal_data.model_idColumn]));
                }
                set {
                    this[this.tableexternal_data.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime calendar_date {
                get {
                    return ((global::System.DateTime)(this[this.tableexternal_data.calendar_dateColumn]));
                }
                set {
                    this[this.tableexternal_data.calendar_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int segment_id {
                get {
                    return ((int)(this[this.tableexternal_data.segment_idColumn]));
                }
                set {
                    this[this.tableexternal_data.segment_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int product_id {
                get {
                    return ((int)(this[this.tableexternal_data.product_idColumn]));
                }
                set {
                    this[this.tableexternal_data.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int channel_id {
                get {
                    return ((int)(this[this.tableexternal_data.channel_idColumn]));
                }
                set {
                    this[this.tableexternal_data.channel_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int type {
                get {
                    return ((int)(this[this.tableexternal_data.typeColumn]));
                }
                set {
                    this[this.tableexternal_data.typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double value {
                get {
                    return ((double)(this[this.tableexternal_data.valueColumn]));
                }
                set {
                    this[this.tableexternal_data.valueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segmentRow segmentRow {
                get {
                    return ((segmentRow)(this.GetParentRow(this.Table.ParentRelations["segmentexternal_data"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["segmentexternal_data"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public channelRow channelRow {
                get {
                    return ((channelRow)(this.GetParentRow(this.Table.ParentRelations["channelexternal_data"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["channelexternal_data"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public productRow productRow {
                get {
                    return ((productRow)(this.GetParentRow(this.Table.ParentRelations["productexternal_data"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["productexternal_data"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["Model_infoexternal_data"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Model_infoexternal_data"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class model_parameterRow : global::System.Data.DataRow {
            
            private model_parameterDataTable tablemodel_parameter;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal model_parameterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemodel_parameter = ((model_parameterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    return ((int)(this[this.tablemodel_parameter.model_idColumn]));
                }
                set {
                    this[this.tablemodel_parameter.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tablemodel_parameter.idColumn]));
                }
                set {
                    this[this.tablemodel_parameter.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tablemodel_parameter.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'name\' in table \'model_parameter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemodel_parameter.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string table_name {
                get {
                    try {
                        return ((string)(this[this.tablemodel_parameter.table_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'table_name\' in table \'model_parameter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemodel_parameter.table_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string col_name {
                get {
                    try {
                        return ((string)(this[this.tablemodel_parameter.col_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'col_name\' in table \'model_parameter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemodel_parameter.col_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string filter {
                get {
                    try {
                        return ((string)(this[this.tablemodel_parameter.filterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'filter\' in table \'model_parameter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemodel_parameter.filterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string identity_row {
                get {
                    try {
                        return ((string)(this[this.tablemodel_parameter.identity_rowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'identity_row\' in table \'model_parameter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemodel_parameter.identity_rowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int row_id {
                get {
                    try {
                        return ((int)(this[this.tablemodel_parameter.row_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'row_id\' in table \'model_parameter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemodel_parameter.row_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["Model_infomodel_parameter"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Model_infomodel_parameter"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tablemodel_parameter.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tablemodel_parameter.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istable_nameNull() {
                return this.IsNull(this.tablemodel_parameter.table_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settable_nameNull() {
                this[this.tablemodel_parameter.table_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscol_nameNull() {
                return this.IsNull(this.tablemodel_parameter.col_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcol_nameNull() {
                this[this.tablemodel_parameter.col_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfilterNull() {
                return this.IsNull(this.tablemodel_parameter.filterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfilterNull() {
                this[this.tablemodel_parameter.filterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isidentity_rowNull() {
                return this.IsNull(this.tablemodel_parameter.identity_rowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setidentity_rowNull() {
                this[this.tablemodel_parameter.identity_rowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrow_idNull() {
                return this.IsNull(this.tablemodel_parameter.row_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrow_idNull() {
                this[this.tablemodel_parameter.row_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_parameterRow[] Getscenario_parameterRows() {
                if ((this.Table.ChildRelations["model_parameter_scenario_parameter"] == null)) {
                    return new scenario_parameterRow[0];
                }
                else {
                    return ((scenario_parameterRow[])(base.GetChildRows(this.Table.ChildRelations["model_parameter_scenario_parameter"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class market_utilityRow : global::System.Data.DataRow {
            
            private market_utilityDataTable tablemarket_utility;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal market_utilityRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemarket_utility = ((market_utilityDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int record_id {
                get {
                    return ((int)(this[this.tablemarket_utility.record_idColumn]));
                }
                set {
                    this[this.tablemarket_utility.record_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    return ((int)(this[this.tablemarket_utility.model_idColumn]));
                }
                set {
                    this[this.tablemarket_utility.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int market_plan_id {
                get {
                    return ((int)(this[this.tablemarket_utility.market_plan_idColumn]));
                }
                set {
                    this[this.tablemarket_utility.market_plan_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int product_id {
                get {
                    return ((int)(this[this.tablemarket_utility.product_idColumn]));
                }
                set {
                    this[this.tablemarket_utility.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int channel_id {
                get {
                    return ((int)(this[this.tablemarket_utility.channel_idColumn]));
                }
                set {
                    this[this.tablemarket_utility.channel_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int segment_id {
                get {
                    return ((int)(this[this.tablemarket_utility.segment_idColumn]));
                }
                set {
                    this[this.tablemarket_utility.segment_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double percent_dist {
                get {
                    return ((double)(this[this.tablemarket_utility.percent_distColumn]));
                }
                set {
                    this[this.tablemarket_utility.percent_distColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double awareness {
                get {
                    return ((double)(this[this.tablemarket_utility.awarenessColumn]));
                }
                set {
                    this[this.tablemarket_utility.awarenessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double persuasion {
                get {
                    return ((double)(this[this.tablemarket_utility.persuasionColumn]));
                }
                set {
                    this[this.tablemarket_utility.persuasionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double utility {
                get {
                    return ((double)(this[this.tablemarket_utility.utilityColumn]));
                }
                set {
                    this[this.tablemarket_utility.utilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime start_date {
                get {
                    return ((global::System.DateTime)(this[this.tablemarket_utility.start_dateColumn]));
                }
                set {
                    this[this.tablemarket_utility.start_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime end_date {
                get {
                    return ((global::System.DateTime)(this[this.tablemarket_utility.end_dateColumn]));
                }
                set {
                    this[this.tablemarket_utility.end_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["Model_infomarket_utility"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Model_infomarket_utility"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public productRow productRow {
                get {
                    return ((productRow)(this.GetParentRow(this.Table.ParentRelations["productmarket_utility"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["productmarket_utility"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public channelRow channelRow {
                get {
                    return ((channelRow)(this.GetParentRow(this.Table.ParentRelations["channelmarket_utility"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["channelmarket_utility"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segmentRow segmentRow {
                get {
                    return ((segmentRow)(this.GetParentRow(this.Table.ParentRelations["segmentmarket_utility"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["segmentmarket_utility"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_planRow market_planRow {
                get {
                    return ((market_planRow)(this.GetParentRow(this.Table.ParentRelations["market_planmarket_utility"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["market_planmarket_utility"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class product_treeRow : global::System.Data.DataRow {
            
            private product_treeDataTable tableproduct_tree;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal product_treeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableproduct_tree = ((product_treeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    try {
                        return ((int)(this[this.tableproduct_tree.model_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'model_id\' in table \'product_tree\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_tree.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int parent_id {
                get {
                    try {
                        return ((int)(this[this.tableproduct_tree.parent_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'parent_id\' in table \'product_tree\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_tree.parent_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int child_id {
                get {
                    try {
                        return ((int)(this[this.tableproduct_tree.child_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'child_id\' in table \'product_tree\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_tree.child_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["Model_infoproduct_tree"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Model_infoproduct_tree"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public productRow productRowByproductproduct_tree {
                get {
                    return ((productRow)(this.GetParentRow(this.Table.ParentRelations["productproduct_tree"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["productproduct_tree"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public productRow productRowByproductproduct_tree1 {
                get {
                    return ((productRow)(this.GetParentRow(this.Table.ParentRelations["productproduct_tree1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["productproduct_tree1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismodel_idNull() {
                return this.IsNull(this.tableproduct_tree.model_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmodel_idNull() {
                this[this.tableproduct_tree.model_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isparent_idNull() {
                return this.IsNull(this.tableproduct_tree.parent_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setparent_idNull() {
                this[this.tableproduct_tree.parent_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ischild_idNull() {
                return this.IsNull(this.tableproduct_tree.child_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setchild_idNull() {
                this[this.tableproduct_tree.child_idColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class product_typeRow : global::System.Data.DataRow {
            
            private product_typeDataTable tableproduct_type;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal product_typeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableproduct_type = ((product_typeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    return ((int)(this[this.tableproduct_type.model_idColumn]));
                }
                set {
                    this[this.tableproduct_type.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tableproduct_type.idColumn]));
                }
                set {
                    this[this.tableproduct_type.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type_name {
                get {
                    return ((string)(this[this.tableproduct_type.type_nameColumn]));
                }
                set {
                    this[this.tableproduct_type.type_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["Model_infoproduct_type"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Model_infoproduct_type"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public productRow[] GetproductRows() {
                if ((this.Table.ChildRelations["productproduct_type"] == null)) {
                    return new productRow[0];
                }
                else {
                    return ((productRow[])(base.GetChildRows(this.Table.ChildRelations["productproduct_type"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class projectRow : global::System.Data.DataRow {
            
            private projectDataTable tableproject;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal projectRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableproject = ((projectDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tableproject.idColumn]));
                }
                set {
                    this[this.tableproject.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tableproject.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'name\' in table \'project\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproject.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string descr {
                get {
                    try {
                        return ((string)(this[this.tableproject.descrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'descr\' in table \'project\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproject.descrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool read_only {
                get {
                    return ((bool)(this[this.tableproject.read_onlyColumn]));
                }
                set {
                    this[this.tableproject.read_onlyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool locked {
                get {
                    return ((bool)(this[this.tableproject.lockedColumn]));
                }
                set {
                    this[this.tableproject.lockedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created {
                get {
                    return ((global::System.DateTime)(this[this.tableproject.createdColumn]));
                }
                set {
                    this[this.tableproject.createdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime modified {
                get {
                    return ((global::System.DateTime)(this[this.tableproject.modifiedColumn]));
                }
                set {
                    this[this.tableproject.modifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tableproject.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tableproject.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdescrNull() {
                return this.IsNull(this.tableproject.descrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdescrNull() {
                this[this.tableproject.descrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow[] GetModel_infoRows() {
                if ((this.Table.ChildRelations["project_Model_info"] == null)) {
                    return new Model_infoRow[0];
                }
                else {
                    return ((Model_infoRow[])(base.GetChildRows(this.Table.ChildRelations["project_Model_info"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class simulationRow : global::System.Data.DataRow {
            
            private simulationDataTable tablesimulation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal simulationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesimulation = ((simulationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tablesimulation.idColumn]));
                }
                set {
                    this[this.tablesimulation.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int scenario_id {
                get {
                    return ((int)(this[this.tablesimulation.scenario_idColumn]));
                }
                set {
                    this[this.tablesimulation.scenario_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    return ((string)(this[this.tablesimulation.nameColumn]));
                }
                set {
                    this[this.tablesimulation.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string descr {
                get {
                    return ((string)(this[this.tablesimulation.descrColumn]));
                }
                set {
                    this[this.tablesimulation.descrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte type {
                get {
                    return ((byte)(this[this.tablesimulation.typeColumn]));
                }
                set {
                    this[this.tablesimulation.typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool locked {
                get {
                    return ((bool)(this[this.tablesimulation.lockedColumn]));
                }
                set {
                    this[this.tablesimulation.lockedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool queued {
                get {
                    return ((bool)(this[this.tablesimulation.queuedColumn]));
                }
                set {
                    this[this.tablesimulation.queuedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime start_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablesimulation.start_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'start_date\' in table \'simulation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesimulation.start_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime end_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablesimulation.end_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'end_date\' in table \'simulation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesimulation.end_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int sim_num {
                get {
                    return ((int)(this[this.tablesimulation.sim_numColumn]));
                }
                set {
                    this[this.tablesimulation.sim_numColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime metric_start_date {
                get {
                    return ((global::System.DateTime)(this[this.tablesimulation.metric_start_dateColumn]));
                }
                set {
                    this[this.tablesimulation.metric_start_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime metric_end_date {
                get {
                    return ((global::System.DateTime)(this[this.tablesimulation.metric_end_dateColumn]));
                }
                set {
                    this[this.tablesimulation.metric_end_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool delete_std_results {
                get {
                    return ((bool)(this[this.tablesimulation.delete_std_resultsColumn]));
                }
                set {
                    this[this.tablesimulation.delete_std_resultsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string control_string {
                get {
                    return ((string)(this[this.tablesimulation.control_stringColumn]));
                }
                set {
                    this[this.tablesimulation.control_stringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int access_time {
                get {
                    return ((int)(this[this.tablesimulation.access_timeColumn]));
                }
                set {
                    this[this.tablesimulation.access_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double scale_factor {
                get {
                    return ((double)(this[this.tablesimulation.scale_factorColumn]));
                }
                set {
                    this[this.tablesimulation.scale_factorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool reset_panel_state {
                get {
                    try {
                        return ((bool)(this[this.tablesimulation.reset_panel_stateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'reset_panel_state\' in table \'simulation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesimulation.reset_panel_stateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenarioRow scenarioRow {
                get {
                    return ((scenarioRow)(this.GetParentRow(this.Table.ParentRelations["FK_scenario_simulation"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_scenario_simulation"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstart_dateNull() {
                return this.IsNull(this.tablesimulation.start_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstart_dateNull() {
                this[this.tablesimulation.start_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isend_dateNull() {
                return this.IsNull(this.tablesimulation.end_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setend_dateNull() {
                this[this.tablesimulation.end_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isreset_panel_stateNull() {
                return this.IsNull(this.tablesimulation.reset_panel_stateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setreset_panel_stateNull() {
                this[this.tablesimulation.reset_panel_stateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_simseedRow[] Getscenario_simseedRows() {
                if ((this.Table.ChildRelations["SimulationSeed"] == null)) {
                    return new scenario_simseedRow[0];
                }
                else {
                    return ((scenario_simseedRow[])(base.GetChildRows(this.Table.ChildRelations["SimulationSeed"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_metricRow[] Getscenario_metricRows() {
                if ((this.Table.ChildRelations["SimulationMetric"] == null)) {
                    return new scenario_metricRow[0];
                }
                else {
                    return ((scenario_metricRow[])(base.GetChildRows(this.Table.ChildRelations["SimulationMetric"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_parameterRow[] Getscenario_parameterRows() {
                if ((this.Table.ChildRelations["SimulationParameter"] == null)) {
                    return new scenario_parameterRow[0];
                }
                else {
                    return ((scenario_parameterRow[])(base.GetChildRows(this.Table.ChildRelations["SimulationParameter"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_variableRow[] Getscenario_variableRows() {
                if ((this.Table.ChildRelations["SimulationVariable"] == null)) {
                    return new scenario_variableRow[0];
                }
                else {
                    return ((scenario_variableRow[])(base.GetChildRows(this.Table.ChildRelations["SimulationVariable"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sim_queueRow[] Getsim_queueRows() {
                if ((this.Table.ChildRelations["SimulationSimQueue"] == null)) {
                    return new sim_queueRow[0];
                }
                else {
                    return ((sim_queueRow[])(base.GetChildRows(this.Table.ChildRelations["SimulationSimQueue"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class sim_queueRow : global::System.Data.DataRow {
            
            private sim_queueDataTable tablesim_queue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sim_queueRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesim_queue = ((sim_queueDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int run_id {
                get {
                    return ((int)(this[this.tablesim_queue.run_idColumn]));
                }
                set {
                    this[this.tablesim_queue.run_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    try {
                        return ((int)(this[this.tablesim_queue.model_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'model_id\' in table \'sim_queue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesim_queue.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte status {
                get {
                    return ((byte)(this[this.tablesim_queue.statusColumn]));
                }
                set {
                    this[this.tablesim_queue.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int num {
                get {
                    return ((int)(this[this.tablesim_queue.numColumn]));
                }
                set {
                    this[this.tablesim_queue.numColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    return ((string)(this[this.tablesim_queue.nameColumn]));
                }
                set {
                    this[this.tablesim_queue.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime current_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablesim_queue.current_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'current_date\' in table \'sim_queue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesim_queue.current_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int elapsed_time {
                get {
                    return ((int)(this[this.tablesim_queue.elapsed_timeColumn]));
                }
                set {
                    this[this.tablesim_queue.elapsed_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string current_status {
                get {
                    return ((string)(this[this.tablesim_queue.current_statusColumn]));
                }
                set {
                    this[this.tablesim_queue.current_statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime run_time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablesim_queue.run_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'run_time\' in table \'sim_queue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesim_queue.run_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int seed {
                get {
                    return ((int)(this[this.tablesim_queue.seedColumn]));
                }
                set {
                    this[this.tablesim_queue.seedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int param_id {
                get {
                    return ((int)(this[this.tablesim_queue.param_idColumn]));
                }
                set {
                    this[this.tablesim_queue.param_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int sim_id {
                get {
                    return ((int)(this[this.tablesim_queue.sim_idColumn]));
                }
                set {
                    this[this.tablesim_queue.sim_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public simulationRow simulationRow {
                get {
                    return ((simulationRow)(this.GetParentRow(this.Table.ParentRelations["SimulationSimQueue"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SimulationSimQueue"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismodel_idNull() {
                return this.IsNull(this.tablesim_queue.model_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmodel_idNull() {
                this[this.tablesim_queue.model_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscurrent_dateNull() {
                return this.IsNull(this.tablesim_queue.current_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcurrent_dateNull() {
                this[this.tablesim_queue.current_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrun_timeNull() {
                return this.IsNull(this.tablesim_queue.run_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrun_timeNull() {
                this[this.tablesim_queue.run_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sim_variable_valueRow[] Getsim_variable_valueRows() {
                if ((this.Table.ChildRelations["SimVariableValue"] == null)) {
                    return new sim_variable_valueRow[0];
                }
                else {
                    return ((sim_variable_valueRow[])(base.GetChildRows(this.Table.ChildRelations["SimVariableValue"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public run_logRow[] Getrun_logRows() {
                if ((this.Table.ChildRelations["SimQueueLog"] == null)) {
                    return new run_logRow[0];
                }
                else {
                    return ((run_logRow[])(base.GetChildRows(this.Table.ChildRelations["SimQueueLog"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class scenario_variableRow : global::System.Data.DataRow {
            
            private scenario_variableDataTable tablescenario_variable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal scenario_variableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablescenario_variable = ((scenario_variableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tablescenario_variable.idColumn]));
                }
                set {
                    this[this.tablescenario_variable.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string token {
                get {
                    try {
                        return ((string)(this[this.tablescenario_variable.tokenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'token\' in table \'scenario_variable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablescenario_variable.tokenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string descr {
                get {
                    try {
                        return ((string)(this[this.tablescenario_variable.descrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'descr\' in table \'scenario_variable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablescenario_variable.descrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double min {
                get {
                    return ((double)(this[this.tablescenario_variable.minColumn]));
                }
                set {
                    this[this.tablescenario_variable.minColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double max {
                get {
                    return ((double)(this[this.tablescenario_variable.maxColumn]));
                }
                set {
                    this[this.tablescenario_variable.maxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int num_steps {
                get {
                    return ((int)(this[this.tablescenario_variable.num_stepsColumn]));
                }
                set {
                    this[this.tablescenario_variable.num_stepsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte type {
                get {
                    return ((byte)(this[this.tablescenario_variable.typeColumn]));
                }
                set {
                    this[this.tablescenario_variable.typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int product_id {
                get {
                    return ((int)(this[this.tablescenario_variable.product_idColumn]));
                }
                set {
                    this[this.tablescenario_variable.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int sim_id {
                get {
                    return ((int)(this[this.tablescenario_variable.sim_idColumn]));
                }
                set {
                    this[this.tablescenario_variable.sim_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public simulationRow simulationRow {
                get {
                    return ((simulationRow)(this.GetParentRow(this.Table.ParentRelations["SimulationVariable"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SimulationVariable"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstokenNull() {
                return this.IsNull(this.tablescenario_variable.tokenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettokenNull() {
                this[this.tablescenario_variable.tokenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdescrNull() {
                return this.IsNull(this.tablescenario_variable.descrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdescrNull() {
                this[this.tablescenario_variable.descrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sim_variable_valueRow[] Getsim_variable_valueRows() {
                if ((this.Table.ChildRelations["scenario_variable_sim_variable_value"] == null)) {
                    return new sim_variable_valueRow[0];
                }
                else {
                    return ((sim_variable_valueRow[])(base.GetChildRows(this.Table.ChildRelations["scenario_variable_sim_variable_value"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class sim_variable_valueRow : global::System.Data.DataRow {
            
            private sim_variable_valueDataTable tablesim_variable_value;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sim_variable_valueRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesim_variable_value = ((sim_variable_valueDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int run_id {
                get {
                    return ((int)(this[this.tablesim_variable_value.run_idColumn]));
                }
                set {
                    this[this.tablesim_variable_value.run_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int var_id {
                get {
                    return ((int)(this[this.tablesim_variable_value.var_idColumn]));
                }
                set {
                    this[this.tablesim_variable_value.var_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double val {
                get {
                    return ((double)(this[this.tablesim_variable_value.valColumn]));
                }
                set {
                    this[this.tablesim_variable_value.valColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_variableRow scenario_variableRow {
                get {
                    return ((scenario_variableRow)(this.GetParentRow(this.Table.ParentRelations["scenario_variable_sim_variable_value"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["scenario_variable_sim_variable_value"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sim_queueRow sim_queueRow {
                get {
                    return ((sim_queueRow)(this.GetParentRow(this.Table.ParentRelations["SimVariableValue"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SimVariableValue"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class scenario_parameterRow : global::System.Data.DataRow {
            
            private scenario_parameterDataTable tablescenario_parameter;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal scenario_parameterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablescenario_parameter = ((scenario_parameterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    return ((int)(this[this.tablescenario_parameter.model_idColumn]));
                }
                set {
                    this[this.tablescenario_parameter.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int param_id {
                get {
                    return ((int)(this[this.tablescenario_parameter.param_idColumn]));
                }
                set {
                    this[this.tablescenario_parameter.param_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double aValue {
                get {
                    return ((double)(this[this.tablescenario_parameter.aValueColumn]));
                }
                set {
                    this[this.tablescenario_parameter.aValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string expression {
                get {
                    try {
                        return ((string)(this[this.tablescenario_parameter.expressionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'expression\' in table \'scenario_parameter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablescenario_parameter.expressionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int sim_id {
                get {
                    return ((int)(this[this.tablescenario_parameter.sim_idColumn]));
                }
                set {
                    this[this.tablescenario_parameter.sim_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public model_parameterRow model_parameterRow {
                get {
                    return ((model_parameterRow)(this.GetParentRow(this.Table.ParentRelations["model_parameter_scenario_parameter"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["model_parameter_scenario_parameter"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public simulationRow simulationRow {
                get {
                    return ((simulationRow)(this.GetParentRow(this.Table.ParentRelations["SimulationParameter"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SimulationParameter"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["Model_info_scenario_parameter"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Model_info_scenario_parameter"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsexpressionNull() {
                return this.IsNull(this.tablescenario_parameter.expressionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetexpressionNull() {
                this[this.tablescenario_parameter.expressionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class scenario_metricRow : global::System.Data.DataRow {
            
            private scenario_metricDataTable tablescenario_metric;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal scenario_metricRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablescenario_metric = ((scenario_metricDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string token {
                get {
                    return ((string)(this[this.tablescenario_metric.tokenColumn]));
                }
                set {
                    this[this.tablescenario_metric.tokenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int sim_id {
                get {
                    return ((int)(this[this.tablescenario_metric.sim_idColumn]));
                }
                set {
                    this[this.tablescenario_metric.sim_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public simulationRow simulationRow {
                get {
                    return ((simulationRow)(this.GetParentRow(this.Table.ParentRelations["SimulationMetric"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SimulationMetric"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class scenario_simseedRow : global::System.Data.DataRow {
            
            private scenario_simseedDataTable tablescenario_simseed;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal scenario_simseedRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablescenario_simseed = ((scenario_simseedDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tablescenario_simseed.idColumn]));
                }
                set {
                    this[this.tablescenario_simseed.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int seed {
                get {
                    return ((int)(this[this.tablescenario_simseed.seedColumn]));
                }
                set {
                    this[this.tablescenario_simseed.seedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int sim_id {
                get {
                    return ((int)(this[this.tablescenario_simseed.sim_idColumn]));
                }
                set {
                    this[this.tablescenario_simseed.sim_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public simulationRow simulationRow {
                get {
                    return ((simulationRow)(this.GetParentRow(this.Table.ParentRelations["SimulationSeed"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SimulationSeed"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class run_logRow : global::System.Data.DataRow {
            
            private run_logDataTable tablerun_log;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal run_logRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablerun_log = ((run_logDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int run_id {
                get {
                    return ((int)(this[this.tablerun_log.run_idColumn]));
                }
                set {
                    this[this.tablerun_log.run_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime calendar_date {
                get {
                    return ((global::System.DateTime)(this[this.tablerun_log.calendar_dateColumn]));
                }
                set {
                    this[this.tablerun_log.calendar_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int product_id {
                get {
                    try {
                        return ((int)(this[this.tablerun_log.product_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_id\' in table \'run_log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerun_log.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int segment_id {
                get {
                    try {
                        return ((int)(this[this.tablerun_log.segment_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'segment_id\' in table \'run_log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerun_log.segment_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int channel_id {
                get {
                    try {
                        return ((int)(this[this.tablerun_log.channel_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'channel_id\' in table \'run_log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerun_log.channel_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int comp_id {
                get {
                    return ((int)(this[this.tablerun_log.comp_idColumn]));
                }
                set {
                    this[this.tablerun_log.comp_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int message_id {
                get {
                    return ((int)(this[this.tablerun_log.message_idColumn]));
                }
                set {
                    this[this.tablerun_log.message_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string message {
                get {
                    try {
                        return ((string)(this[this.tablerun_log.messageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'message\' in table \'run_log\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerun_log.messageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sim_queueRow sim_queueRow {
                get {
                    return ((sim_queueRow)(this.GetParentRow(this.Table.ParentRelations["SimQueueLog"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SimQueueLog"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_idNull() {
                return this.IsNull(this.tablerun_log.product_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_idNull() {
                this[this.tablerun_log.product_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issegment_idNull() {
                return this.IsNull(this.tablerun_log.segment_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsegment_idNull() {
                this[this.tablerun_log.segment_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ischannel_idNull() {
                return this.IsNull(this.tablerun_log.channel_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setchannel_idNull() {
                this[this.tablerun_log.channel_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmessageNull() {
                return this.IsNull(this.tablerun_log.messageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmessageNull() {
                this[this.tablerun_log.messageColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class product_channel_sizeRow : global::System.Data.DataRow {
            
            private product_channel_sizeDataTable tableproduct_channel_size;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal product_channel_sizeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableproduct_channel_size = ((product_channel_sizeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    try {
                        return ((int)(this[this.tableproduct_channel_size.model_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'model_id\' in table \'product_channel_size\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_channel_size.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int product_id {
                get {
                    try {
                        return ((int)(this[this.tableproduct_channel_size.product_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'product_id\' in table \'product_channel_size\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_channel_size.product_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int channel_id {
                get {
                    try {
                        return ((int)(this[this.tableproduct_channel_size.channel_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'channel_id\' in table \'product_channel_size\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_channel_size.channel_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double prod_size {
                get {
                    try {
                        return ((double)(this[this.tableproduct_channel_size.prod_sizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'prod_size\' in table \'product_channel_size\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproduct_channel_size.prod_sizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public productRow productRow {
                get {
                    return ((productRow)(this.GetParentRow(this.Table.ParentRelations["FK_product_product_channel_size"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_product_product_channel_size"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["FK_Model_info_product_channel_size"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Model_info_product_channel_size"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public channelRow channelRow {
                get {
                    return ((channelRow)(this.GetParentRow(this.Table.ParentRelations["FK_channel_product_channel_size"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_channel_product_channel_size"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismodel_idNull() {
                return this.IsNull(this.tableproduct_channel_size.model_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmodel_idNull() {
                this[this.tableproduct_channel_size.model_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_idNull() {
                return this.IsNull(this.tableproduct_channel_size.product_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_idNull() {
                this[this.tableproduct_channel_size.product_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ischannel_idNull() {
                return this.IsNull(this.tableproduct_channel_size.channel_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setchannel_idNull() {
                this[this.tableproduct_channel_size.channel_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isprod_sizeNull() {
                return this.IsNull(this.tableproduct_channel_size.prod_sizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setprod_sizeNull() {
                this[this.tableproduct_channel_size.prod_sizeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class db_schema_infoRow : global::System.Data.DataRow {
            
            private db_schema_infoDataTable tabledb_schema_info;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal db_schema_infoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledb_schema_info = ((db_schema_infoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int major_no {
                get {
                    try {
                        return ((int)(this[this.tabledb_schema_info.major_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'major_no\' in table \'db_schema_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledb_schema_info.major_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int minor_no {
                get {
                    try {
                        return ((int)(this[this.tabledb_schema_info.minor_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'minor_no\' in table \'db_schema_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledb_schema_info.minor_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int release_no {
                get {
                    try {
                        return ((int)(this[this.tabledb_schema_info.release_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'release_no\' in table \'db_schema_info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledb_schema_info.release_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismajor_noNull() {
                return this.IsNull(this.tabledb_schema_info.major_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmajor_noNull() {
                this[this.tabledb_schema_info.major_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isminor_noNull() {
                return this.IsNull(this.tabledb_schema_info.minor_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setminor_noNull() {
                this[this.tabledb_schema_info.minor_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrelease_noNull() {
                return this.IsNull(this.tabledb_schema_info.release_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrelease_noNull() {
                this[this.tabledb_schema_info.release_noColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class simulation_statusRow : global::System.Data.DataRow {
            
            private simulation_statusDataTable tablesimulation_status;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal simulation_statusRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesimulation_status = ((simulation_statusDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tablesimulation_status.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'name\' in table \'simulation_status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesimulation_status.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type {
                get {
                    try {
                        return ((string)(this[this.tablesimulation_status.typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type\' in table \'simulation_status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesimulation_status.typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tablesimulation_status.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'simulation_status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesimulation_status.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime start_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablesimulation_status.start_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'start_date\' in table \'simulation_status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesimulation_status.start_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime end_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablesimulation_status.end_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'end_date\' in table \'simulation_status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesimulation_status.end_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool reset_panel_state {
                get {
                    try {
                        return ((bool)(this[this.tablesimulation_status.reset_panel_stateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'reset_panel_state\' in table \'simulation_status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesimulation_status.reset_panel_stateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int scenario_id {
                get {
                    try {
                        return ((int)(this[this.tablesimulation_status.scenario_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'scenario_id\' in table \'simulation_status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesimulation_status.scenario_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int simulation_id {
                get {
                    return ((int)(this[this.tablesimulation_status.simulation_idColumn]));
                }
                set {
                    this[this.tablesimulation_status.simulation_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int sim_num {
                get {
                    try {
                        return ((int)(this[this.tablesimulation_status.sim_numColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sim_num\' in table \'simulation_status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesimulation_status.sim_numColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tablesimulation_status.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tablesimulation_status.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstypeNull() {
                return this.IsNull(this.tablesimulation_status.typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettypeNull() {
                this[this.tablesimulation_status.typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tablesimulation_status.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tablesimulation_status.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstart_dateNull() {
                return this.IsNull(this.tablesimulation_status.start_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstart_dateNull() {
                this[this.tablesimulation_status.start_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isend_dateNull() {
                return this.IsNull(this.tablesimulation_status.end_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setend_dateNull() {
                this[this.tablesimulation_status.end_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isreset_panel_stateNull() {
                return this.IsNull(this.tablesimulation_status.reset_panel_stateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setreset_panel_stateNull() {
                this[this.tablesimulation_status.reset_panel_stateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isscenario_idNull() {
                return this.IsNull(this.tablesimulation_status.scenario_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setscenario_idNull() {
                this[this.tablesimulation_status.scenario_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issim_numNull() {
                return this.IsNull(this.tablesimulation_status.sim_numColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsim_numNull() {
                this[this.tablesimulation_status.sim_numColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class results_statusRow : global::System.Data.DataRow {
            
            private results_statusDataTable tableresults_status;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal results_statusRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableresults_status = ((results_statusDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tableresults_status.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'name\' in table \'results_status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableresults_status.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string run_name {
                get {
                    try {
                        return ((string)(this[this.tableresults_status.run_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'run_name\' in table \'results_status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableresults_status.run_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string status {
                get {
                    try {
                        return ((string)(this[this.tableresults_status.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'results_status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableresults_status.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string current_status {
                get {
                    try {
                        return ((string)(this[this.tableresults_status.current_statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'current_status\' in table \'results_status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableresults_status.current_statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime run_time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableresults_status.run_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'run_time\' in table \'results_status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableresults_status.run_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime current_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableresults_status.current_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'current_date\' in table \'results_status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableresults_status.current_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int scenario_id {
                get {
                    try {
                        return ((int)(this[this.tableresults_status.scenario_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'scenario_id\' in table \'results_status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableresults_status.scenario_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int simulation_id {
                get {
                    try {
                        return ((int)(this[this.tableresults_status.simulation_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'simulation_id\' in table \'results_status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableresults_status.simulation_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int run_id {
                get {
                    return ((int)(this[this.tableresults_status.run_idColumn]));
                }
                set {
                    this[this.tableresults_status.run_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int elapsed_time {
                get {
                    try {
                        return ((int)(this[this.tableresults_status.elapsed_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'elapsed_time\' in table \'results_status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableresults_status.elapsed_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tableresults_status.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tableresults_status.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrun_nameNull() {
                return this.IsNull(this.tableresults_status.run_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrun_nameNull() {
                this[this.tableresults_status.run_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tableresults_status.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tableresults_status.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscurrent_statusNull() {
                return this.IsNull(this.tableresults_status.current_statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcurrent_statusNull() {
                this[this.tableresults_status.current_statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrun_timeNull() {
                return this.IsNull(this.tableresults_status.run_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrun_timeNull() {
                this[this.tableresults_status.run_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscurrent_dateNull() {
                return this.IsNull(this.tableresults_status.current_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcurrent_dateNull() {
                this[this.tableresults_status.current_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isscenario_idNull() {
                return this.IsNull(this.tableresults_status.scenario_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setscenario_idNull() {
                this[this.tableresults_status.scenario_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issimulation_idNull() {
                return this.IsNull(this.tableresults_status.simulation_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsimulation_idNull() {
                this[this.tableresults_status.simulation_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iselapsed_timeNull() {
                return this.IsNull(this.tableresults_status.elapsed_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setelapsed_timeNull() {
                this[this.tableresults_status.elapsed_timeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class pack_sizeRow : global::System.Data.DataRow {
            
            private pack_sizeDataTable tablepack_size;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal pack_sizeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablepack_size = ((pack_sizeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tablepack_size.idColumn]));
                }
                set {
                    this[this.tablepack_size.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    return ((int)(this[this.tablepack_size.model_idColumn]));
                }
                set {
                    this[this.tablepack_size.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    return ((string)(this[this.tablepack_size.nameColumn]));
                }
                set {
                    this[this.tablepack_size.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["FK_Model_info_pack_size"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Model_info_pack_size"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pack_size_distRow[] Getpack_size_distRows() {
                if ((this.Table.ChildRelations["FK_pack_size_dist_pack_size"] == null)) {
                    return new pack_size_distRow[0];
                }
                else {
                    return ((pack_size_distRow[])(base.GetChildRows(this.Table.ChildRelations["FK_pack_size_dist_pack_size"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public productRow[] GetproductRows() {
                if ((this.Table.ChildRelations["FK_pack_size_product"] == null)) {
                    return new productRow[0];
                }
                else {
                    return ((productRow[])(base.GetChildRows(this.Table.ChildRelations["FK_pack_size_product"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class price_typeRow : global::System.Data.DataRow {
            
            private price_typeDataTable tableprice_type;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal price_typeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableprice_type = ((price_typeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tableprice_type.idColumn]));
                }
                set {
                    this[this.tableprice_type.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    try {
                        return ((int)(this[this.tableprice_type.model_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'model_id\' in table \'price_type\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprice_type.model_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tableprice_type.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'name\' in table \'price_type\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprice_type.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool relative {
                get {
                    try {
                        return ((bool)(this[this.tableprice_type.relativeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'relative\' in table \'price_type\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprice_type.relativeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double awareness {
                get {
                    try {
                        return ((double)(this[this.tableprice_type.awarenessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'awareness\' in table \'price_type\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprice_type.awarenessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double persuasion {
                get {
                    try {
                        return ((double)(this[this.tableprice_type.persuasionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'persuasion\' in table \'price_type\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprice_type.persuasionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BOGN {
                get {
                    return ((int)(this[this.tableprice_type.BOGNColumn]));
                }
                set {
                    this[this.tableprice_type.BOGNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Model_infoRow {
                get {
                    return ((Model_infoRow)(this.GetParentRow(this.Table.ParentRelations["FK_Model_info_price_type"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Model_info_price_type"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismodel_idNull() {
                return this.IsNull(this.tableprice_type.model_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmodel_idNull() {
                this[this.tableprice_type.model_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tableprice_type.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tableprice_type.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrelativeNull() {
                return this.IsNull(this.tableprice_type.relativeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrelativeNull() {
                this[this.tableprice_type.relativeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsawarenessNull() {
                return this.IsNull(this.tableprice_type.awarenessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetawarenessNull() {
                this[this.tableprice_type.awarenessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspersuasionNull() {
                return this.IsNull(this.tableprice_type.persuasionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpersuasionNull() {
                this[this.tableprice_type.persuasionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segment_price_utilityRow[] Getsegment_price_utilityRows() {
                if ((this.Table.ChildRelations["FK_price_type_segment_price_utility"] == null)) {
                    return new segment_price_utilityRow[0];
                }
                else {
                    return ((segment_price_utilityRow[])(base.GetChildRows(this.Table.ChildRelations["FK_price_type_segment_price_utility"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_channelRow[] Getproduct_channelRows() {
                if ((this.Table.ChildRelations["FK_price_type_product_channel"] == null)) {
                    return new product_channelRow[0];
                }
                else {
                    return ((product_channelRow[])(base.GetChildRows(this.Table.ChildRelations["FK_price_type_product_channel"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class segment_price_utilityRow : global::System.Data.DataRow {
            
            private segment_price_utilityDataTable tablesegment_price_utility;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal segment_price_utilityRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesegment_price_utility = ((segment_price_utilityDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int segment_id {
                get {
                    try {
                        return ((int)(this[this.tablesegment_price_utility.segment_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'segment_id\' in table \'segment_price_utility\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment_price_utility.segment_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int price_type_id {
                get {
                    try {
                        return ((int)(this[this.tablesegment_price_utility.price_type_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'price_type_id\' in table \'segment_price_utility\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment_price_utility.price_type_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double util {
                get {
                    try {
                        return ((double)(this[this.tablesegment_price_utility.utilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'util\' in table \'segment_price_utility\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesegment_price_utility.utilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segmentRow segmentRow {
                get {
                    return ((segmentRow)(this.GetParentRow(this.Table.ParentRelations["FK_segment_segment_price_utility"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_segment_segment_price_utility"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public price_typeRow price_typeRow {
                get {
                    return ((price_typeRow)(this.GetParentRow(this.Table.ParentRelations["FK_price_type_segment_price_utility"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_price_type_segment_price_utility"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issegment_idNull() {
                return this.IsNull(this.tablesegment_price_utility.segment_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsegment_idNull() {
                this[this.tablesegment_price_utility.segment_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isprice_type_idNull() {
                return this.IsNull(this.tablesegment_price_utility.price_type_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setprice_type_idNull() {
                this[this.tablesegment_price_utility.price_type_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsutilNull() {
                return this.IsNull(this.tablesegment_price_utility.utilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetutilNull() {
                this[this.tablesegment_price_utility.utilColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class pack_size_distRowChangeEvent : global::System.EventArgs {
            
            private pack_size_distRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pack_size_distRowChangeEvent(pack_size_distRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pack_size_distRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class channelRowChangeEvent : global::System.EventArgs {
            
            private channelRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public channelRowChangeEvent(channelRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public channelRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class product_matrixRowChangeEvent : global::System.EventArgs {
            
            private product_matrixRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_matrixRowChangeEvent(product_matrixRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_matrixRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class segmentRowChangeEvent : global::System.EventArgs {
            
            private segmentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segmentRowChangeEvent(segmentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segmentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class segment_channelRowChangeEvent : global::System.EventArgs {
            
            private segment_channelRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segment_channelRowChangeEvent(segment_channelRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segment_channelRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class share_pen_brand_awareRowChangeEvent : global::System.EventArgs {
            
            private share_pen_brand_awareRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public share_pen_brand_awareRowChangeEvent(share_pen_brand_awareRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public share_pen_brand_awareRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class task_rate_factRowChangeEvent : global::System.EventArgs {
            
            private task_rate_factRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public task_rate_factRowChangeEvent(task_rate_factRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public task_rate_factRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class productRowChangeEvent : global::System.EventArgs {
            
            private productRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public productRowChangeEvent(productRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public productRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class product_channelRowChangeEvent : global::System.EventArgs {
            
            private product_channelRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_channelRowChangeEvent(product_channelRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_channelRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class taskRowChangeEvent : global::System.EventArgs {
            
            private taskRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taskRowChangeEvent(taskRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public taskRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class task_product_factRowChangeEvent : global::System.EventArgs {
            
            private task_product_factRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public task_product_factRowChangeEvent(task_product_factRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public task_product_factRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class product_attributeRowChangeEvent : global::System.EventArgs {
            
            private product_attributeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_attributeRowChangeEvent(product_attributeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_attributeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class product_attribute_valueRowChangeEvent : global::System.EventArgs {
            
            private product_attribute_valueRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_attribute_valueRowChangeEvent(product_attribute_valueRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_attribute_valueRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class consumer_preferenceRowChangeEvent : global::System.EventArgs {
            
            private consumer_preferenceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public consumer_preferenceRowChangeEvent(consumer_preferenceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public consumer_preferenceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class distributionRowChangeEvent : global::System.EventArgs {
            
            private distributionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public distributionRowChangeEvent(distributionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public distributionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class displayRowChangeEvent : global::System.EventArgs {
            
            private displayRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public displayRowChangeEvent(displayRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public displayRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class mass_mediaRowChangeEvent : global::System.EventArgs {
            
            private mass_mediaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mass_mediaRowChangeEvent(mass_mediaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mass_mediaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class product_eventRowChangeEvent : global::System.EventArgs {
            
            private product_eventRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_eventRowChangeEvent(product_eventRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_eventRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class task_eventRowChangeEvent : global::System.EventArgs {
            
            private task_eventRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public task_eventRowChangeEvent(task_eventRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public task_eventRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Model_infoRowChangeEvent : global::System.EventArgs {
            
            private Model_infoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRowChangeEvent(Model_infoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Model_infoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class market_planRowChangeEvent : global::System.EventArgs {
            
            private market_planRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_planRowChangeEvent(market_planRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_planRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class market_plan_treeRowChangeEvent : global::System.EventArgs {
            
            private market_plan_treeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_plan_treeRowChangeEvent(market_plan_treeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_plan_treeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class scenarioRowChangeEvent : global::System.EventArgs {
            
            private scenarioRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenarioRowChangeEvent(scenarioRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenarioRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class scenario_market_planRowChangeEvent : global::System.EventArgs {
            
            private scenario_market_planRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_market_planRowChangeEvent(scenario_market_planRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_market_planRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class network_parameterRowChangeEvent : global::System.EventArgs {
            
            private network_parameterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public network_parameterRowChangeEvent(network_parameterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public network_parameterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class segment_networkRowChangeEvent : global::System.EventArgs {
            
            private segment_networkRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segment_networkRowChangeEvent(segment_networkRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segment_networkRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class external_dataRowChangeEvent : global::System.EventArgs {
            
            private external_dataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public external_dataRowChangeEvent(external_dataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public external_dataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class model_parameterRowChangeEvent : global::System.EventArgs {
            
            private model_parameterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public model_parameterRowChangeEvent(model_parameterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public model_parameterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class market_utilityRowChangeEvent : global::System.EventArgs {
            
            private market_utilityRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_utilityRowChangeEvent(market_utilityRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public market_utilityRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class product_treeRowChangeEvent : global::System.EventArgs {
            
            private product_treeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_treeRowChangeEvent(product_treeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_treeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class product_typeRowChangeEvent : global::System.EventArgs {
            
            private product_typeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_typeRowChangeEvent(product_typeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_typeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class projectRowChangeEvent : global::System.EventArgs {
            
            private projectRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public projectRowChangeEvent(projectRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public projectRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class simulationRowChangeEvent : global::System.EventArgs {
            
            private simulationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public simulationRowChangeEvent(simulationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public simulationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class sim_queueRowChangeEvent : global::System.EventArgs {
            
            private sim_queueRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sim_queueRowChangeEvent(sim_queueRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sim_queueRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class scenario_variableRowChangeEvent : global::System.EventArgs {
            
            private scenario_variableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_variableRowChangeEvent(scenario_variableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_variableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class sim_variable_valueRowChangeEvent : global::System.EventArgs {
            
            private sim_variable_valueRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sim_variable_valueRowChangeEvent(sim_variable_valueRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sim_variable_valueRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class scenario_parameterRowChangeEvent : global::System.EventArgs {
            
            private scenario_parameterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_parameterRowChangeEvent(scenario_parameterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_parameterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class scenario_metricRowChangeEvent : global::System.EventArgs {
            
            private scenario_metricRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_metricRowChangeEvent(scenario_metricRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_metricRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class scenario_simseedRowChangeEvent : global::System.EventArgs {
            
            private scenario_simseedRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_simseedRowChangeEvent(scenario_simseedRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public scenario_simseedRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class run_logRowChangeEvent : global::System.EventArgs {
            
            private run_logRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public run_logRowChangeEvent(run_logRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public run_logRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class product_channel_sizeRowChangeEvent : global::System.EventArgs {
            
            private product_channel_sizeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_channel_sizeRowChangeEvent(product_channel_sizeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public product_channel_sizeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class db_schema_infoRowChangeEvent : global::System.EventArgs {
            
            private db_schema_infoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public db_schema_infoRowChangeEvent(db_schema_infoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public db_schema_infoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class simulation_statusRowChangeEvent : global::System.EventArgs {
            
            private simulation_statusRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public simulation_statusRowChangeEvent(simulation_statusRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public simulation_statusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class results_statusRowChangeEvent : global::System.EventArgs {
            
            private results_statusRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public results_statusRowChangeEvent(results_statusRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public results_statusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class pack_sizeRowChangeEvent : global::System.EventArgs {
            
            private pack_sizeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pack_sizeRowChangeEvent(pack_sizeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public pack_sizeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class price_typeRowChangeEvent : global::System.EventArgs {
            
            private price_typeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public price_typeRowChangeEvent(price_typeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public price_typeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class segment_price_utilityRowChangeEvent : global::System.EventArgs {
            
            private segment_price_utilityRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segment_price_utilityRowChangeEvent(segment_price_utilityRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public segment_price_utilityRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace MrktSimDb.MrktSimDBSchemaTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class pack_size_distTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public pack_size_distTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "pack_size_dist";
            tableMapping.ColumnMappings.Add("pack_size_id", "pack_size_id");
            tableMapping.ColumnMappings.Add("size", "size");
            tableMapping.ColumnMappings.Add("dist", "dist");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[pack_size_dist] ([pack_size_id], [size], [dist]) VALUES (@pack" +
                "_size_id, @size, @dist)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pack_size_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pack_size_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@size", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "size", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dist", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dist", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::MrktSimDb.Properties.Settings.Default.NIMORegressionConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT pack_size_id, size, dist FROM dbo.pack_size_dist";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MrktSimDBSchema.pack_size_distDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MrktSimDBSchema.pack_size_distDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MrktSimDBSchema.pack_size_distDataTable dataTable = new MrktSimDBSchema.pack_size_distDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MrktSimDBSchema.pack_size_distDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MrktSimDBSchema dataSet) {
            return this.Adapter.Update(dataSet, "pack_size_dist");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int pack_size_id, int size, double dist) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(pack_size_id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(size));
            this.Adapter.InsertCommand.Parameters[2].Value = ((double)(dist));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
}

#pragma warning restore 1591