//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace MrktSimDb {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("OptInfo")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class OptInfo : System.Data.DataSet {
        
        private optimization_explore_modeDataTable tableoptimization_explore_mode;
        
        private optimization_mode_execDataTable tableoptimization_mode_exec;
        
        private optimization_optimize_forDataTable tableoptimization_optimize_for;
        
        private optimization_paramsDataTable tableoptimization_params;
        
        private optimization_planDataTable tableoptimization_plan;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OptInfo() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected OptInfo(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["optimization_explore_mode"] != null)) {
                    base.Tables.Add(new optimization_explore_modeDataTable(ds.Tables["optimization_explore_mode"]));
                }
                if ((ds.Tables["optimization_mode_exec"] != null)) {
                    base.Tables.Add(new optimization_mode_execDataTable(ds.Tables["optimization_mode_exec"]));
                }
                if ((ds.Tables["optimization_optimize_for"] != null)) {
                    base.Tables.Add(new optimization_optimize_forDataTable(ds.Tables["optimization_optimize_for"]));
                }
                if ((ds.Tables["optimization_params"] != null)) {
                    base.Tables.Add(new optimization_paramsDataTable(ds.Tables["optimization_params"]));
                }
                if ((ds.Tables["optimization_plan"] != null)) {
                    base.Tables.Add(new optimization_planDataTable(ds.Tables["optimization_plan"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public optimization_explore_modeDataTable optimization_explore_mode {
            get {
                return this.tableoptimization_explore_mode;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public optimization_mode_execDataTable optimization_mode_exec {
            get {
                return this.tableoptimization_mode_exec;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public optimization_optimize_forDataTable optimization_optimize_for {
            get {
                return this.tableoptimization_optimize_for;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public optimization_paramsDataTable optimization_params {
            get {
                return this.tableoptimization_params;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public optimization_planDataTable optimization_plan {
            get {
                return this.tableoptimization_plan;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            OptInfo cln = ((OptInfo)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["optimization_explore_mode"] != null)) {
                    base.Tables.Add(new optimization_explore_modeDataTable(ds.Tables["optimization_explore_mode"]));
                }
                if ((ds.Tables["optimization_mode_exec"] != null)) {
                    base.Tables.Add(new optimization_mode_execDataTable(ds.Tables["optimization_mode_exec"]));
                }
                if ((ds.Tables["optimization_optimize_for"] != null)) {
                    base.Tables.Add(new optimization_optimize_forDataTable(ds.Tables["optimization_optimize_for"]));
                }
                if ((ds.Tables["optimization_params"] != null)) {
                    base.Tables.Add(new optimization_paramsDataTable(ds.Tables["optimization_params"]));
                }
                if ((ds.Tables["optimization_plan"] != null)) {
                    base.Tables.Add(new optimization_planDataTable(ds.Tables["optimization_plan"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableoptimization_explore_mode = ((optimization_explore_modeDataTable)(base.Tables["optimization_explore_mode"]));
            if ((initTable == true)) {
                if ((this.tableoptimization_explore_mode != null)) {
                    this.tableoptimization_explore_mode.InitVars();
                }
            }
            this.tableoptimization_mode_exec = ((optimization_mode_execDataTable)(base.Tables["optimization_mode_exec"]));
            if ((initTable == true)) {
                if ((this.tableoptimization_mode_exec != null)) {
                    this.tableoptimization_mode_exec.InitVars();
                }
            }
            this.tableoptimization_optimize_for = ((optimization_optimize_forDataTable)(base.Tables["optimization_optimize_for"]));
            if ((initTable == true)) {
                if ((this.tableoptimization_optimize_for != null)) {
                    this.tableoptimization_optimize_for.InitVars();
                }
            }
            this.tableoptimization_params = ((optimization_paramsDataTable)(base.Tables["optimization_params"]));
            if ((initTable == true)) {
                if ((this.tableoptimization_params != null)) {
                    this.tableoptimization_params.InitVars();
                }
            }
            this.tableoptimization_plan = ((optimization_planDataTable)(base.Tables["optimization_plan"]));
            if ((initTable == true)) {
                if ((this.tableoptimization_plan != null)) {
                    this.tableoptimization_plan.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "OptInfo";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/OptInfo.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableoptimization_explore_mode = new optimization_explore_modeDataTable();
            base.Tables.Add(this.tableoptimization_explore_mode);
            this.tableoptimization_mode_exec = new optimization_mode_execDataTable();
            base.Tables.Add(this.tableoptimization_mode_exec);
            this.tableoptimization_optimize_for = new optimization_optimize_forDataTable();
            base.Tables.Add(this.tableoptimization_optimize_for);
            this.tableoptimization_params = new optimization_paramsDataTable();
            base.Tables.Add(this.tableoptimization_params);
            this.tableoptimization_plan = new optimization_planDataTable();
            base.Tables.Add(this.tableoptimization_plan);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeoptimization_explore_mode() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeoptimization_mode_exec() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeoptimization_optimize_for() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeoptimization_params() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeoptimization_plan() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            OptInfo ds = new OptInfo();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void optimization_explore_modeRowChangeEventHandler(object sender, optimization_explore_modeRowChangeEvent e);
        
        public delegate void optimization_mode_execRowChangeEventHandler(object sender, optimization_mode_execRowChangeEvent e);
        
        public delegate void optimization_optimize_forRowChangeEventHandler(object sender, optimization_optimize_forRowChangeEvent e);
        
        public delegate void optimization_paramsRowChangeEventHandler(object sender, optimization_paramsRowChangeEvent e);
        
        public delegate void optimization_planRowChangeEventHandler(object sender, optimization_planRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class optimization_explore_modeDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnexplore_mode_id;
            
            private System.Data.DataColumn columnexplore_mode;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_explore_modeDataTable() {
                this.TableName = "optimization_explore_mode";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal optimization_explore_modeDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected optimization_explore_modeDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn explore_mode_idColumn {
                get {
                    return this.columnexplore_mode_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn explore_modeColumn {
                get {
                    return this.columnexplore_mode;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_explore_modeRow this[int index] {
                get {
                    return ((optimization_explore_modeRow)(this.Rows[index]));
                }
            }
            
            public event optimization_explore_modeRowChangeEventHandler optimization_explore_modeRowChanging;
            
            public event optimization_explore_modeRowChangeEventHandler optimization_explore_modeRowChanged;
            
            public event optimization_explore_modeRowChangeEventHandler optimization_explore_modeRowDeleting;
            
            public event optimization_explore_modeRowChangeEventHandler optimization_explore_modeRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addoptimization_explore_modeRow(optimization_explore_modeRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_explore_modeRow Addoptimization_explore_modeRow(byte explore_mode_id, string explore_mode) {
                optimization_explore_modeRow rowoptimization_explore_modeRow = ((optimization_explore_modeRow)(this.NewRow()));
                rowoptimization_explore_modeRow.ItemArray = new object[] {
                        explore_mode_id,
                        explore_mode};
                this.Rows.Add(rowoptimization_explore_modeRow);
                return rowoptimization_explore_modeRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                optimization_explore_modeDataTable cln = ((optimization_explore_modeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new optimization_explore_modeDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnexplore_mode_id = base.Columns["explore_mode_id"];
                this.columnexplore_mode = base.Columns["explore_mode"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnexplore_mode_id = new System.Data.DataColumn("explore_mode_id", typeof(byte), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnexplore_mode_id);
                this.columnexplore_mode = new System.Data.DataColumn("explore_mode", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnexplore_mode);
                this.columnexplore_mode_id.AllowDBNull = false;
                this.columnexplore_mode.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_explore_modeRow Newoptimization_explore_modeRow() {
                return ((optimization_explore_modeRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new optimization_explore_modeRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(optimization_explore_modeRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.optimization_explore_modeRowChanged != null)) {
                    this.optimization_explore_modeRowChanged(this, new optimization_explore_modeRowChangeEvent(((optimization_explore_modeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.optimization_explore_modeRowChanging != null)) {
                    this.optimization_explore_modeRowChanging(this, new optimization_explore_modeRowChangeEvent(((optimization_explore_modeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.optimization_explore_modeRowDeleted != null)) {
                    this.optimization_explore_modeRowDeleted(this, new optimization_explore_modeRowChangeEvent(((optimization_explore_modeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.optimization_explore_modeRowDeleting != null)) {
                    this.optimization_explore_modeRowDeleting(this, new optimization_explore_modeRowChangeEvent(((optimization_explore_modeRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeoptimization_explore_modeRow(optimization_explore_modeRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                OptInfo ds = new OptInfo();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "optimization_explore_modeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class optimization_mode_execDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnmode_exec_id;
            
            private System.Data.DataColumn columnmode_exec;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_mode_execDataTable() {
                this.TableName = "optimization_mode_exec";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal optimization_mode_execDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected optimization_mode_execDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn mode_exec_idColumn {
                get {
                    return this.columnmode_exec_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn mode_execColumn {
                get {
                    return this.columnmode_exec;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_mode_execRow this[int index] {
                get {
                    return ((optimization_mode_execRow)(this.Rows[index]));
                }
            }
            
            public event optimization_mode_execRowChangeEventHandler optimization_mode_execRowChanging;
            
            public event optimization_mode_execRowChangeEventHandler optimization_mode_execRowChanged;
            
            public event optimization_mode_execRowChangeEventHandler optimization_mode_execRowDeleting;
            
            public event optimization_mode_execRowChangeEventHandler optimization_mode_execRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addoptimization_mode_execRow(optimization_mode_execRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_mode_execRow Addoptimization_mode_execRow(byte mode_exec_id, string mode_exec) {
                optimization_mode_execRow rowoptimization_mode_execRow = ((optimization_mode_execRow)(this.NewRow()));
                rowoptimization_mode_execRow.ItemArray = new object[] {
                        mode_exec_id,
                        mode_exec};
                this.Rows.Add(rowoptimization_mode_execRow);
                return rowoptimization_mode_execRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                optimization_mode_execDataTable cln = ((optimization_mode_execDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new optimization_mode_execDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmode_exec_id = base.Columns["mode_exec_id"];
                this.columnmode_exec = base.Columns["mode_exec"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmode_exec_id = new System.Data.DataColumn("mode_exec_id", typeof(byte), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmode_exec_id);
                this.columnmode_exec = new System.Data.DataColumn("mode_exec", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmode_exec);
                this.columnmode_exec_id.AllowDBNull = false;
                this.columnmode_exec.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_mode_execRow Newoptimization_mode_execRow() {
                return ((optimization_mode_execRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new optimization_mode_execRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(optimization_mode_execRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.optimization_mode_execRowChanged != null)) {
                    this.optimization_mode_execRowChanged(this, new optimization_mode_execRowChangeEvent(((optimization_mode_execRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.optimization_mode_execRowChanging != null)) {
                    this.optimization_mode_execRowChanging(this, new optimization_mode_execRowChangeEvent(((optimization_mode_execRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.optimization_mode_execRowDeleted != null)) {
                    this.optimization_mode_execRowDeleted(this, new optimization_mode_execRowChangeEvent(((optimization_mode_execRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.optimization_mode_execRowDeleting != null)) {
                    this.optimization_mode_execRowDeleting(this, new optimization_mode_execRowChangeEvent(((optimization_mode_execRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeoptimization_mode_execRow(optimization_mode_execRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                OptInfo ds = new OptInfo();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "optimization_mode_execDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class optimization_optimize_forDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnoptimize_for_id;
            
            private System.Data.DataColumn columnoptimize_for;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_optimize_forDataTable() {
                this.TableName = "optimization_optimize_for";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal optimization_optimize_forDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected optimization_optimize_forDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn optimize_for_idColumn {
                get {
                    return this.columnoptimize_for_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn optimize_forColumn {
                get {
                    return this.columnoptimize_for;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_optimize_forRow this[int index] {
                get {
                    return ((optimization_optimize_forRow)(this.Rows[index]));
                }
            }
            
            public event optimization_optimize_forRowChangeEventHandler optimization_optimize_forRowChanging;
            
            public event optimization_optimize_forRowChangeEventHandler optimization_optimize_forRowChanged;
            
            public event optimization_optimize_forRowChangeEventHandler optimization_optimize_forRowDeleting;
            
            public event optimization_optimize_forRowChangeEventHandler optimization_optimize_forRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addoptimization_optimize_forRow(optimization_optimize_forRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_optimize_forRow Addoptimization_optimize_forRow(byte optimize_for_id, string optimize_for) {
                optimization_optimize_forRow rowoptimization_optimize_forRow = ((optimization_optimize_forRow)(this.NewRow()));
                rowoptimization_optimize_forRow.ItemArray = new object[] {
                        optimize_for_id,
                        optimize_for};
                this.Rows.Add(rowoptimization_optimize_forRow);
                return rowoptimization_optimize_forRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                optimization_optimize_forDataTable cln = ((optimization_optimize_forDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new optimization_optimize_forDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnoptimize_for_id = base.Columns["optimize_for_id"];
                this.columnoptimize_for = base.Columns["optimize_for"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnoptimize_for_id = new System.Data.DataColumn("optimize_for_id", typeof(byte), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnoptimize_for_id);
                this.columnoptimize_for = new System.Data.DataColumn("optimize_for", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnoptimize_for);
                this.columnoptimize_for_id.AllowDBNull = false;
                this.columnoptimize_for.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_optimize_forRow Newoptimization_optimize_forRow() {
                return ((optimization_optimize_forRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new optimization_optimize_forRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(optimization_optimize_forRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.optimization_optimize_forRowChanged != null)) {
                    this.optimization_optimize_forRowChanged(this, new optimization_optimize_forRowChangeEvent(((optimization_optimize_forRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.optimization_optimize_forRowChanging != null)) {
                    this.optimization_optimize_forRowChanging(this, new optimization_optimize_forRowChangeEvent(((optimization_optimize_forRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.optimization_optimize_forRowDeleted != null)) {
                    this.optimization_optimize_forRowDeleted(this, new optimization_optimize_forRowChangeEvent(((optimization_optimize_forRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.optimization_optimize_forRowDeleting != null)) {
                    this.optimization_optimize_forRowDeleting(this, new optimization_optimize_forRowChangeEvent(((optimization_optimize_forRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeoptimization_optimize_forRow(optimization_optimize_forRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                OptInfo ds = new OptInfo();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "optimization_optimize_forDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class optimization_paramsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnmodel_id;
            
            private System.Data.DataColumn columnscenario_id;
            
            private System.Data.DataColumn columncomponent_name;
            
            private System.Data.DataColumn columnparameter;
            
            private System.Data.DataColumn columnlower;
            
            private System.Data.DataColumn columnupper;
            
            private System.Data.DataColumn columnleader;
            
            private System.Data.DataColumn columnslave;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_paramsDataTable() {
                this.TableName = "optimization_params";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal optimization_paramsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected optimization_paramsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn model_idColumn {
                get {
                    return this.columnmodel_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn scenario_idColumn {
                get {
                    return this.columnscenario_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn component_nameColumn {
                get {
                    return this.columncomponent_name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn parameterColumn {
                get {
                    return this.columnparameter;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn lowerColumn {
                get {
                    return this.columnlower;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn upperColumn {
                get {
                    return this.columnupper;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn leaderColumn {
                get {
                    return this.columnleader;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn slaveColumn {
                get {
                    return this.columnslave;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_paramsRow this[int index] {
                get {
                    return ((optimization_paramsRow)(this.Rows[index]));
                }
            }
            
            public event optimization_paramsRowChangeEventHandler optimization_paramsRowChanging;
            
            public event optimization_paramsRowChangeEventHandler optimization_paramsRowChanged;
            
            public event optimization_paramsRowChangeEventHandler optimization_paramsRowDeleting;
            
            public event optimization_paramsRowChangeEventHandler optimization_paramsRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addoptimization_paramsRow(optimization_paramsRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_paramsRow Addoptimization_paramsRow(int model_id, int scenario_id, string component_name, string parameter, double lower, double upper, bool leader, bool slave) {
                optimization_paramsRow rowoptimization_paramsRow = ((optimization_paramsRow)(this.NewRow()));
                rowoptimization_paramsRow.ItemArray = new object[] {
                        model_id,
                        scenario_id,
                        component_name,
                        parameter,
                        lower,
                        upper,
                        leader,
                        slave};
                this.Rows.Add(rowoptimization_paramsRow);
                return rowoptimization_paramsRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                optimization_paramsDataTable cln = ((optimization_paramsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new optimization_paramsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmodel_id = base.Columns["model_id"];
                this.columnscenario_id = base.Columns["scenario_id"];
                this.columncomponent_name = base.Columns["component_name"];
                this.columnparameter = base.Columns["parameter"];
                this.columnlower = base.Columns["lower"];
                this.columnupper = base.Columns["upper"];
                this.columnleader = base.Columns["leader"];
                this.columnslave = base.Columns["slave"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmodel_id = new System.Data.DataColumn("model_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel_id);
                this.columnscenario_id = new System.Data.DataColumn("scenario_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnscenario_id);
                this.columncomponent_name = new System.Data.DataColumn("component_name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columncomponent_name);
                this.columnparameter = new System.Data.DataColumn("parameter", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnparameter);
                this.columnlower = new System.Data.DataColumn("lower", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnlower);
                this.columnupper = new System.Data.DataColumn("upper", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnupper);
                this.columnleader = new System.Data.DataColumn("leader", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnleader);
                this.columnslave = new System.Data.DataColumn("slave", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnslave);
                this.columnmodel_id.AllowDBNull = false;
                this.columnscenario_id.AllowDBNull = false;
                this.columncomponent_name.AllowDBNull = false;
                this.columnparameter.AllowDBNull = false;
                this.columnlower.AllowDBNull = false;
                this.columnupper.AllowDBNull = false;
                this.columnleader.AllowDBNull = false;
                this.columnslave.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_paramsRow Newoptimization_paramsRow() {
                return ((optimization_paramsRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new optimization_paramsRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(optimization_paramsRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.optimization_paramsRowChanged != null)) {
                    this.optimization_paramsRowChanged(this, new optimization_paramsRowChangeEvent(((optimization_paramsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.optimization_paramsRowChanging != null)) {
                    this.optimization_paramsRowChanging(this, new optimization_paramsRowChangeEvent(((optimization_paramsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.optimization_paramsRowDeleted != null)) {
                    this.optimization_paramsRowDeleted(this, new optimization_paramsRowChangeEvent(((optimization_paramsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.optimization_paramsRowDeleting != null)) {
                    this.optimization_paramsRowDeleting(this, new optimization_paramsRowChangeEvent(((optimization_paramsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeoptimization_paramsRow(optimization_paramsRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                OptInfo ds = new OptInfo();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "optimization_paramsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class optimization_planDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnscenario_id;
            
            private System.Data.DataColumn columnscenario_name;
            
            private System.Data.DataColumn columnoptimize_for;
            
            private System.Data.DataColumn columnnum_steps;
            
            private System.Data.DataColumn columnmode_exec_id;
            
            private System.Data.DataColumn columnexplore_mode_id;
            
            private System.Data.DataColumn columnis_active;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_planDataTable() {
                this.TableName = "optimization_plan";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal optimization_planDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected optimization_planDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn scenario_idColumn {
                get {
                    return this.columnscenario_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn scenario_nameColumn {
                get {
                    return this.columnscenario_name;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn optimize_forColumn {
                get {
                    return this.columnoptimize_for;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn num_stepsColumn {
                get {
                    return this.columnnum_steps;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn mode_exec_idColumn {
                get {
                    return this.columnmode_exec_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn explore_mode_idColumn {
                get {
                    return this.columnexplore_mode_id;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn is_activeColumn {
                get {
                    return this.columnis_active;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_planRow this[int index] {
                get {
                    return ((optimization_planRow)(this.Rows[index]));
                }
            }
            
            public event optimization_planRowChangeEventHandler optimization_planRowChanging;
            
            public event optimization_planRowChangeEventHandler optimization_planRowChanged;
            
            public event optimization_planRowChangeEventHandler optimization_planRowDeleting;
            
            public event optimization_planRowChangeEventHandler optimization_planRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addoptimization_planRow(optimization_planRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_planRow Addoptimization_planRow(string scenario_name, byte optimize_for, int num_steps, byte mode_exec_id, byte explore_mode_id, bool is_active) {
                optimization_planRow rowoptimization_planRow = ((optimization_planRow)(this.NewRow()));
                rowoptimization_planRow.ItemArray = new object[] {
                        null,
                        scenario_name,
                        optimize_for,
                        num_steps,
                        mode_exec_id,
                        explore_mode_id,
                        is_active};
                this.Rows.Add(rowoptimization_planRow);
                return rowoptimization_planRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_planRow FindByscenario_id(int scenario_id) {
                return ((optimization_planRow)(this.Rows.Find(new object[] {
                            scenario_id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                optimization_planDataTable cln = ((optimization_planDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new optimization_planDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnscenario_id = base.Columns["scenario_id"];
                this.columnscenario_name = base.Columns["scenario_name"];
                this.columnoptimize_for = base.Columns["optimize_for"];
                this.columnnum_steps = base.Columns["num_steps"];
                this.columnmode_exec_id = base.Columns["mode_exec_id"];
                this.columnexplore_mode_id = base.Columns["explore_mode_id"];
                this.columnis_active = base.Columns["is_active"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnscenario_id = new System.Data.DataColumn("scenario_id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnscenario_id);
                this.columnscenario_name = new System.Data.DataColumn("scenario_name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnscenario_name);
                this.columnoptimize_for = new System.Data.DataColumn("optimize_for", typeof(byte), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnoptimize_for);
                this.columnnum_steps = new System.Data.DataColumn("num_steps", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnnum_steps);
                this.columnmode_exec_id = new System.Data.DataColumn("mode_exec_id", typeof(byte), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnmode_exec_id);
                this.columnexplore_mode_id = new System.Data.DataColumn("explore_mode_id", typeof(byte), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnexplore_mode_id);
                this.columnis_active = new System.Data.DataColumn("is_active", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_active);
                this.Constraints.Add(new System.Data.UniqueConstraint("OptInfoKey1", new System.Data.DataColumn[] {
                                this.columnscenario_id}, true));
                this.columnscenario_id.AutoIncrement = true;
                this.columnscenario_id.AllowDBNull = false;
                this.columnscenario_id.ReadOnly = true;
                this.columnscenario_id.Unique = true;
                this.columnscenario_name.AllowDBNull = false;
                this.columnoptimize_for.AllowDBNull = false;
                this.columnnum_steps.AllowDBNull = false;
                this.columnmode_exec_id.AllowDBNull = false;
                this.columnexplore_mode_id.AllowDBNull = false;
                this.columnis_active.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_planRow Newoptimization_planRow() {
                return ((optimization_planRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new optimization_planRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(optimization_planRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.optimization_planRowChanged != null)) {
                    this.optimization_planRowChanged(this, new optimization_planRowChangeEvent(((optimization_planRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.optimization_planRowChanging != null)) {
                    this.optimization_planRowChanging(this, new optimization_planRowChangeEvent(((optimization_planRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.optimization_planRowDeleted != null)) {
                    this.optimization_planRowDeleted(this, new optimization_planRowChangeEvent(((optimization_planRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.optimization_planRowDeleting != null)) {
                    this.optimization_planRowDeleting(this, new optimization_planRowChangeEvent(((optimization_planRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeoptimization_planRow(optimization_planRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                OptInfo ds = new OptInfo();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "optimization_planDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class optimization_explore_modeRow : System.Data.DataRow {
            
            private optimization_explore_modeDataTable tableoptimization_explore_mode;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal optimization_explore_modeRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableoptimization_explore_mode = ((optimization_explore_modeDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte explore_mode_id {
                get {
                    return ((byte)(this[this.tableoptimization_explore_mode.explore_mode_idColumn]));
                }
                set {
                    this[this.tableoptimization_explore_mode.explore_mode_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string explore_mode {
                get {
                    return ((string)(this[this.tableoptimization_explore_mode.explore_modeColumn]));
                }
                set {
                    this[this.tableoptimization_explore_mode.explore_modeColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class optimization_mode_execRow : System.Data.DataRow {
            
            private optimization_mode_execDataTable tableoptimization_mode_exec;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal optimization_mode_execRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableoptimization_mode_exec = ((optimization_mode_execDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte mode_exec_id {
                get {
                    return ((byte)(this[this.tableoptimization_mode_exec.mode_exec_idColumn]));
                }
                set {
                    this[this.tableoptimization_mode_exec.mode_exec_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mode_exec {
                get {
                    return ((string)(this[this.tableoptimization_mode_exec.mode_execColumn]));
                }
                set {
                    this[this.tableoptimization_mode_exec.mode_execColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class optimization_optimize_forRow : System.Data.DataRow {
            
            private optimization_optimize_forDataTable tableoptimization_optimize_for;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal optimization_optimize_forRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableoptimization_optimize_for = ((optimization_optimize_forDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte optimize_for_id {
                get {
                    return ((byte)(this[this.tableoptimization_optimize_for.optimize_for_idColumn]));
                }
                set {
                    this[this.tableoptimization_optimize_for.optimize_for_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string optimize_for {
                get {
                    return ((string)(this[this.tableoptimization_optimize_for.optimize_forColumn]));
                }
                set {
                    this[this.tableoptimization_optimize_for.optimize_forColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class optimization_paramsRow : System.Data.DataRow {
            
            private optimization_paramsDataTable tableoptimization_params;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal optimization_paramsRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableoptimization_params = ((optimization_paramsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int model_id {
                get {
                    return ((int)(this[this.tableoptimization_params.model_idColumn]));
                }
                set {
                    this[this.tableoptimization_params.model_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int scenario_id {
                get {
                    return ((int)(this[this.tableoptimization_params.scenario_idColumn]));
                }
                set {
                    this[this.tableoptimization_params.scenario_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string component_name {
                get {
                    return ((string)(this[this.tableoptimization_params.component_nameColumn]));
                }
                set {
                    this[this.tableoptimization_params.component_nameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string parameter {
                get {
                    return ((string)(this[this.tableoptimization_params.parameterColumn]));
                }
                set {
                    this[this.tableoptimization_params.parameterColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double lower {
                get {
                    return ((double)(this[this.tableoptimization_params.lowerColumn]));
                }
                set {
                    this[this.tableoptimization_params.lowerColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double upper {
                get {
                    return ((double)(this[this.tableoptimization_params.upperColumn]));
                }
                set {
                    this[this.tableoptimization_params.upperColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool leader {
                get {
                    return ((bool)(this[this.tableoptimization_params.leaderColumn]));
                }
                set {
                    this[this.tableoptimization_params.leaderColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool slave {
                get {
                    return ((bool)(this[this.tableoptimization_params.slaveColumn]));
                }
                set {
                    this[this.tableoptimization_params.slaveColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class optimization_planRow : System.Data.DataRow {
            
            private optimization_planDataTable tableoptimization_plan;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal optimization_planRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableoptimization_plan = ((optimization_planDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int scenario_id {
                get {
                    return ((int)(this[this.tableoptimization_plan.scenario_idColumn]));
                }
                set {
                    this[this.tableoptimization_plan.scenario_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string scenario_name {
                get {
                    return ((string)(this[this.tableoptimization_plan.scenario_nameColumn]));
                }
                set {
                    this[this.tableoptimization_plan.scenario_nameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte optimize_for {
                get {
                    return ((byte)(this[this.tableoptimization_plan.optimize_forColumn]));
                }
                set {
                    this[this.tableoptimization_plan.optimize_forColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int num_steps {
                get {
                    return ((int)(this[this.tableoptimization_plan.num_stepsColumn]));
                }
                set {
                    this[this.tableoptimization_plan.num_stepsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte mode_exec_id {
                get {
                    return ((byte)(this[this.tableoptimization_plan.mode_exec_idColumn]));
                }
                set {
                    this[this.tableoptimization_plan.mode_exec_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte explore_mode_id {
                get {
                    return ((byte)(this[this.tableoptimization_plan.explore_mode_idColumn]));
                }
                set {
                    this[this.tableoptimization_plan.explore_mode_idColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool is_active {
                get {
                    return ((bool)(this[this.tableoptimization_plan.is_activeColumn]));
                }
                set {
                    this[this.tableoptimization_plan.is_activeColumn] = value;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class optimization_explore_modeRowChangeEvent : System.EventArgs {
            
            private optimization_explore_modeRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_explore_modeRowChangeEvent(optimization_explore_modeRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_explore_modeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class optimization_mode_execRowChangeEvent : System.EventArgs {
            
            private optimization_mode_execRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_mode_execRowChangeEvent(optimization_mode_execRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_mode_execRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class optimization_optimize_forRowChangeEvent : System.EventArgs {
            
            private optimization_optimize_forRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_optimize_forRowChangeEvent(optimization_optimize_forRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_optimize_forRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class optimization_paramsRowChangeEvent : System.EventArgs {
            
            private optimization_paramsRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_paramsRowChangeEvent(optimization_paramsRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_paramsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class optimization_planRowChangeEvent : System.EventArgs {
            
            private optimization_planRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_planRowChangeEvent(optimization_planRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public optimization_planRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591